{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"index.md","title":"\u7b80\u4ecb"},{"location":"Algorithms/Using%20two%20stacks%20to%20Evaluate%20an%20Expression/","text":"Infix Expressions are harder for Computers to evaluate because of the additional work needed to decide precedence. Infix notation is how expressions are written and recognized by humans and, generally, input to programs. Given that they are harder to evaluate, they are generally converted to one of the two remaining forms. A very well known algorithm for converting an infix notation to a postfix notation is Shunting Yard Algorithm by Edgar Dijkstra. This algorithm takes as input an Infix Expression and produces a queue that has this expression converted to postfix notation. The same algorithm can be modified so that it outputs the result of the evaluation of expression instead of a queue. The trick is using two stacks instead of one, one for operands, and one for operators. 1. While there are still tokens to be read in, 1.1 Get the next token. 1.2 If the token is: 1.2.1 A number: push it onto the value stack. 1.2.2 A variable: get its value, and push onto the value stack. 1.2.3 A left parenthesis: push it onto the operator stack. 1.2.4 A right parenthesis: 1 While the thing on top of the operator stack is not a left parenthesis, 1 Pop the operator from the operator stack. 2 Pop the value stack twice, getting two operands. 3 Apply the operator to the operands, in the correct order. 4 Push the result onto the value stack. 2 Pop the left parenthesis from the operator stack, and discard it. 1.2.5 An operator (call it thisOp): 1 While the operator stack is not empty, and the top thing on the operator stack has the same or greater precedence as thisOp, 1 Pop the operator from the operator stack. 2 Pop the value stack twice, getting two operands. 3 Apply the operator to the operands, in the correct order. 4 Push the result onto the value stack. 2 Push thisOp onto the operator stack. 2. While the operator stack is not empty, 1 Pop the operator from the operator stack. 2 Pop the value stack twice, getting two operands. 3 Apply the operator to the operands, in the correct order. 4 Push the result onto the value stack. 3. At this point the operator stack should be empty, and the value stack should have only one value in it, which is the final result. Implementation: It should be clear that this algorithm runs in linear time \u2013 each number or operator is pushed onto and popped from Stack only once. /** * https://www.geeksforgeeks.org/expression-evaluation * <p> * Using two stacks , one for operands, and one for operators to Evaluate an Expression in one pass */ import java.util.Map; import java.util.Stack; import java.util.TreeMap; public class CalculatorX { private final static Map<Character, Integer> OPERATOR_MAP = new TreeMap<>(); static { // <Operator, Precedence> OPERATOR_MAP.put('+', 1); OPERATOR_MAP.put('-', 1); OPERATOR_MAP.put('*', 2); OPERATOR_MAP.put('/', 2); OPERATOR_MAP.put('^', 3); // power } public static double evaluate(String expression) { char[] tokens = expression.toCharArray(); // Stack for numbers: 'values' Stack<Double> values = new Stack<>(); // Stack for Operators: 'ops' Stack<Character> ops = new Stack<>(); for (int i = 0; i < tokens.length; i++) { // Current token is a whitespace, skip it if (Character.isWhitespace(tokens[i])) continue; // Current token is a number, push it to stack for numbers if (isDigit(tokens[i])) { StringBuffer sbuf = new StringBuffer(); // There may be more than one digits in number // while (i < tokens.length && tokens[i] >= '0' && tokens[i] <= '9') while (i < tokens.length && isDigit(tokens[i])) sbuf.append(tokens[i++]); values.push(Double.parseDouble(sbuf.toString())); /* right now the i points to the character next to the digit, since the for loop also increases the i, we would skip one token position; we need to decrease the value of i by 1 to correct the offset.*/ i--; } else if (tokens[i] == '(') { // Current token is an opening brace, push it to 'ops' ops.push(tokens[i]); } else if (tokens[i] == ')') { // Closing brace encountered, solve entire brace while (ops.peek() != '(') values.push(applyOp(ops.pop(), values.pop(), values.pop())); //Pop the left parenthesis from the stack and discard it if (ops.isEmpty() || ops.pop() != '(') { throw new IllegalArgumentException(\"The expression contained unbalanced parentheses \"); } } else if (isOperator(tokens[i])) { // Current token is an operator. /* While top of 'ops' has same or greater precedence to current token, which is an operator. Apply operator on top of 'ops' to top two elements in values stack*/ while (!ops.empty() && ops.peek() != '(' && precedence(ops.peek()) > precedence(tokens[i])) values.push(applyOp(ops.pop(), values.pop(), values.pop())); // Push current token to 'ops'. ops.push(tokens[i]); } else { throw new IllegalArgumentException(\"Invalid token found:\" + tokens[i]); } } // Entire expression has been parsed at this point, apply remaining ops to remaining values while (!ops.empty()) { char op = ops.pop(); if (op != '(') values.push(applyOp(op, values.pop(), values.pop())); else throw new IllegalArgumentException(\"The infixQ contained unbalanced parentheses \"); } // Top of 'values' contains result, return it return values.pop(); } private static boolean isOperator(char c) { return c == '+' || c == '-' || c == '*' || c == '/' || c == '^'; } private static boolean isDigit(char c) { // c >= '0' && c <= '9' || c == '.' return Character.isDigit(c) || c == '.'; } // Returns true if 'op2' has higher or same precedence as 'op1', otherwise returns false. public static int precedence(char op) { return OPERATOR_MAP.get(op); } // A utility method to apply an operator 'op' on operands 'a' and 'b'. Return the result. public static double applyOp(char op, double b, double a) { switch (op) { case '+': return a + b; case '-': return a - b; case '*': return a * b; case '/': if (b == 0) throw new UnsupportedOperationException(\"Cannot divide by zero\"); return a / b; case '^': return Math.pow(a, b); } return 0; } // Driver method to test above methods public static void main(String[] args) { System.out.println(CalculatorX.evaluate(\"10 + 2 * 6\")); System.out.println(CalculatorX.evaluate(\"1.01 * 2 + 12\")); System.out.println(CalculatorX.evaluate(\"100 * ( 2 + 12 )\")); System.out.println(CalculatorX.evaluate(\"100 * ( 2 + 12 ) / 14 + 2^3\")); System.out.println(CalculatorX.evaluate(\"2^3\")); } } https://www.geeksforgeeks.org/expression-evaluation/ \\","title":"Using two stacks to Evaluate an Expression"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/","text":"Using a Stack to Evaluate an Expression We often deal with arithmetic expressions written in what is called infix notation: Operand1 op Operand2 We have rules to indicate which operations take precedence over others, and we often use parentheses to override those rules. It is also quite possible to write arithmetic expressions using postfix notation: Operand1 Operand2 op With postfix notation, it is possible to use a stack to find the overall value of an infix expression by first converting it to postfix notation. Example: Suppose we have this infix expression Q: 5 * ( 6 + 2 ) - 12 / 4 The equivalent postfix expression P is: 5 6 2 + * 12 4 / - This discussion assumes all our operations are binary operations (2 arguments each). Notice that we also sometimes use unary operations such as ++ or -- or the unary + and -. We are not including the possibility of array elements in this discussion. (The subscript can be an expression which would have to be evaluated.) One way to think of an expression is as a list or sequence of items, each of which is a left parenthesis, right parenthesis, argument, or operator. An argument can be a constant or the name of a variable. Presumably it would be necessary at some point to replace each variable with its value. There are two algorithms involved. One converts an infix expression to postfix form, and the other evaluates a postfix expression. Each uses a stack. Transform an infix expression to postfix notation Suppose Q is an arithmetic expression in infix notation. We will create an equivalent postfix expression P by adding items to on the right of P. The new expression P will not contain any parentheses. We will use a stack in which each item may be a left parenthesis or the symbol for an operation. Start with an empty stack. We scan Q from left to right. While (we have not reached the end of Q) If (an operand is found) Add it to P End-If If (a left parenthesis is found) Push it onto the stack End-If If (a right parenthesis is found) While (the stack is not empty AND the top item is not a left parenthesis) Pop the stack and add the popped value to P End-While Pop the left parenthesis from the stack and discard it End-If If (an operator is found) While (the stack is not empty AND the top of the stack is not a left parenthesis AND precedence of the operator <= precedence of the top of the stack) Pop the stack and add the top value to P End-While Push the operator onto the stack End-If End-While While (the stack is not empty) Pop the stack and add the popped value to P End-While Notes: At the end, if there is still a left parenthesis at the top of the stack, or if we find a right parenthesis when the stack is empty, then Q contained unbalanced parentheses and is in error. Evaluate a postfix expression Suppose P is an arithmetic expression in postfix notation. We will evaluate it using a stack to hold the operands. Start with an empty stack. We scan P from left to right. While (we have not reached the end of P) If an operand is found push it onto the stack End-If If an operator is found Pop the stack and call the value A Pop the stack and call the value B Evaluate B op A using the operator just found. Push the resulting value onto the stack End-If End-While Pop the stack (this is the final value) Notes: At the end, there should be only one element left on the stack. This assumes the postfix expression is valid. How can this be implemented? Work like this is usually done by an assembler, compiler or interpreter. A programmer uses an expression in her or her code, and evaluating it is someone else's problem. Suppose it is our problem (maybe we are writing an interpreter). The interpreter is reading a line at a time from a file as a string, such as A = ((B + C) / 3 - 47 % E) * (F + 8) The string needs to be parsed--that is, we need to break it up into substrings, each of which is one meaningful part. These substrings are often called tokens. The tokens are separated by spaces, in many cases, but also a token ends if we find a left or right parenthesis or the symbol for an operator. Thus for instance, in the above example, we have \"E)\", and this consists of two tokens \"E\" and \")\". Bear in mind that the symbol for an operator can be more than one character. We then have a list of tokens, perhaps in an array or a linked list. Somewhere we will have an Evaluate function which takes such a list as an argument and returns a numeric value. A java implementation /** * A perfect calculator * <p> * Dijkstra\u2019s Two-Stack Algorithm for Expression Evaluation * <p> * Reference: * http://faculty.cs.niu.edu/~hutchins/csci241/eval.htm * https://en.wikipedia.org/wiki/Shunting_yard_algorithm * Discrete mathmatics and its application 7th --> 11.3 Tree Travesal * * <p> * % java Calculator * 2 + ( 3 + 4 ) * ( 5 * 6 ) * 212.0 * <p> * 1 + ( 2 + 3 ) * ( 4 * 5 ) * 101.0 * <p> * ( 1 + sqrt( 5.0+4*3+sqrt(3+30*2) ) ) / 2.0 * 2.996860725651001 * <p> * ( 1 + sqrt ( 5.0 ) ) / 2.0 * 1.618033988749895 */ import java.util.ArrayList; import java.util.List; import java.util.Map; import java.util.Scanner; import java.util.Stack; import java.util.TreeMap; public class Calculator { // key is operator, value is precedence private final static Map<String, Integer> OPERATOR_MAP = new TreeMap<>(); static { // <Operator, Precedence> OPERATOR_MAP.put(\"+\", 1); OPERATOR_MAP.put(\"-\", 1); OPERATOR_MAP.put(\"*\", 2); OPERATOR_MAP.put(\"/\", 2); OPERATOR_MAP.put(\"^\", 3); // power OPERATOR_MAP.put(\"sqrt\", 4); OPERATOR_MAP.put(\"sin\", 4); OPERATOR_MAP.put(\"cos\", 4); OPERATOR_MAP.put(\"log\", 4); //natural logarithm } public Calculator() { } public double evaluate(String expression) { if (expression == null || expression.length() == 0) { throw new IllegalArgumentException(\"empty expression\"); } return evaluatePostfix(infixToPostfix(tokenizeExpression(expression))); } private List<String> tokenizeExpression(String expression) { List<String> infixQ = new ArrayList<>(); StringBuilder buf = new StringBuilder(); int len = expression.length(); for (int i = 0; i < len; i++) { char c = expression.charAt(i); if (Character.isWhitespace(c)) { if (buf.length() > 0) { infixQ.add(buf.toString()); buf = new StringBuilder(); } continue; } if (isSymbol(c)) { if (buf.length() > 0) { infixQ.add(buf.toString()); buf = new StringBuilder(); } infixQ.add(String.valueOf(c)); } else buf.append(c); } if (buf.length() > 0) infixQ.add(buf.toString()); return infixQ; } /** * Transform an infix queue to postfix queue * * @param infixQ * @return */ private List<String> infixToPostfix(List<String> infixQ) { if (infixQ == null || infixQ.isEmpty()) { throw new IllegalArgumentException(\"empty infixQ\"); } List<String> postfixQ = new ArrayList<>(); //operator stack , a stack in which each item may be a left parenthesis or the symbol for an operation. Stack<String> stack = new Stack<String>(); for (String token : infixQ) { //If (an operand is found) Add it to P if (isNumeric(token)) { postfixQ.add(token); } else if (token.equals(\"(\")) { stack.push(token); } else if (token.equals(\")\")) { while (!stack.isEmpty() && !stack.peek().equals(\"(\")) { postfixQ.add(stack.pop()); } //Pop the left parenthesis from the stack and discard it if (stack.isEmpty() || !stack.pop().equals(\"(\")) { throw new IllegalArgumentException(\"The infixQ contained unbalanced parentheses \"); } } else if (isOperator(token)) { while (!stack.isEmpty() && !stack.peek().equals(\"(\") && precedence(stack.peek()) >= precedence(token)) { postfixQ.add(stack.pop()); } stack.push(token); } else { throw new IllegalArgumentException(\"Invalid token found:\" + token); } } while (!stack.isEmpty()) { String op = stack.pop(); if (!op.equals(\"(\")) postfixQ.add(op); else throw new IllegalArgumentException(\"The infixQ contained unbalanced parentheses \"); } return postfixQ; } private static boolean isOperator(String token) { return OPERATOR_MAP.containsKey(token); } private static boolean isSymbol(char c) { return c == '+' || c == '-' || c == '*' || c == '/' || c == '^' || c == '(' || c == ')' || c == ','; } /** * Evaluate a postfix queue * * @param postfixQ * @return */ private Double evaluatePostfix(List<String> postfixQ) { if (postfixQ == null || postfixQ.isEmpty()) { throw new IllegalArgumentException(\"empty postfixQ\"); } //operand stack, a stack to hold the operands. Stack<Double> stack = new Stack<>(); for (String token : postfixQ) { //If an operand is found push it onto the stack if (isNumeric(token)) { stack.push(Double.parseDouble(token)); } else if (isOperator(token)) { //If an operator is found double v = stack.pop(); switch (token) { case \"+\": v = stack.pop() + v; break; case \"-\": v = stack.pop() - v; break; case \"*\": v = stack.pop() * v; break; case \"/\": v = stack.pop() / v; break; case \"^\": v = Math.pow(stack.pop(), v); break; case \"sqrt\": v = Math.sqrt(v); break; case \"sin\": v = Math.sin(degreeToRadian(v)); break; case \"cos\": v = Math.cos(degreeToRadian(v)); break; case \"log\": v = Math.log(v); break; default: break; } stack.push(v); } else { throw new IllegalArgumentException(\" invalid token found:\" + token); } } //At the end, there should be only one element left on the stack. if (stack.size() != 1) { throw new IllegalArgumentException(\"Invalid postfix\"); } return stack.pop(); } private int precedence(String token) { return OPERATOR_MAP.get(token); } private static double degreeToRadian(double degree) { return degree / 180 * Math.PI; } private static boolean isNumeric(String token) { if (token == null) { return false; } try { Double.parseDouble(token); } catch (NumberFormatException nfe) { return false; } return true; } /** * match a number with optional '-' and decimal. */ private static boolean isNumeric2(String str) { return str.matches(\"-?\\\\d+(\\\\.\\\\d+)?\"); } private double debug(String expression) { System.out.println(\"---expression---\"); System.out.println(expression); List<String> infixQ = tokenizeExpression(expression); System.out.println(\"---tokenize---\"); for (String token : infixQ) { System.out.print(token + \" \"); } System.out.println(\"\\n---transform to postfix---\"); List<String> postfixQ = infixToPostfix(infixQ); for (String token : postfixQ) { System.out.print(token + \" \"); } System.out.println(); return evaluatePostfix(postfixQ); } private static void simulate() { // BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); // String line = br.readLine(); Calculator cal = new Calculator(); Scanner scanner = new Scanner(System.in, \"UTF-8\"); while (scanner.hasNextLine()) { String expression = scanner.nextLine().trim(); if (expression.length() == 0) continue; if (expression.equals(\"quit\")) break; System.out.println(cal.evaluate(expression)); } } public static void main(String[] args) { // simulate(); test1(); // test2(); // testCorrect(); } private static void test1() { String expression = \"3+4*2-2^3\"; //String expression = \"3 4 2 * + 1 - \"; // String expression = \"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\"; Calculator cal = new Calculator(); System.out.println(\"value:\" + cal.debug(expression)); } private static void test2() { List<String> expressions = new ArrayList<>(); expressions.add(\"(8+9)^2+(8-4)/3\"); expressions.add(\"(2+sqrt(5+4))\"); expressions.add(\"2 + ( 3 + 4 ) * ( 5 * 6 )\"); expressions.add(\"1 + ( 2 + 3 ) * ( 4 * 5 )\"); expressions.add(\"(1 + sqrt(5.0+4*3+sqrt(30*2+3)) ) / 2.0\"); expressions.add(\"(1 + log( 5.0+4*3+sqrt(30*2+3) ) ) / 2.0\"); expressions.add(\"(1 + sqrt ( 5.0 ) ) / 2.0\"); expressions.add(\"6*sin(30)\"); expressions.add(\"6*(5+4+3)\"); expressions.add(\"2*(5+4+3+2*2*2+1)\"); expressions.add(\"3 + 4 * 2 - 1\"); expressions.add(\"3 + 4 * (2 - 1)\"); expressions.add(\"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\"); expressions.add(\"1 + 3 + 2 * 4 * (2 - 1)\"); // expressions.add(\"\"); Calculator cal = new Calculator(); for (String expression : expressions) { System.out.println(expression + \" = \" + cal.evaluate(expression)); } } private static void testCorrect() { Calculator cal = new Calculator(); if (cal.evaluate(\"(8+9)^2+(8-4)/3\") != (Math.pow(8 + 9, 2) + (8.0 - 4.0) / 3)) { throw new Error(\"false\"); } if (cal.evaluate(\"(2+sqrt(5+4))\") != ((2 + Math.sqrt(5 + 4)))) { throw new Error(\"false\"); } if (cal.evaluate(\"2 + ( 3 + 4 ) * ( 5 * 6 )\") != (2 + (3 + 4) * (5 * 6))) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + sqrt(5.0+4*3+sqrt(30*2+3)) ) / 2.0\") != ((1 + Math.sqrt(5.0 + 4 * 3 + Math.sqrt(30 * 2 + 3))) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + log( 5.0+4*3+sqrt(30*2+3) ) ) / 2.0\") != ((1 + Math.log(5.0 + 4 * 3 + Math.sqrt(30 * 2 + 3))) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + sqrt ( 5.0 ) ) / 2.0\") != ((1 + Math.sqrt(5.0)) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"6*sin(30)\") != (6 * Math.sin(degreeToRadian(30)))) { throw new Error(cal.evaluate(\"6*sin(30)\") + \" = \" + (6 * Math.sin(degreeToRadian(30)))); } if (cal.evaluate(\"6*(5+4+3)\") != (6 * (5 + 4 + 3))) { throw new Error(\"false\"); } if (cal.evaluate(\"2*(5+4+3+2*2*2+1)\") != (2 * (5 + 4 + 3 + 2 * 2 * 2 + 1))) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * 2 - 1\") != (3 + 4 * 2 - 1)) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * (2 - 1)\") != (3 + 4 * (2 - 1))) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\") != (3 + 4 * 2 / Math.pow(Math.pow(1 - 5, 2), 3))) { throw new Error(\"false\"); } if (cal.evaluate(\"1 + 3 + 2 * 4 * (2 - 1)\") != (1 + 3 + 2 * 4 * (2 - 1))) { throw new Error(\"false\"); } System.out.println(\"Pass!\"); } } http://faculty.cs.niu.edu/\\~hutchins/csci241/eval.htm https://en.wikipedia.org/wiki/Shunting_yard_algorithm https://www.geeksforgeeks.org/expression-evaluation/ \\","title":"Using a Stack to Evaluate an Expression"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/#using-a-stack-to-evaluate-an-expression","text":"We often deal with arithmetic expressions written in what is called infix notation: Operand1 op Operand2 We have rules to indicate which operations take precedence over others, and we often use parentheses to override those rules. It is also quite possible to write arithmetic expressions using postfix notation: Operand1 Operand2 op With postfix notation, it is possible to use a stack to find the overall value of an infix expression by first converting it to postfix notation. Example: Suppose we have this infix expression Q: 5 * ( 6 + 2 ) - 12 / 4 The equivalent postfix expression P is: 5 6 2 + * 12 4 / - This discussion assumes all our operations are binary operations (2 arguments each). Notice that we also sometimes use unary operations such as ++ or -- or the unary + and -. We are not including the possibility of array elements in this discussion. (The subscript can be an expression which would have to be evaluated.) One way to think of an expression is as a list or sequence of items, each of which is a left parenthesis, right parenthesis, argument, or operator. An argument can be a constant or the name of a variable. Presumably it would be necessary at some point to replace each variable with its value. There are two algorithms involved. One converts an infix expression to postfix form, and the other evaluates a postfix expression. Each uses a stack.","title":"Using a Stack to Evaluate an Expression"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/#transform-an-infix-expression-to-postfix-notation","text":"Suppose Q is an arithmetic expression in infix notation. We will create an equivalent postfix expression P by adding items to on the right of P. The new expression P will not contain any parentheses. We will use a stack in which each item may be a left parenthesis or the symbol for an operation. Start with an empty stack. We scan Q from left to right. While (we have not reached the end of Q) If (an operand is found) Add it to P End-If If (a left parenthesis is found) Push it onto the stack End-If If (a right parenthesis is found) While (the stack is not empty AND the top item is not a left parenthesis) Pop the stack and add the popped value to P End-While Pop the left parenthesis from the stack and discard it End-If If (an operator is found) While (the stack is not empty AND the top of the stack is not a left parenthesis AND precedence of the operator <= precedence of the top of the stack) Pop the stack and add the top value to P End-While Push the operator onto the stack End-If End-While While (the stack is not empty) Pop the stack and add the popped value to P End-While Notes: At the end, if there is still a left parenthesis at the top of the stack, or if we find a right parenthesis when the stack is empty, then Q contained unbalanced parentheses and is in error.","title":"Transform an infix expression to postfix notation"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/#evaluate-a-postfix-expression","text":"Suppose P is an arithmetic expression in postfix notation. We will evaluate it using a stack to hold the operands. Start with an empty stack. We scan P from left to right. While (we have not reached the end of P) If an operand is found push it onto the stack End-If If an operator is found Pop the stack and call the value A Pop the stack and call the value B Evaluate B op A using the operator just found. Push the resulting value onto the stack End-If End-While Pop the stack (this is the final value) Notes: At the end, there should be only one element left on the stack. This assumes the postfix expression is valid.","title":"Evaluate a postfix expression"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/#how-can-this-be-implemented","text":"Work like this is usually done by an assembler, compiler or interpreter. A programmer uses an expression in her or her code, and evaluating it is someone else's problem. Suppose it is our problem (maybe we are writing an interpreter). The interpreter is reading a line at a time from a file as a string, such as A = ((B + C) / 3 - 47 % E) * (F + 8) The string needs to be parsed--that is, we need to break it up into substrings, each of which is one meaningful part. These substrings are often called tokens. The tokens are separated by spaces, in many cases, but also a token ends if we find a left or right parenthesis or the symbol for an operator. Thus for instance, in the above example, we have \"E)\", and this consists of two tokens \"E\" and \")\". Bear in mind that the symbol for an operator can be more than one character. We then have a list of tokens, perhaps in an array or a linked list. Somewhere we will have an Evaluate function which takes such a list as an argument and returns a numeric value.","title":"How can this be implemented?"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/#a-java-implementation","text":"/** * A perfect calculator * <p> * Dijkstra\u2019s Two-Stack Algorithm for Expression Evaluation * <p> * Reference: * http://faculty.cs.niu.edu/~hutchins/csci241/eval.htm * https://en.wikipedia.org/wiki/Shunting_yard_algorithm * Discrete mathmatics and its application 7th --> 11.3 Tree Travesal * * <p> * % java Calculator * 2 + ( 3 + 4 ) * ( 5 * 6 ) * 212.0 * <p> * 1 + ( 2 + 3 ) * ( 4 * 5 ) * 101.0 * <p> * ( 1 + sqrt( 5.0+4*3+sqrt(3+30*2) ) ) / 2.0 * 2.996860725651001 * <p> * ( 1 + sqrt ( 5.0 ) ) / 2.0 * 1.618033988749895 */ import java.util.ArrayList; import java.util.List; import java.util.Map; import java.util.Scanner; import java.util.Stack; import java.util.TreeMap; public class Calculator { // key is operator, value is precedence private final static Map<String, Integer> OPERATOR_MAP = new TreeMap<>(); static { // <Operator, Precedence> OPERATOR_MAP.put(\"+\", 1); OPERATOR_MAP.put(\"-\", 1); OPERATOR_MAP.put(\"*\", 2); OPERATOR_MAP.put(\"/\", 2); OPERATOR_MAP.put(\"^\", 3); // power OPERATOR_MAP.put(\"sqrt\", 4); OPERATOR_MAP.put(\"sin\", 4); OPERATOR_MAP.put(\"cos\", 4); OPERATOR_MAP.put(\"log\", 4); //natural logarithm } public Calculator() { } public double evaluate(String expression) { if (expression == null || expression.length() == 0) { throw new IllegalArgumentException(\"empty expression\"); } return evaluatePostfix(infixToPostfix(tokenizeExpression(expression))); } private List<String> tokenizeExpression(String expression) { List<String> infixQ = new ArrayList<>(); StringBuilder buf = new StringBuilder(); int len = expression.length(); for (int i = 0; i < len; i++) { char c = expression.charAt(i); if (Character.isWhitespace(c)) { if (buf.length() > 0) { infixQ.add(buf.toString()); buf = new StringBuilder(); } continue; } if (isSymbol(c)) { if (buf.length() > 0) { infixQ.add(buf.toString()); buf = new StringBuilder(); } infixQ.add(String.valueOf(c)); } else buf.append(c); } if (buf.length() > 0) infixQ.add(buf.toString()); return infixQ; } /** * Transform an infix queue to postfix queue * * @param infixQ * @return */ private List<String> infixToPostfix(List<String> infixQ) { if (infixQ == null || infixQ.isEmpty()) { throw new IllegalArgumentException(\"empty infixQ\"); } List<String> postfixQ = new ArrayList<>(); //operator stack , a stack in which each item may be a left parenthesis or the symbol for an operation. Stack<String> stack = new Stack<String>(); for (String token : infixQ) { //If (an operand is found) Add it to P if (isNumeric(token)) { postfixQ.add(token); } else if (token.equals(\"(\")) { stack.push(token); } else if (token.equals(\")\")) { while (!stack.isEmpty() && !stack.peek().equals(\"(\")) { postfixQ.add(stack.pop()); } //Pop the left parenthesis from the stack and discard it if (stack.isEmpty() || !stack.pop().equals(\"(\")) { throw new IllegalArgumentException(\"The infixQ contained unbalanced parentheses \"); } } else if (isOperator(token)) { while (!stack.isEmpty() && !stack.peek().equals(\"(\") && precedence(stack.peek()) >= precedence(token)) { postfixQ.add(stack.pop()); } stack.push(token); } else { throw new IllegalArgumentException(\"Invalid token found:\" + token); } } while (!stack.isEmpty()) { String op = stack.pop(); if (!op.equals(\"(\")) postfixQ.add(op); else throw new IllegalArgumentException(\"The infixQ contained unbalanced parentheses \"); } return postfixQ; } private static boolean isOperator(String token) { return OPERATOR_MAP.containsKey(token); } private static boolean isSymbol(char c) { return c == '+' || c == '-' || c == '*' || c == '/' || c == '^' || c == '(' || c == ')' || c == ','; } /** * Evaluate a postfix queue * * @param postfixQ * @return */ private Double evaluatePostfix(List<String> postfixQ) { if (postfixQ == null || postfixQ.isEmpty()) { throw new IllegalArgumentException(\"empty postfixQ\"); } //operand stack, a stack to hold the operands. Stack<Double> stack = new Stack<>(); for (String token : postfixQ) { //If an operand is found push it onto the stack if (isNumeric(token)) { stack.push(Double.parseDouble(token)); } else if (isOperator(token)) { //If an operator is found double v = stack.pop(); switch (token) { case \"+\": v = stack.pop() + v; break; case \"-\": v = stack.pop() - v; break; case \"*\": v = stack.pop() * v; break; case \"/\": v = stack.pop() / v; break; case \"^\": v = Math.pow(stack.pop(), v); break; case \"sqrt\": v = Math.sqrt(v); break; case \"sin\": v = Math.sin(degreeToRadian(v)); break; case \"cos\": v = Math.cos(degreeToRadian(v)); break; case \"log\": v = Math.log(v); break; default: break; } stack.push(v); } else { throw new IllegalArgumentException(\" invalid token found:\" + token); } } //At the end, there should be only one element left on the stack. if (stack.size() != 1) { throw new IllegalArgumentException(\"Invalid postfix\"); } return stack.pop(); } private int precedence(String token) { return OPERATOR_MAP.get(token); } private static double degreeToRadian(double degree) { return degree / 180 * Math.PI; } private static boolean isNumeric(String token) { if (token == null) { return false; } try { Double.parseDouble(token); } catch (NumberFormatException nfe) { return false; } return true; } /** * match a number with optional '-' and decimal. */ private static boolean isNumeric2(String str) { return str.matches(\"-?\\\\d+(\\\\.\\\\d+)?\"); } private double debug(String expression) { System.out.println(\"---expression---\"); System.out.println(expression); List<String> infixQ = tokenizeExpression(expression); System.out.println(\"---tokenize---\"); for (String token : infixQ) { System.out.print(token + \" \"); } System.out.println(\"\\n---transform to postfix---\"); List<String> postfixQ = infixToPostfix(infixQ); for (String token : postfixQ) { System.out.print(token + \" \"); } System.out.println(); return evaluatePostfix(postfixQ); } private static void simulate() { // BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); // String line = br.readLine(); Calculator cal = new Calculator(); Scanner scanner = new Scanner(System.in, \"UTF-8\"); while (scanner.hasNextLine()) { String expression = scanner.nextLine().trim(); if (expression.length() == 0) continue; if (expression.equals(\"quit\")) break; System.out.println(cal.evaluate(expression)); } } public static void main(String[] args) { // simulate(); test1(); // test2(); // testCorrect(); } private static void test1() { String expression = \"3+4*2-2^3\"; //String expression = \"3 4 2 * + 1 - \"; // String expression = \"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\"; Calculator cal = new Calculator(); System.out.println(\"value:\" + cal.debug(expression)); } private static void test2() { List<String> expressions = new ArrayList<>(); expressions.add(\"(8+9)^2+(8-4)/3\"); expressions.add(\"(2+sqrt(5+4))\"); expressions.add(\"2 + ( 3 + 4 ) * ( 5 * 6 )\"); expressions.add(\"1 + ( 2 + 3 ) * ( 4 * 5 )\"); expressions.add(\"(1 + sqrt(5.0+4*3+sqrt(30*2+3)) ) / 2.0\"); expressions.add(\"(1 + log( 5.0+4*3+sqrt(30*2+3) ) ) / 2.0\"); expressions.add(\"(1 + sqrt ( 5.0 ) ) / 2.0\"); expressions.add(\"6*sin(30)\"); expressions.add(\"6*(5+4+3)\"); expressions.add(\"2*(5+4+3+2*2*2+1)\"); expressions.add(\"3 + 4 * 2 - 1\"); expressions.add(\"3 + 4 * (2 - 1)\"); expressions.add(\"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\"); expressions.add(\"1 + 3 + 2 * 4 * (2 - 1)\"); // expressions.add(\"\"); Calculator cal = new Calculator(); for (String expression : expressions) { System.out.println(expression + \" = \" + cal.evaluate(expression)); } } private static void testCorrect() { Calculator cal = new Calculator(); if (cal.evaluate(\"(8+9)^2+(8-4)/3\") != (Math.pow(8 + 9, 2) + (8.0 - 4.0) / 3)) { throw new Error(\"false\"); } if (cal.evaluate(\"(2+sqrt(5+4))\") != ((2 + Math.sqrt(5 + 4)))) { throw new Error(\"false\"); } if (cal.evaluate(\"2 + ( 3 + 4 ) * ( 5 * 6 )\") != (2 + (3 + 4) * (5 * 6))) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + sqrt(5.0+4*3+sqrt(30*2+3)) ) / 2.0\") != ((1 + Math.sqrt(5.0 + 4 * 3 + Math.sqrt(30 * 2 + 3))) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + log( 5.0+4*3+sqrt(30*2+3) ) ) / 2.0\") != ((1 + Math.log(5.0 + 4 * 3 + Math.sqrt(30 * 2 + 3))) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + sqrt ( 5.0 ) ) / 2.0\") != ((1 + Math.sqrt(5.0)) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"6*sin(30)\") != (6 * Math.sin(degreeToRadian(30)))) { throw new Error(cal.evaluate(\"6*sin(30)\") + \" = \" + (6 * Math.sin(degreeToRadian(30)))); } if (cal.evaluate(\"6*(5+4+3)\") != (6 * (5 + 4 + 3))) { throw new Error(\"false\"); } if (cal.evaluate(\"2*(5+4+3+2*2*2+1)\") != (2 * (5 + 4 + 3 + 2 * 2 * 2 + 1))) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * 2 - 1\") != (3 + 4 * 2 - 1)) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * (2 - 1)\") != (3 + 4 * (2 - 1))) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\") != (3 + 4 * 2 / Math.pow(Math.pow(1 - 5, 2), 3))) { throw new Error(\"false\"); } if (cal.evaluate(\"1 + 3 + 2 * 4 * (2 - 1)\") != (1 + 3 + 2 * 4 * (2 - 1))) { throw new Error(\"false\"); } System.out.println(\"Pass!\"); } } http://faculty.cs.niu.edu/\\~hutchins/csci241/eval.htm https://en.wikipedia.org/wiki/Shunting_yard_algorithm https://www.geeksforgeeks.org/expression-evaluation/ \\","title":"A java implementation"},{"location":"GCC/GCC%20Linking/","text":"\u672c\u7ec3\u4e60\u91c7\u7528\u4e0b\u9762\u56db\u4e2aC\u6587\u4ef6\uff0c addvec.c multvec.c \u548c vector.h \u662f\u5e93\u6587\u4ef6\uff0c main.c\u662f\u5f15\u7528\u5e93\u51fd\u6570\u7684\u6587\u4ef6 vector.h /* prototypes for libvector */ void addvec(int *x, int *y, int *z, int n); void multvec(int *x, int *y, int *z, int n); int getcount(); addvec.c int addcnt = 0; void addvec(int *x, int *y, int *z, int n) { int i; addcnt++; for (i = 0; i < n; i++) z[i] = x[i] + y[i]; } multvec.c int multcnt = 0; void multvec(int *x, int *y, int *z, int n) { int i; multcnt++; for (i = 0; i < n; i++) z[i] = x[i] * y[i]; } main.c #include <stdio.h> #include \"vector.h\" int x[2] = {1, 2}; int y[2] = {3, 4}; int z[2]; int main() { addvec(x, y, z, 2); printf(\"z = [%d %d]\\n\", z[0], z[1]); return 0; } Linking with Static Libraries \u7f16\u8bd1\u5e93\u6587\u4ef6\uff0c\u5e76\u6253\u5305\u6210\u9759\u6001\u5e93 # create a static library libvector.a gcc -c addvec.c multvec.c ar rcs libvector.a addvec.o multvec.o \u6784\u5efa\u5f15\u7528\u9759\u6001\u5e93\u7684\u53ef\u6267\u884c\u6587\u4ef6 # build the executable gcc -o prog main.c ./libvector.a \u6216\u8005\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4e5f\u662f\u4e00\u6837\u7684 gcc -o prog main.c -L. -lvector \u53c2\u6570\u2018-lvector\u2019\u662flibvector.a\u7684\u7b80\u7565\u8868\u793a\u65b9\u5f0f\uff0c\u53c2\u6570'-L.' \u544a\u8bc9linker\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u5bfb\u627elibvector.a. \u6267\u884c\u547d\u4ee4 objdump -d prog \u53ef\u4ee5\u53d1\u73b0\u53ea\u6709addvec\u6a21\u5757\u88ab\u5408\u5e76\u5230\u6700\u540e\u7684prog\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u4e86\uff0c\u800cmultvec\u6a21\u5757 \u91cc\u7684\u65b9\u6cd5\u56e0\u4e3a\u6ca1\u6709\u88ab\u5f15\u7528\u5230\u6240\u4ee5\u6ca1\u6709\u88ab\u5408\u5e76\u8fdb\u53bb\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u51cf\u5c0f\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f \u8fd0\u884c $ ./prog z = [4 6] \u5982\u679c\u94fe\u63a5\u7684\u8fc7\u7a0b\u52a0 '-static' \u9009\u9879\u8868\u793a\u9488\u5bf9\u7cfb\u7edf\u5e93\u5f15\u7528\u4e5f\u4ee5\u9759\u6001\u5e93\u7684\u65b9\u5f0f\u5f15\u5165. The '-static' argument tells the compiler driver that the linker should build a fully linked executable object file that can be loaded into memory and run without any further linking at load time. \u5982\u4e0b\u6240\u793a\uff1a gcc -static -o prog main.c -L. -lvector Dynamic Linking with Shared Libraries \u9759\u6001\u5e93\u4e91\u52a8\u6001\u7684\u5e93\u533a\u522b\u662f\u4ec0\u4e48\u5462\uff1f \u5f15\u7528\u9759\u6001\u5e93\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u5b8c\u5168\u94fe\u63a5\u7684\u6267\u884c\u6587\u4ef6\uff0c\u8fd0\u884c\u7684\u65f6\u5019\u52a0\u8f7d\u5668\u53ef\u4ee5\u76f4\u63a5\u62f7\u8d1d\u5230\u5185\u5b58\u8fd0\u884c\uff1b\u800c\u5f15\u7528\u52a8\u6001\u5171\u4eab\u5e93\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u90e8\u5206\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u52a0\u8f7d\u5668\u5728\u52a0\u8f7d\u8be5\u6587\u4ef6\u7684\u65f6\u5019\u9700\u8981\u5148\u4ea4\u7531\u94fe\u63a5\u5668\u8fdb\u884c\u8fdb\u4e00\u6b65\u94fe\u63a5\u5904\u7406\uff08reloacation\uff09\uff0c\u94fe\u63a5\u5904\u7406\u5b8c\u540e\u624d\u53ef\u8fd0\u884c\u3002 \u5f15\u7528\u9759\u6001\u5e93\u7f16\u8bd1\uff0c\u9759\u6001\u5e93\u4e2d\u88ab\u76ee\u6807\u6267\u884c\u6587\u4ef6\u6240\u5f15\u7528\u7684\u6a21\u5757\u90fd\u4f1a\u88ab\u62f7\u8d1d\u5230\u76ee\u6807\u6267\u884c\u6587\u4ef6\u4e2d\u6765\uff1b\u800c\u5f15\u7528\u52a8\u6001\u5e93\u8fdb\u884c\u7f16\u8bd1\u52a8\u6001\u5e93\u91cc\u88ab\u5f15\u7528\u7684\u6a21\u5757\u4e0d\u4f1a\u88ab\u62f7\u8d1d\uff0c\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5e93\u91cc\u9762\u7684\u6a21\u5757\u53ea\u6709\u4e00\u4efd\u5168\u5c40\u62f7\u8d1d\uff0c\u6240\u6709\u6267\u884c\u6587\u4ef6\u5728\u8fd0\u884c\u65f6\u90fd\u5f15\u7528\u540c\u4e00\u4efd\u62f7\u8d1d\u3002 \u4e0b\u9762\u5220\u9664'libvector.a'\uff0c \u7136\u540e\u6d4b\u8bd5\u4e00\u4e0b\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u6784\u5efa\u8fc7\u7a0b\u3002 \u7f16\u8bd1\u53ef\u5171\u4eab\u7684libvector.so \u5e93\u6587\u4ef6 gcc -shared -fpic -o libvector.so addvec.c multvec.c The '-fpic' flag directs the compiler to generate position-independent code. The '-shared' flag directs the linker to create a shared object file. \u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u5b8c\u6210\u4e86so\u5e93\u6587\u4ef6\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u628a\u5b83\u94fe\u63a5\u7684\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u3002 \u6784\u5efa\u5f15\u7528\u52a8\u6001\u5e93\u7684\u53ef\u6267\u884c\u6587\u4ef6 gcc -o prog2 main.c ./libvector.so \u8fd9\u5c31\u6784\u5efa\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u6267\u884c ldd prog2 \u67e5\u770b\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u94fe\u63a5\u72b6\u6001\u3002 $ ldd prog2 linux-vdso.so.1 (0x00007ffc79fa5000) ./libvector.so (0x00007f472cad5000) libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f472c6e4000) /lib64/ld-linux-x86-64.so.2 (0x00007f472ced9000) \u8fd0\u884c $ ./prog2 z = [4 6] \u4f46\u662f\u5047\u5982\u6211\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u5bf9\u7528\u52a8\u6001\u5e93\u8fdb\u884c\u94fe\u63a5\uff0c gcc -o prog3 main.c -L. -lvector \u6216\u8005,\u540c\u6837\u662f\u662f\u524d\u9762\u7684\u90a3\u79cd\u65b9\u5f0f\uff0c\u4f46\u662flibvector.so\u524d\u9762\u7684\u8def\u5f84'./'\u53bb\u6389 gcc -o prog2 main.c libvector.so \u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f \u8fd0\u884c\uff0c\u53d1\u73b0\u62a5\u9519\u4e86 $ ./prog3 ./prog3: error while loading shared libraries: libvector.so: cannot open shared object file: No such file or directory \u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 ldd prog3 \uff0c\u67e5\u770b\u94fe\u63a5\u72b6\u6001 $ ldd prog3 linux-vdso.so.1 (0x00007ffcf5ba8000) libvector.so => not found libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f15d3199000) /lib64/ld-linux-x86-64.so.2 (0x00007f15d378c000) \u53d1\u73b0\u201c libvector.so \u201d\u90a3\u91cc\u663e\u793a\u201cnot found\u201d\uff0c \u610f\u601d\u662f\u627e\u4e0d\u5230libvector.so \u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff0c\u539f\u6765\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7f16\u8bd1\u751f\u4ea7\u7684\u76ee\u6807\u6267\u884c\u6587\u4ef6\u6ca1\u6709\u8def\u5f84\u4fe1\u606f\uff0c\u2018-L.\u2019\u4ec5\u4ec5\u662f\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u7528\u5230\u7684\uff0c\u5728\u52a0\u8f7d\u8fd0\u884c\u7684\u65f6\u5019\u94fe\u63a5\u5668\u5148\u8981\u5230\u7cfb\u7edf\u8bbe\u5b9a\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u4e2d\u67e5\u627e\u5f15\u7528\u5230\u7684so\u6587\u4ef6\u4ee5\u8fdb\u884c\u94fe\u63a5\u5904\u7406\uff08relocation\uff09\uff0c\u800c\u6211\u4eec\u7684libvector.so\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u4e0d\u5728\u7cfb\u7edf\u8bbe\u5b9a\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u4e2d\uff0c\u6240\u4ee5\u627e\u4e0d\u5230\u3002\u9759\u6001\u94fe\u63a5\u5e93\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u5462\uff0c \u56e0\u4e3a\u5f15\u7528\u9759\u6001\u94fe\u63a5\u5e93\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u751f\u6210\u7684\u662f\u4e00\u4e2a\u5b8c\u5168\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u662f\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\uff08\u62f7\u8d1d\uff09\u5230\u5185\u5b58\u8fd0\u884c\u7684\uff1b\u800c\u5f15\u7528\u52a8\u6001\u94fe\u63a5\u5e93\u8fdb\u884c\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u90e8\u5206\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u52a0\u8f7d\u5668\u5728\u52a0\u8f7d\u8fd9\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u8981\u5148\u4ea4\u7ed9\u94fe\u63a5\u5668\u8fdb\u884c\u94fe\u63a5\u5904\u7406\uff08relocation\uff09,\u94fe\u63a5\u5904\u7406\u5b8c\u6210\u540e\u518d\u5f00\u59cb\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u3002 \u5982\u4f55\u89e3\u51b3\u5462\uff0c\u56e0\u4e3a\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u662f\u5728\u201c/etc/ld.so.conf\u201d\u6587\u4ef6\u4e2d\u8bbe\u5b9a\u7684\uff0c\u53ef\u4ee5\u628a\u201c./libvector.so\u201d\u6240\u5728\u76ee\u5f55\u7684\u8def\u5f84\u52a0\u5165\u5230\u7cfb\u7edf\u7684\u201c/etc/ld.so.conf\u201d\u6587\u4ef6\u4e2d\uff0c\u52a0\u5165\u4e4b\u540e\u8fd8\u9700\u8981\u6267\u884c sudo ldconfig \u547d\u4ee4\u8ba9\u65b0\u8def\u5f84\u751f\u6548\u3002 \u6216\u8005\uff0c \u4e5f\u53ef\u4ee5\u7528 export directory_of_library \u7684\u65b9\u5f0f\uff0c\u5982 export LD_LIBRARY_PATH=/home/vagrant/test \u5b8c\u6210\u52a8\u6001\u94fe\u63a5\u5e93\u8def\u5f84\u8bbe\u7f6e\u540e\uff0c\u518d\u6267\u884cldd\u547d\u4ee4 $ ldd ./prog3 linux-vdso.so.1 (0x00007ffe22fa3000) libvector.so => /home/vagrant/test/libvector.so (0x00007fe25cd03000) libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fe25c912000) /lib64/ld-linux-x86-64.so.2 (0x00007fe25d107000) \u8fd9\u65f6\u5019\u53ef\u4ee5\u53d1\u73b0libvector.so\u5df2\u7ecf\u53ef\u4ee5\u627e\u5230\u4e86 \u518d\u4e00\u6b21\u8fd0\u884c $ ./prog3 z = [4 6] \\","title":"GCC Linking"},{"location":"GCC/GCC%20Linking/#linking-with-static-libraries","text":"\u7f16\u8bd1\u5e93\u6587\u4ef6\uff0c\u5e76\u6253\u5305\u6210\u9759\u6001\u5e93 # create a static library libvector.a gcc -c addvec.c multvec.c ar rcs libvector.a addvec.o multvec.o \u6784\u5efa\u5f15\u7528\u9759\u6001\u5e93\u7684\u53ef\u6267\u884c\u6587\u4ef6 # build the executable gcc -o prog main.c ./libvector.a \u6216\u8005\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4e5f\u662f\u4e00\u6837\u7684 gcc -o prog main.c -L. -lvector \u53c2\u6570\u2018-lvector\u2019\u662flibvector.a\u7684\u7b80\u7565\u8868\u793a\u65b9\u5f0f\uff0c\u53c2\u6570'-L.' \u544a\u8bc9linker\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u5bfb\u627elibvector.a. \u6267\u884c\u547d\u4ee4 objdump -d prog \u53ef\u4ee5\u53d1\u73b0\u53ea\u6709addvec\u6a21\u5757\u88ab\u5408\u5e76\u5230\u6700\u540e\u7684prog\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u4e86\uff0c\u800cmultvec\u6a21\u5757 \u91cc\u7684\u65b9\u6cd5\u56e0\u4e3a\u6ca1\u6709\u88ab\u5f15\u7528\u5230\u6240\u4ee5\u6ca1\u6709\u88ab\u5408\u5e76\u8fdb\u53bb\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u51cf\u5c0f\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f \u8fd0\u884c $ ./prog z = [4 6] \u5982\u679c\u94fe\u63a5\u7684\u8fc7\u7a0b\u52a0 '-static' \u9009\u9879\u8868\u793a\u9488\u5bf9\u7cfb\u7edf\u5e93\u5f15\u7528\u4e5f\u4ee5\u9759\u6001\u5e93\u7684\u65b9\u5f0f\u5f15\u5165. The '-static' argument tells the compiler driver that the linker should build a fully linked executable object file that can be loaded into memory and run without any further linking at load time. \u5982\u4e0b\u6240\u793a\uff1a gcc -static -o prog main.c -L. -lvector","title":"Linking with Static Libraries"},{"location":"GCC/GCC%20Linking/#dynamic-linking-with-shared-libraries","text":"\u9759\u6001\u5e93\u4e91\u52a8\u6001\u7684\u5e93\u533a\u522b\u662f\u4ec0\u4e48\u5462\uff1f \u5f15\u7528\u9759\u6001\u5e93\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u5b8c\u5168\u94fe\u63a5\u7684\u6267\u884c\u6587\u4ef6\uff0c\u8fd0\u884c\u7684\u65f6\u5019\u52a0\u8f7d\u5668\u53ef\u4ee5\u76f4\u63a5\u62f7\u8d1d\u5230\u5185\u5b58\u8fd0\u884c\uff1b\u800c\u5f15\u7528\u52a8\u6001\u5171\u4eab\u5e93\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u90e8\u5206\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u52a0\u8f7d\u5668\u5728\u52a0\u8f7d\u8be5\u6587\u4ef6\u7684\u65f6\u5019\u9700\u8981\u5148\u4ea4\u7531\u94fe\u63a5\u5668\u8fdb\u884c\u8fdb\u4e00\u6b65\u94fe\u63a5\u5904\u7406\uff08reloacation\uff09\uff0c\u94fe\u63a5\u5904\u7406\u5b8c\u540e\u624d\u53ef\u8fd0\u884c\u3002 \u5f15\u7528\u9759\u6001\u5e93\u7f16\u8bd1\uff0c\u9759\u6001\u5e93\u4e2d\u88ab\u76ee\u6807\u6267\u884c\u6587\u4ef6\u6240\u5f15\u7528\u7684\u6a21\u5757\u90fd\u4f1a\u88ab\u62f7\u8d1d\u5230\u76ee\u6807\u6267\u884c\u6587\u4ef6\u4e2d\u6765\uff1b\u800c\u5f15\u7528\u52a8\u6001\u5e93\u8fdb\u884c\u7f16\u8bd1\u52a8\u6001\u5e93\u91cc\u88ab\u5f15\u7528\u7684\u6a21\u5757\u4e0d\u4f1a\u88ab\u62f7\u8d1d\uff0c\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5e93\u91cc\u9762\u7684\u6a21\u5757\u53ea\u6709\u4e00\u4efd\u5168\u5c40\u62f7\u8d1d\uff0c\u6240\u6709\u6267\u884c\u6587\u4ef6\u5728\u8fd0\u884c\u65f6\u90fd\u5f15\u7528\u540c\u4e00\u4efd\u62f7\u8d1d\u3002 \u4e0b\u9762\u5220\u9664'libvector.a'\uff0c \u7136\u540e\u6d4b\u8bd5\u4e00\u4e0b\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u6784\u5efa\u8fc7\u7a0b\u3002 \u7f16\u8bd1\u53ef\u5171\u4eab\u7684libvector.so \u5e93\u6587\u4ef6 gcc -shared -fpic -o libvector.so addvec.c multvec.c The '-fpic' flag directs the compiler to generate position-independent code. The '-shared' flag directs the linker to create a shared object file. \u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u5b8c\u6210\u4e86so\u5e93\u6587\u4ef6\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u628a\u5b83\u94fe\u63a5\u7684\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u3002 \u6784\u5efa\u5f15\u7528\u52a8\u6001\u5e93\u7684\u53ef\u6267\u884c\u6587\u4ef6 gcc -o prog2 main.c ./libvector.so \u8fd9\u5c31\u6784\u5efa\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u6267\u884c ldd prog2 \u67e5\u770b\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u94fe\u63a5\u72b6\u6001\u3002 $ ldd prog2 linux-vdso.so.1 (0x00007ffc79fa5000) ./libvector.so (0x00007f472cad5000) libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f472c6e4000) /lib64/ld-linux-x86-64.so.2 (0x00007f472ced9000) \u8fd0\u884c $ ./prog2 z = [4 6] \u4f46\u662f\u5047\u5982\u6211\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u5bf9\u7528\u52a8\u6001\u5e93\u8fdb\u884c\u94fe\u63a5\uff0c gcc -o prog3 main.c -L. -lvector \u6216\u8005,\u540c\u6837\u662f\u662f\u524d\u9762\u7684\u90a3\u79cd\u65b9\u5f0f\uff0c\u4f46\u662flibvector.so\u524d\u9762\u7684\u8def\u5f84'./'\u53bb\u6389 gcc -o prog2 main.c libvector.so \u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f \u8fd0\u884c\uff0c\u53d1\u73b0\u62a5\u9519\u4e86 $ ./prog3 ./prog3: error while loading shared libraries: libvector.so: cannot open shared object file: No such file or directory \u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 ldd prog3 \uff0c\u67e5\u770b\u94fe\u63a5\u72b6\u6001 $ ldd prog3 linux-vdso.so.1 (0x00007ffcf5ba8000) libvector.so => not found libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f15d3199000) /lib64/ld-linux-x86-64.so.2 (0x00007f15d378c000) \u53d1\u73b0\u201c libvector.so \u201d\u90a3\u91cc\u663e\u793a\u201cnot found\u201d\uff0c \u610f\u601d\u662f\u627e\u4e0d\u5230libvector.so \u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff0c\u539f\u6765\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7f16\u8bd1\u751f\u4ea7\u7684\u76ee\u6807\u6267\u884c\u6587\u4ef6\u6ca1\u6709\u8def\u5f84\u4fe1\u606f\uff0c\u2018-L.\u2019\u4ec5\u4ec5\u662f\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u7528\u5230\u7684\uff0c\u5728\u52a0\u8f7d\u8fd0\u884c\u7684\u65f6\u5019\u94fe\u63a5\u5668\u5148\u8981\u5230\u7cfb\u7edf\u8bbe\u5b9a\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u4e2d\u67e5\u627e\u5f15\u7528\u5230\u7684so\u6587\u4ef6\u4ee5\u8fdb\u884c\u94fe\u63a5\u5904\u7406\uff08relocation\uff09\uff0c\u800c\u6211\u4eec\u7684libvector.so\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u4e0d\u5728\u7cfb\u7edf\u8bbe\u5b9a\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u4e2d\uff0c\u6240\u4ee5\u627e\u4e0d\u5230\u3002\u9759\u6001\u94fe\u63a5\u5e93\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u5462\uff0c \u56e0\u4e3a\u5f15\u7528\u9759\u6001\u94fe\u63a5\u5e93\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u751f\u6210\u7684\u662f\u4e00\u4e2a\u5b8c\u5168\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u662f\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\uff08\u62f7\u8d1d\uff09\u5230\u5185\u5b58\u8fd0\u884c\u7684\uff1b\u800c\u5f15\u7528\u52a8\u6001\u94fe\u63a5\u5e93\u8fdb\u884c\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u90e8\u5206\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u52a0\u8f7d\u5668\u5728\u52a0\u8f7d\u8fd9\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u8981\u5148\u4ea4\u7ed9\u94fe\u63a5\u5668\u8fdb\u884c\u94fe\u63a5\u5904\u7406\uff08relocation\uff09,\u94fe\u63a5\u5904\u7406\u5b8c\u6210\u540e\u518d\u5f00\u59cb\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u3002 \u5982\u4f55\u89e3\u51b3\u5462\uff0c\u56e0\u4e3a\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u662f\u5728\u201c/etc/ld.so.conf\u201d\u6587\u4ef6\u4e2d\u8bbe\u5b9a\u7684\uff0c\u53ef\u4ee5\u628a\u201c./libvector.so\u201d\u6240\u5728\u76ee\u5f55\u7684\u8def\u5f84\u52a0\u5165\u5230\u7cfb\u7edf\u7684\u201c/etc/ld.so.conf\u201d\u6587\u4ef6\u4e2d\uff0c\u52a0\u5165\u4e4b\u540e\u8fd8\u9700\u8981\u6267\u884c sudo ldconfig \u547d\u4ee4\u8ba9\u65b0\u8def\u5f84\u751f\u6548\u3002 \u6216\u8005\uff0c \u4e5f\u53ef\u4ee5\u7528 export directory_of_library \u7684\u65b9\u5f0f\uff0c\u5982 export LD_LIBRARY_PATH=/home/vagrant/test \u5b8c\u6210\u52a8\u6001\u94fe\u63a5\u5e93\u8def\u5f84\u8bbe\u7f6e\u540e\uff0c\u518d\u6267\u884cldd\u547d\u4ee4 $ ldd ./prog3 linux-vdso.so.1 (0x00007ffe22fa3000) libvector.so => /home/vagrant/test/libvector.so (0x00007fe25cd03000) libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fe25c912000) /lib64/ld-linux-x86-64.so.2 (0x00007fe25d107000) \u8fd9\u65f6\u5019\u53ef\u4ee5\u53d1\u73b0libvector.so\u5df2\u7ecf\u53ef\u4ee5\u627e\u5230\u4e86 \u518d\u4e00\u6b21\u8fd0\u884c $ ./prog3 z = [4 6] \\","title":"Dynamic Linking with Shared Libraries"},{"location":"GCC/GCC%20compiling%20processes/","text":"The 4 processes of GCC compiling The 4 processes of GCC compiling were preprocess -> compile -> assemble -> link . Consider the C program in the following. It will serve as a simple running example throughout this chapter that will allow us to make some important points about how linkers work. main.c int sum(int *a, int n); int array[2] = {1, 2}; int main(){ int val = sum(array, 2); return val; } sum.c int sum(int *a, int n){ int i, s=0; for(i=0;i<n;i++){ s += a[i]; } return s; } Most compilation systems provide a compiler driver that invokes the language preprocessor, compiler, assembler, and linker, as needed on behalf of the user. For example, to build the example program using the GNU compilation system, we might invoke the gcc driver by typing the following command to the shell: gcc -Og -o prog main.c sum.c The following figure summarizes the activities of the driver as it translates the example program from an ASCII source file into an executable object file. (If you want to see these steps for yourself, run gcc with the -v option.) 1) preprocess The driver first runs the C preprocessor (cpp), which translates the C source file main.c into an ASCII intermediate file main.i: cpp [other arguments] main.c main.i or gcc -E main.c -o main.i In this stage, the compiler will combin the header files link stdio.h into the targe file. 2) compile Next, the driver runs the C compiler (cc1), which translates main.i into an ASCII assembly-language file main.s: cc1 /tmp/main.i -Og [other arguments] -o main.s or # -Og \u662f\u4e3a\u4e86\u751f\u6210\u672a\u7ecf\u4f18\u5316\u7684\u4e0e\u539f\u4ee3\u7801\u7ed3\u6784\u76f8\u7b26\u7684\u6c47\u7f16\u4ee3\u7801 gcc -Og -S main.i -o main.s You can also generate assmbly-languange from C file directly gcc -Og -S main.c -o main.s 3) assemble Then, the driver runs the assembler (as), which translates main.s into a binary relocatable object file main.o: as [other arguments] -o main.o main.s or gcc -c main.s -o main.o The driver goes through the same process to generate sum.o. 4) link Finally, it runs the linker program ld, which combines main.o and sum.o, along with the necessary system object files, to create the binary executable object file prog: ld -o prog [system object files and args] main.o sum.o or gcc main.o sum.o -o prog 5) run To run the executable prog, we type its name on the Linux shell\u2019s command line: ./prog The shell invokes a function in the operating system called the loader, which copies the code and data in the executable file prog into memory, and then transfers control to the beginning of the program. GCC Options Options Description -c \u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5\uff0c\u751f\u6210*.o\u6587\u4ef6 -S \u751f\u6210\u6c47\u7f16\u4ee3\u7801*.s\u6587\u4ef6 -E \u9884\u7f16\u8bd1 \u751f\u6210*.i\u6587\u4ef6 -g \u5728\u53ef\u6267\u884c\u7a0b\u5e8f\u91cc\u5305\u542b\u4e86\u8c03\u8bd5\u4fe1\u606f\uff0c\u53ef\u7528 gdb \u8c03\u8bd5 -o \u628a\u8f93\u51fa\u6587\u4ef6\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6\u91cc -O \u751f\u6210\u6c47\u7f16\u4ee3\u7801\u7684\u4f18\u5316\u7ea7\u522b, -Og\u4fdd\u6301\u4e0e\u539f\u4ee3\u7801\u7ed3\u6784\u4e00\u6837\uff0c-O1 -O2 \u4f9d\u6b21\u5bf9\u5e94\u66f4\u9ad8\u7684\u4f18\u5316\u7ea7\u522b","title":"GCC compiling processes"},{"location":"GCC/GCC%20compiling%20processes/#the-4-processes-of-gcc-compiling","text":"The 4 processes of GCC compiling were preprocess -> compile -> assemble -> link . Consider the C program in the following. It will serve as a simple running example throughout this chapter that will allow us to make some important points about how linkers work. main.c int sum(int *a, int n); int array[2] = {1, 2}; int main(){ int val = sum(array, 2); return val; } sum.c int sum(int *a, int n){ int i, s=0; for(i=0;i<n;i++){ s += a[i]; } return s; } Most compilation systems provide a compiler driver that invokes the language preprocessor, compiler, assembler, and linker, as needed on behalf of the user. For example, to build the example program using the GNU compilation system, we might invoke the gcc driver by typing the following command to the shell: gcc -Og -o prog main.c sum.c The following figure summarizes the activities of the driver as it translates the example program from an ASCII source file into an executable object file. (If you want to see these steps for yourself, run gcc with the -v option.) 1) preprocess The driver first runs the C preprocessor (cpp), which translates the C source file main.c into an ASCII intermediate file main.i: cpp [other arguments] main.c main.i or gcc -E main.c -o main.i In this stage, the compiler will combin the header files link stdio.h into the targe file. 2) compile Next, the driver runs the C compiler (cc1), which translates main.i into an ASCII assembly-language file main.s: cc1 /tmp/main.i -Og [other arguments] -o main.s or # -Og \u662f\u4e3a\u4e86\u751f\u6210\u672a\u7ecf\u4f18\u5316\u7684\u4e0e\u539f\u4ee3\u7801\u7ed3\u6784\u76f8\u7b26\u7684\u6c47\u7f16\u4ee3\u7801 gcc -Og -S main.i -o main.s You can also generate assmbly-languange from C file directly gcc -Og -S main.c -o main.s 3) assemble Then, the driver runs the assembler (as), which translates main.s into a binary relocatable object file main.o: as [other arguments] -o main.o main.s or gcc -c main.s -o main.o The driver goes through the same process to generate sum.o. 4) link Finally, it runs the linker program ld, which combines main.o and sum.o, along with the necessary system object files, to create the binary executable object file prog: ld -o prog [system object files and args] main.o sum.o or gcc main.o sum.o -o prog 5) run To run the executable prog, we type its name on the Linux shell\u2019s command line: ./prog The shell invokes a function in the operating system called the loader, which copies the code and data in the executable file prog into memory, and then transfers control to the beginning of the program.","title":"The 4 processes of GCC compiling"},{"location":"GCC/GCC%20compiling%20processes/#gcc-options","text":"Options Description -c \u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5\uff0c\u751f\u6210*.o\u6587\u4ef6 -S \u751f\u6210\u6c47\u7f16\u4ee3\u7801*.s\u6587\u4ef6 -E \u9884\u7f16\u8bd1 \u751f\u6210*.i\u6587\u4ef6 -g \u5728\u53ef\u6267\u884c\u7a0b\u5e8f\u91cc\u5305\u542b\u4e86\u8c03\u8bd5\u4fe1\u606f\uff0c\u53ef\u7528 gdb \u8c03\u8bd5 -o \u628a\u8f93\u51fa\u6587\u4ef6\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6\u91cc -O \u751f\u6210\u6c47\u7f16\u4ee3\u7801\u7684\u4f18\u5316\u7ea7\u522b, -Og\u4fdd\u6301\u4e0e\u539f\u4ee3\u7801\u7ed3\u6784\u4e00\u6837\uff0c-O1 -O2 \u4f9d\u6b21\u5bf9\u5e94\u66f4\u9ad8\u7684\u4f18\u5316\u7ea7\u522b","title":"GCC Options"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/","text":"Tools for Manipulating Object Files There are a number of tools available on Linux systems to help you understand and manipulate object files. In particular, the GNU binutils package is especially helpful and runs on every Linux platform. ar. Creates static libraries, and inserts, deletes, lists, and extracts members. strings. Lists all of the printable strings contained in an object file. strip. Deletes symbol table information from an object file. nm. Lists the symbols defined in the symbol table of an object file. size. Lists the names and sizes of the sections in an object file. readelf. Displays the complete structure of an object file, including all of the information encoded in the ELF header. Subsumes the functionality of size and nm. Common usage: readelf -a prog objdump. The mother of all binary tools.Can display all of the informationinan object file. Its most useful function is disassembling the binary instructions in the '.text' section. Common usage: objdump -dx prog ldd: Lists the shared libraries that an executable needs at run time. Common usage: ldd prog addr2line : convert addresses into file names and line numbers. $ addr2line -e kernel/kernel 0x0000000080002de2 0x0000000080002f4a 0x0000000080002bfc You should see something like this: kernel/sysproc.c:74 kernel/syscall.c:224 kernel/trap.c:85","title":"Tools for Manipulating Object Files"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/#tools-for-manipulating-object-files","text":"There are a number of tools available on Linux systems to help you understand and manipulate object files. In particular, the GNU binutils package is especially helpful and runs on every Linux platform. ar. Creates static libraries, and inserts, deletes, lists, and extracts members. strings. Lists all of the printable strings contained in an object file. strip. Deletes symbol table information from an object file. nm. Lists the symbols defined in the symbol table of an object file. size. Lists the names and sizes of the sections in an object file. readelf. Displays the complete structure of an object file, including all of the information encoded in the ELF header. Subsumes the functionality of size and nm. Common usage: readelf -a prog objdump. The mother of all binary tools.Can display all of the informationinan object file. Its most useful function is disassembling the binary instructions in the '.text' section. Common usage: objdump -dx prog ldd: Lists the shared libraries that an executable needs at run time. Common usage: ldd prog addr2line : convert addresses into file names and line numbers. $ addr2line -e kernel/kernel 0x0000000080002de2 0x0000000080002f4a 0x0000000080002bfc You should see something like this: kernel/sysproc.c:74 kernel/syscall.c:224 kernel/trap.c:85","title":"Tools for Manipulating Object Files"},{"location":"GCC/Using-Assembly-Language-with-C/","text":"","title":"Using Assembly Language with C"},{"location":"GDB/gdb%20demo/gdb%20demo/","text":"Source Code map.c #include <stdio.h> #include <stdlib.h> /* A statically allocated variable */ int foo; /* UNCOMMENT THIS LINE for 3.4.3*/ extern int recur(int i); /* A statically allocated, pre-initialized variable */ volatile int stuff = 7; int main(int argc, char *argv[]) { /* A stack allocated variable */ volatile int n = 3; int arr[] = {1, 2, 3, 4, 5}; if(argc=2) n = atoi(argv[1]); /* Dynamically allocate some stuff */ char *buf1 = malloc(100); /* ... and some more stuff */ volatile char *buf2 = malloc(100); sprintf(buf1, \"hello world\"); recur(n); return 0; } recurse.c #include <stdio.h> int recur(int i) { /* A stack allocated variable within a recursive function */ int j = i; printf(\"%i\\n\", i); if (i > 0) { return recur(i - 1); } return 0; } Compiling You have to tell your compiler to compile your code with symbolic debugging information included. Here's how to do it with gcc, with the -g switch: gcc -g map.c recurse.c -o map Starting The Debugger To start the gdb and pass arguments, type the command in the terminal gdb --args <program> <args...> If the program has no arguments, just type gdb <program> Fot this demo, we launch a program called map in the debugger and pass argument 5. $ gdb --args map 5 Breakpoints Break point To set a new breakpoint, You use the break or b command, and specify a location, which can be a function name, line number, or source file:line number. break <where> Temporary break point tbreak <where> Where line_number function_name file:line_number/function_name *instructionAddr For this demo, let's set a breakpoint at main(), and start the program: (gdb) break main Breakpoint 1 at 0x6e9: file map.c, line 18. set breakpoint at special instruction address break *0x000000008000215a when you type run command , program will suspend at the first break point it encounter. (gdb) run Starting program: /home/vagrant/code/personal/hw-intro/map 5 Breakpoint 1, main (argc=2, argv=0x7fffffffe3a8) at map.c:18 18 if(argc<2) n= 3; (gdb) Condition break point break <where> if <condition> Break at the given location if the condition is met. Conditions may be almost any C expression that evaluate to true or false. (gdb) break recur if i==1 Breakpoint 2 at 0x55555555475e: file recurse.c, line 5. (gdb) continue Continuing. Breakpoint 2, recur (i=1) at recurse.c:5 5 int j = i; (gdb) print i $1 = 1 Set/change the condition condition <breakpoint#> <condition> Set/change a condition on anexisting breakpoint. (gdb) condition 2 i==0 Watchpoints watch <expression> Note that watch takes an expression as an argument, so you can put a variable name in there, or something more complex like *(p+5) or a[15] watchpoints are special breakpoints that will trigger whenever an expression changes. Often you just want to know when a variable changes (is written to), and for that you can use the watch command: (gdb) watch n Hardware watchpoint 2: n (gdb) next Hardware watchpoint 2: n Old value = 21845 New value = 3 main (argc=2, argv=0x7fffffffe3a8) at map.c:18 18 if(argc=2) (gdb) 19 n = atoi(argv[1]); (gdb) Hardware watchpoint 2: n Old value = 3 New value = 5 main (argc=2, argv=0x7fffffffe3a8) at map.c:22 22 char *buf1 = malloc(100); (gdb) Stepping Next statement Step N statements, proceeding through subroutine calls. next [N] Unlike \"step\", if the current source line calls a subroutine, this command does not enter the subroutine, but instead steps over the call, in effect treating it as a single source line. (gdb) next 19 else n = atoi(argv[1]); (gdb) Hitting Enter key will repeat the last command, this will save you typing next over and over again. Step into subroutine step [N] Step statement, if it's a subroutine call it will enter into the subroutine. 27 recur(n); (gdb) step recur (i=5) at recurse.c:5 5 int j = i; (gdb) Next instruction Step a single assembly instruction, but proceed through subroutine calls. nexti [N] Step instruction Step a single assembly instruction if it's a subroutine call it will enter into the function. stepi [N] finish finish Continue until the current function returns. continue continue Continue normal execution until the end of programe or the next breakpoint. Advance advance <where> To continue to a specific location, use the advance command, specifying a location like those shown in the \"Breakpoints\" section, above. Here's an example which advances from the current location until the function \"recur()\" is called: (gdb) advance recur recur (i=5) at recurse.c:5 5 int j = i; (gdb) advance is just shorthand for \"continue to this temporary breakpoint.\" Examining Variables and memory Print Variables Print content of variable/memory location/register. print/format <what> Format a: Pointer. c: Read as integer, print as character. d Integer, signed decimal. f: Floating point number. o: Integer, print as octal. s: Try to treat as C string. t: Integer, print as binary (t = \"two\u201c). u: Integer, unsigned decimal. x: Integer, print as hexadecimal. What \"expression\" Almost any C expression, including function calls (must be prefixed with a cast to tell GDB the return value type). \"file_name::variable_name\" Content of the variable defined in the named file (static variables). \"function::variable_name\" Content of the variable defined in the named function (if on the stack). \"{type}address\" Content at address, interpreted as being of the C type type. \"$register\" Content of named register. Interesting registers are $esp (stack pointer), $ebp (frame pointer) and $eip (instruction pointer). (gdb) print n $1 = 5 (gdb) print/t n $2 = 101 printf (gdb) printf \"%08X\\n\", n 00000005 Print Array print *array@len For example, Print the first 3 elements of the Array (gdb) print *arr@3 $4 = {1, 2, 3} Display Variables display/format <what> Like print , but print the information after each stepping instruction. For this demo (gdb) display i 1: i = 5 (gdb) next 6 printf(\"%i\\n\", i); 1: i = 5 (gdb) next 5 8 if (i > 0) { 1: i = 5 Examining Memory x/nfu <address> n: How many units to print (default 1). f: Format character (like \"print\u201c). u: Unit. Unit is one of: b: Byte h: Half-word (two bytes) w: Word (four bytes) g: Giant word (eight bytes)) For example, (gdb) x buf1 0x555555756260: \"hello world\" (gdb) x/11x buf1 0x555555756260: 0x68 0x65 0x6c 0x6c 0x6f 0x20 0x77 0x6f 0x555555756268: 0x72 0x6c 0x64 Examining instruaction at specify adress x/i 0x123 Examining the call stack Show call stack. backtrace [full] The command backtrace (or bt ) will show you the current function call stack, with the current function at the top, and the callers in order beneath it: Use of the 'full' qualifier also prints the values of the local variables. (gdb) backtrace #0 recur (i=3) at recurse.c:5 #1 0x0000555555554832 in recur (i=4) at recurse.c:9 #2 0x0000555555554832 in recur (i=5) at recurse.c:9 #3 0x00005555555547dd in main (argc=2, argv=0x7fffffffe3a8) at map.c:29 directory directory <directory> Add directory to the list of directories that is searched for sources. Listing Source Code list list <filename>:<function> list <filename>:<line_number> list <first>,<last> Shows the current or given source context. The filename may be omitted. If last is omitted the context starting at start is printed instead of centered around it. (gdb) list 22 char *buf1 = malloc(100); 23 /* ... and some more stuff */ 24 volatile char *buf2 = malloc(100); 25 26 sprintf(buf1, \"hello world\"); 27 recur(n); 28 return 0; 29 } Call function call functionName(args...) execute arbitrary function and print the result. (gdb) call recur(3) $1 = 0 Informations info breakpoints : Print informations about the breakpoints and watchpoints. info registers : Print values of all registers. info args : Print the arguments to the function of the current stack frame. info locals : Print the local variables in the currently selected stack frame. info display : Print informations about the \"displays\u201c. info sharedlibrary : List loaded shared libraries. info signals : List all signals and how they are cur- rently handled. info threads : List all threads. info frame : Disassemble Disassemble the current function or given location. disassemble <where> For this demo, I have enter into recur function, then I execute disassemble , gdb print out the assembly code of this \"recur\" function. (gdb) disassemble Dump of assembler code for function recur: 0x00005555555547f8 <+0>: push %rbp 0x00005555555547f9 <+1>: mov %rsp,%rbp 0x00005555555547fc <+4>: sub $0x20,%rsp 0x0000555555554800 <+8>: mov %edi,-0x14(%rbp) => 0x0000555555554803 <+11>: mov -0x14(%rbp),%eax 0x0000555555554806 <+14>: mov %eax,-0x4(%rbp) 0x0000555555554809 <+17>: mov -0x14(%rbp),%eax 0x000055555555480c <+20>: mov %eax,%esi 0x000055555555480e <+22>: lea 0xaf(%rip),%rdi # 0x5555555548c4 0x0000555555554815 <+29>: mov $0x0,%eax 0x000055555555481a <+34>: callq 0x5555555545f0 <printf@plt> 0x000055555555481f <+39>: cmpl $0x0,-0x14(%rbp) 0x0000555555554823 <+43>: jle 0x555555554834 <recur+60> 0x0000555555554825 <+45>: mov -0x14(%rbp),%eax 0x0000555555554828 <+48>: sub $0x1,%eax 0x000055555555482b <+51>: mov %eax,%edi 0x000055555555482d <+53>: callq 0x5555555547f8 <recur> 0x0000555555554832 <+58>: jmp 0x555555554839 <recur+65> 0x0000555555554834 <+60>: mov $0x0,%eax 0x0000555555554839 <+65>: leaveq 0x000055555555483a <+66>: retq End of assembler dump. Layout tui enable show tui window. layout src Standard layout\u2014source on top, command window on the bottom layout asm Just like the \"src\" layout, except it's an assembly window on top layout split Three windows: source on top, assembly in the middle, and command at the bottom layout reg Opens the register window on top of either source or assembly, whichever was opened last tui reg general Show the general registers tui reg float Show the floating point registers tui reg system Show the \"system\" registers tui reg next Show the next page of registers\u2014this is important because there might be pages of registers that aren't in the \"general\", \"float\", or \"system\" sets For this demo, when you type layout asm command ,you will see the interface as following In asm layout , we can use nexti or stepi command to step to the next asm instruction When \"layout\" command split the window into diffrent pieces, we can use 'focus' command to specify which window to focus, for example use focus asm to select asm window, then you can use arrow key to scroll the window. Help help command Get help on a certain command For example help breakpoint GDB dashboard GDB dashboard is a standalone \".gdbinit\" file. Just place \".gdbinit\" in your home directory or project directory, for example with: wget -P ~ https://git.io/.gdbinit Then debug as usual, the dashboard will appear automatically every time the inferior program stops. Optionally install Pygments to enable syntax highlighting: pip install pygments If it has no effect, execute the following command in the terminal set auto-load local-gdbinit on LLDB In MacOS use LLDB instead. Some other commands https://beej.us/guide/bggdb https://wiki.ubuntu.org.cn/\u7528GDB\u8c03\u8bd5\u7a0b\u5e8f http://www.unknownroad.com/rtfm/gdbtut/gdbtoc.html https://sourceware.org/gdb/current/onlinedocs/gdb","title":"gdb demo"},{"location":"GDB/gdb%20demo/gdb%20demo/#source-code","text":"map.c #include <stdio.h> #include <stdlib.h> /* A statically allocated variable */ int foo; /* UNCOMMENT THIS LINE for 3.4.3*/ extern int recur(int i); /* A statically allocated, pre-initialized variable */ volatile int stuff = 7; int main(int argc, char *argv[]) { /* A stack allocated variable */ volatile int n = 3; int arr[] = {1, 2, 3, 4, 5}; if(argc=2) n = atoi(argv[1]); /* Dynamically allocate some stuff */ char *buf1 = malloc(100); /* ... and some more stuff */ volatile char *buf2 = malloc(100); sprintf(buf1, \"hello world\"); recur(n); return 0; } recurse.c #include <stdio.h> int recur(int i) { /* A stack allocated variable within a recursive function */ int j = i; printf(\"%i\\n\", i); if (i > 0) { return recur(i - 1); } return 0; }","title":"Source Code"},{"location":"GDB/gdb%20demo/gdb%20demo/#compiling","text":"You have to tell your compiler to compile your code with symbolic debugging information included. Here's how to do it with gcc, with the -g switch: gcc -g map.c recurse.c -o map","title":"Compiling"},{"location":"GDB/gdb%20demo/gdb%20demo/#starting-the-debugger","text":"To start the gdb and pass arguments, type the command in the terminal gdb --args <program> <args...> If the program has no arguments, just type gdb <program> Fot this demo, we launch a program called map in the debugger and pass argument 5. $ gdb --args map 5","title":"Starting The Debugger"},{"location":"GDB/gdb%20demo/gdb%20demo/#breakpoints","text":"","title":"Breakpoints"},{"location":"GDB/gdb%20demo/gdb%20demo/#break-point","text":"To set a new breakpoint, You use the break or b command, and specify a location, which can be a function name, line number, or source file:line number. break <where> Temporary break point tbreak <where> Where line_number function_name file:line_number/function_name *instructionAddr For this demo, let's set a breakpoint at main(), and start the program: (gdb) break main Breakpoint 1 at 0x6e9: file map.c, line 18. set breakpoint at special instruction address break *0x000000008000215a when you type run command , program will suspend at the first break point it encounter. (gdb) run Starting program: /home/vagrant/code/personal/hw-intro/map 5 Breakpoint 1, main (argc=2, argv=0x7fffffffe3a8) at map.c:18 18 if(argc<2) n= 3; (gdb)","title":"Break point"},{"location":"GDB/gdb%20demo/gdb%20demo/#condition-break-point","text":"break <where> if <condition> Break at the given location if the condition is met. Conditions may be almost any C expression that evaluate to true or false. (gdb) break recur if i==1 Breakpoint 2 at 0x55555555475e: file recurse.c, line 5. (gdb) continue Continuing. Breakpoint 2, recur (i=1) at recurse.c:5 5 int j = i; (gdb) print i $1 = 1","title":"Condition break point"},{"location":"GDB/gdb%20demo/gdb%20demo/#setchange-the-condition","text":"condition <breakpoint#> <condition> Set/change a condition on anexisting breakpoint. (gdb) condition 2 i==0","title":"Set/change the condition"},{"location":"GDB/gdb%20demo/gdb%20demo/#watchpoints","text":"watch <expression> Note that watch takes an expression as an argument, so you can put a variable name in there, or something more complex like *(p+5) or a[15] watchpoints are special breakpoints that will trigger whenever an expression changes. Often you just want to know when a variable changes (is written to), and for that you can use the watch command: (gdb) watch n Hardware watchpoint 2: n (gdb) next Hardware watchpoint 2: n Old value = 21845 New value = 3 main (argc=2, argv=0x7fffffffe3a8) at map.c:18 18 if(argc=2) (gdb) 19 n = atoi(argv[1]); (gdb) Hardware watchpoint 2: n Old value = 3 New value = 5 main (argc=2, argv=0x7fffffffe3a8) at map.c:22 22 char *buf1 = malloc(100); (gdb)","title":"Watchpoints"},{"location":"GDB/gdb%20demo/gdb%20demo/#stepping","text":"","title":"Stepping"},{"location":"GDB/gdb%20demo/gdb%20demo/#next-statement","text":"Step N statements, proceeding through subroutine calls. next [N] Unlike \"step\", if the current source line calls a subroutine, this command does not enter the subroutine, but instead steps over the call, in effect treating it as a single source line. (gdb) next 19 else n = atoi(argv[1]); (gdb) Hitting Enter key will repeat the last command, this will save you typing next over and over again.","title":"Next statement"},{"location":"GDB/gdb%20demo/gdb%20demo/#step-into-subroutine","text":"step [N] Step statement, if it's a subroutine call it will enter into the subroutine. 27 recur(n); (gdb) step recur (i=5) at recurse.c:5 5 int j = i; (gdb)","title":"Step into subroutine"},{"location":"GDB/gdb%20demo/gdb%20demo/#next-instruction","text":"Step a single assembly instruction, but proceed through subroutine calls. nexti [N]","title":"Next instruction"},{"location":"GDB/gdb%20demo/gdb%20demo/#step-instruction","text":"Step a single assembly instruction if it's a subroutine call it will enter into the function. stepi [N]","title":"Step instruction"},{"location":"GDB/gdb%20demo/gdb%20demo/#finish","text":"finish Continue until the current function returns.","title":"finish"},{"location":"GDB/gdb%20demo/gdb%20demo/#continue","text":"continue Continue normal execution until the end of programe or the next breakpoint.","title":"continue"},{"location":"GDB/gdb%20demo/gdb%20demo/#advance","text":"advance <where> To continue to a specific location, use the advance command, specifying a location like those shown in the \"Breakpoints\" section, above. Here's an example which advances from the current location until the function \"recur()\" is called: (gdb) advance recur recur (i=5) at recurse.c:5 5 int j = i; (gdb) advance is just shorthand for \"continue to this temporary breakpoint.\"","title":"Advance"},{"location":"GDB/gdb%20demo/gdb%20demo/#examining-variables-and-memory","text":"","title":"Examining Variables and memory"},{"location":"GDB/gdb%20demo/gdb%20demo/#print-variables","text":"Print content of variable/memory location/register. print/format <what> Format a: Pointer. c: Read as integer, print as character. d Integer, signed decimal. f: Floating point number. o: Integer, print as octal. s: Try to treat as C string. t: Integer, print as binary (t = \"two\u201c). u: Integer, unsigned decimal. x: Integer, print as hexadecimal. What \"expression\" Almost any C expression, including function calls (must be prefixed with a cast to tell GDB the return value type). \"file_name::variable_name\" Content of the variable defined in the named file (static variables). \"function::variable_name\" Content of the variable defined in the named function (if on the stack). \"{type}address\" Content at address, interpreted as being of the C type type. \"$register\" Content of named register. Interesting registers are $esp (stack pointer), $ebp (frame pointer) and $eip (instruction pointer). (gdb) print n $1 = 5 (gdb) print/t n $2 = 101","title":"Print Variables"},{"location":"GDB/gdb%20demo/gdb%20demo/#printf","text":"(gdb) printf \"%08X\\n\", n 00000005","title":"printf"},{"location":"GDB/gdb%20demo/gdb%20demo/#print-array","text":"print *array@len For example, Print the first 3 elements of the Array (gdb) print *arr@3 $4 = {1, 2, 3}","title":"Print Array"},{"location":"GDB/gdb%20demo/gdb%20demo/#display-variables","text":"display/format <what> Like print , but print the information after each stepping instruction. For this demo (gdb) display i 1: i = 5 (gdb) next 6 printf(\"%i\\n\", i); 1: i = 5 (gdb) next 5 8 if (i > 0) { 1: i = 5","title":"Display Variables"},{"location":"GDB/gdb%20demo/gdb%20demo/#examining-memory","text":"x/nfu <address> n: How many units to print (default 1). f: Format character (like \"print\u201c). u: Unit. Unit is one of: b: Byte h: Half-word (two bytes) w: Word (four bytes) g: Giant word (eight bytes)) For example, (gdb) x buf1 0x555555756260: \"hello world\" (gdb) x/11x buf1 0x555555756260: 0x68 0x65 0x6c 0x6c 0x6f 0x20 0x77 0x6f 0x555555756268: 0x72 0x6c 0x64 Examining instruaction at specify adress x/i 0x123","title":"Examining Memory"},{"location":"GDB/gdb%20demo/gdb%20demo/#examining-the-call-stack","text":"Show call stack. backtrace [full] The command backtrace (or bt ) will show you the current function call stack, with the current function at the top, and the callers in order beneath it: Use of the 'full' qualifier also prints the values of the local variables. (gdb) backtrace #0 recur (i=3) at recurse.c:5 #1 0x0000555555554832 in recur (i=4) at recurse.c:9 #2 0x0000555555554832 in recur (i=5) at recurse.c:9 #3 0x00005555555547dd in main (argc=2, argv=0x7fffffffe3a8) at map.c:29","title":"Examining the call stack"},{"location":"GDB/gdb%20demo/gdb%20demo/#directory","text":"directory <directory> Add directory to the list of directories that is searched for sources.","title":"directory"},{"location":"GDB/gdb%20demo/gdb%20demo/#listing-source-code","text":"list list <filename>:<function> list <filename>:<line_number> list <first>,<last> Shows the current or given source context. The filename may be omitted. If last is omitted the context starting at start is printed instead of centered around it. (gdb) list 22 char *buf1 = malloc(100); 23 /* ... and some more stuff */ 24 volatile char *buf2 = malloc(100); 25 26 sprintf(buf1, \"hello world\"); 27 recur(n); 28 return 0; 29 }","title":"Listing Source Code"},{"location":"GDB/gdb%20demo/gdb%20demo/#call-function","text":"call functionName(args...) execute arbitrary function and print the result. (gdb) call recur(3) $1 = 0","title":"Call function"},{"location":"GDB/gdb%20demo/gdb%20demo/#informations","text":"info breakpoints : Print informations about the breakpoints and watchpoints. info registers : Print values of all registers. info args : Print the arguments to the function of the current stack frame. info locals : Print the local variables in the currently selected stack frame. info display : Print informations about the \"displays\u201c. info sharedlibrary : List loaded shared libraries. info signals : List all signals and how they are cur- rently handled. info threads : List all threads. info frame :","title":"Informations"},{"location":"GDB/gdb%20demo/gdb%20demo/#disassemble","text":"Disassemble the current function or given location. disassemble <where> For this demo, I have enter into recur function, then I execute disassemble , gdb print out the assembly code of this \"recur\" function. (gdb) disassemble Dump of assembler code for function recur: 0x00005555555547f8 <+0>: push %rbp 0x00005555555547f9 <+1>: mov %rsp,%rbp 0x00005555555547fc <+4>: sub $0x20,%rsp 0x0000555555554800 <+8>: mov %edi,-0x14(%rbp) => 0x0000555555554803 <+11>: mov -0x14(%rbp),%eax 0x0000555555554806 <+14>: mov %eax,-0x4(%rbp) 0x0000555555554809 <+17>: mov -0x14(%rbp),%eax 0x000055555555480c <+20>: mov %eax,%esi 0x000055555555480e <+22>: lea 0xaf(%rip),%rdi # 0x5555555548c4 0x0000555555554815 <+29>: mov $0x0,%eax 0x000055555555481a <+34>: callq 0x5555555545f0 <printf@plt> 0x000055555555481f <+39>: cmpl $0x0,-0x14(%rbp) 0x0000555555554823 <+43>: jle 0x555555554834 <recur+60> 0x0000555555554825 <+45>: mov -0x14(%rbp),%eax 0x0000555555554828 <+48>: sub $0x1,%eax 0x000055555555482b <+51>: mov %eax,%edi 0x000055555555482d <+53>: callq 0x5555555547f8 <recur> 0x0000555555554832 <+58>: jmp 0x555555554839 <recur+65> 0x0000555555554834 <+60>: mov $0x0,%eax 0x0000555555554839 <+65>: leaveq 0x000055555555483a <+66>: retq End of assembler dump.","title":"Disassemble"},{"location":"GDB/gdb%20demo/gdb%20demo/#layout","text":"tui enable show tui window. layout src Standard layout\u2014source on top, command window on the bottom layout asm Just like the \"src\" layout, except it's an assembly window on top layout split Three windows: source on top, assembly in the middle, and command at the bottom layout reg Opens the register window on top of either source or assembly, whichever was opened last tui reg general Show the general registers tui reg float Show the floating point registers tui reg system Show the \"system\" registers tui reg next Show the next page of registers\u2014this is important because there might be pages of registers that aren't in the \"general\", \"float\", or \"system\" sets For this demo, when you type layout asm command ,you will see the interface as following In asm layout , we can use nexti or stepi command to step to the next asm instruction When \"layout\" command split the window into diffrent pieces, we can use 'focus' command to specify which window to focus, for example use focus asm to select asm window, then you can use arrow key to scroll the window.","title":"Layout"},{"location":"GDB/gdb%20demo/gdb%20demo/#help","text":"help command Get help on a certain command For example help breakpoint","title":"Help"},{"location":"GDB/gdb%20demo/gdb%20demo/#gdb-dashboard","text":"GDB dashboard is a standalone \".gdbinit\" file. Just place \".gdbinit\" in your home directory or project directory, for example with: wget -P ~ https://git.io/.gdbinit Then debug as usual, the dashboard will appear automatically every time the inferior program stops. Optionally install Pygments to enable syntax highlighting: pip install pygments If it has no effect, execute the following command in the terminal set auto-load local-gdbinit on","title":"GDB dashboard"},{"location":"GDB/gdb%20demo/gdb%20demo/#lldb","text":"In MacOS use LLDB instead.","title":"LLDB"},{"location":"GDB/gdb%20demo/gdb%20demo/#some-other-commands","text":"https://beej.us/guide/bggdb https://wiki.ubuntu.org.cn/\u7528GDB\u8c03\u8bd5\u7a0b\u5e8f http://www.unknownroad.com/rtfm/gdbtut/gdbtoc.html https://sourceware.org/gdb/current/onlinedocs/gdb","title":"Some other commands"},{"location":"Git/Git%20commands/","text":"How to \"merge\" specific files from another branch git checkout branch file or git checkout --patch branch file \u67e5\u770b\u8c01\u4fee\u6539\u7684\u4ee3\u7801 git blame controllers/admin/contract.js \u6bd4\u8f83\u4e24\u4e2a\u63d0\u4ea4\u70b9\u7684\u6587\u4ef6 git diff 83f5ca6637280eecbb654eea1b78abef27e1c85c:filename 07d03e76072b0533e147425c8d259eef3cb0b44f:filename","title":"Git commands"},{"location":"Git/Git%20commands/#how-to-merge-specific-files-from-another-branch","text":"git checkout branch file or git checkout --patch branch file","title":"How to \"merge\" specific files from another branch"},{"location":"Git/Git%20commands/#_1","text":"git blame controllers/admin/contract.js","title":"\u67e5\u770b\u8c01\u4fee\u6539\u7684\u4ee3\u7801"},{"location":"Git/Git%20commands/#_2","text":"git diff 83f5ca6637280eecbb654eea1b78abef27e1c85c:filename 07d03e76072b0533e147425c8d259eef3cb0b44f:filename","title":"\u6bd4\u8f83\u4e24\u4e2a\u63d0\u4ea4\u70b9\u7684\u6587\u4ef6"},{"location":"MacOS/Launching%20Custom%20Daemons%20Using%20launchd/","text":"In OSX I needed a shell script to execute at login. There are a few different ways to perform this so I thought it might be helpful to document what your options are. This is the shell script I will execute: #!/bin/bash function start() { echo ${PATH} echo \"start mkdocs\" # It should not append a & symbol to the end as urual to run the command in the background, cause we will let launch to take over the task. /Library/Frameworks/Python.framework/Versions/3.10/bin/mkdocs serve } function stop() { echo \"stop mkdocs client...\" ps -ef | grep \"mkdocs\" | awk '{ print $2 }' | xargs kill } case ${1} in \"start\") start ;; \"stop\") stop ;; \"restart\") stop sleep 3 start ;; \"\") start ;; *) echo \"error arguents\" exit 1 ;; esac This script was named \" blogserver.sh \" locating in my blog diractory \"\\~/wk/blog/\". It start my blogserver, so that I can browse my blogs located in my own cumputer in the browser. It should be noted that the services programe you are going to excute should not append a & symbol to the end as urual to daemonize , cause we will let launchd to take over the task. If you do this way, launchd will lose track of it and attempt to relaunch it. The interface to launchd is a tool called launchctl which allows for loading and unloading daemons into launchd. XML formatted plist files are used to describe operations loaded into launchctl. <?xml version=\"1.0\" encoding=\"utf-8\"?> <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"> <plist version=\"1.0\"> <dict> <key>Label</key> <string>mkdocs.blogs</string> <key>ProgramArguments</key> <array> <string>./blogserver.sh</string> <string>start</string> </array> <key>WorkingDirectory</key> <string>/Users/wzq/wk/blog</string> <key>RunAtLoad</key> <true /> <key>StandardErrorPath</key> <string>/Users/wzq/Library/Logs/myblogs.log</string> <key>StandardOutPath</key> <string>/Users/wzq/Library/Logs/myblogs.log</string> </dict> </plist> The above file mkdocs.blogs.plist needs to be saved in the ~/Library/LaunchAgents directory. As you can see the xml dictates that the \" blogserver.sh \" file should be executed at load, note we no longer need a \".command\" file extension. We will now use launchctl to load our plist file. launchctl load ~/Library/LaunchAgents/mkdocs.blogs.plist To verify that your script executed correctly lets ask launchctl to show us what is running. launchctl list | grep \"mkdocs.blogs\" You will likely see an entries with three columns. Mine looks like this: 758 0 mkdocs.blogs The first column is the process id. The second column displays the last exit status of the job, zero represent success. Property list A list of often used keys follows below. All keys are optional unless otherwise noted. For a full list, see Apple's manpage for launchd.plist. Key Type Description Label String The name of the job. By convention, the job label is the same as the plist file name, without the .plist extension. Required. Program String A path to an executable. Useful for simple launches. At least one of Program or ProgramArguments is required. ProgramArguments Array of strings An array of strings representing a UNIX command. The first string is generally a path to an executable, while latter strings contain options or parameters. At least one of Program or ProgramArguments is required. UserName String (defaults to root or current user) The job will be run as the given user, who may (or may not) be the user who submitted it to launchd. RunAtLoad Boolean (defaults to NO) A boolean flag that defines if a task is launched immediately when the job is loaded into launchd. StartOnMount Boolean (defaults to NO) A boolean flag that defines if a task is launched when a new filesystem is mounted. QueueDirectories Array of strings Watch a directory for new files. The directory must be empty to begin with, and must be returned to an empty state before QueueDirectories will launch its task again. WatchPaths Array of strings Watch a filesystem path for changes. Can be a file or folder. StartInterval Integer Schedules job to run on a repeating schedule. Indicates number of seconds to wait between runs. StartCalendarInterval Dictionary of integers or Array of dictionaries of integers Job scheduling. The syntax is similar to cron . RootDirectory String The job will be chrooted into this directory before execution. WorkingDirectory String The job will be chdired into this directory before execution. StandardInPath, StandardOutPath, StandardErrorPath String Keys to determine files for input and output for the launched process. LowPriorityIO Boolean Tells the kernel that this task is of a low priority when doing filesystem I/O. AbandonProcessGroup Boolean (defaults to NO) A boolean flag that defines whether subprocesses launched from a task launched by launchd will be killed when the task ends. Useful where a short-lived task starts a long-lived subtask, but may result in zombie processes. SessionCreate Boolean (defaults to NO) A boolean flag that defines whether a security session will be created for the task and its subprocesses. Reference https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html##//apple_ref/doc/uid/10000172i-SW7-BCIEDDBJ https://en.wikipedia.org/wiki/Launchd \\","title":"Launching Custom Daemons Using launchd"},{"location":"MacOS/Launching%20Custom%20Daemons%20Using%20launchd/#property-list","text":"A list of often used keys follows below. All keys are optional unless otherwise noted. For a full list, see Apple's manpage for launchd.plist. Key Type Description Label String The name of the job. By convention, the job label is the same as the plist file name, without the .plist extension. Required. Program String A path to an executable. Useful for simple launches. At least one of Program or ProgramArguments is required. ProgramArguments Array of strings An array of strings representing a UNIX command. The first string is generally a path to an executable, while latter strings contain options or parameters. At least one of Program or ProgramArguments is required. UserName String (defaults to root or current user) The job will be run as the given user, who may (or may not) be the user who submitted it to launchd. RunAtLoad Boolean (defaults to NO) A boolean flag that defines if a task is launched immediately when the job is loaded into launchd. StartOnMount Boolean (defaults to NO) A boolean flag that defines if a task is launched when a new filesystem is mounted. QueueDirectories Array of strings Watch a directory for new files. The directory must be empty to begin with, and must be returned to an empty state before QueueDirectories will launch its task again. WatchPaths Array of strings Watch a filesystem path for changes. Can be a file or folder. StartInterval Integer Schedules job to run on a repeating schedule. Indicates number of seconds to wait between runs. StartCalendarInterval Dictionary of integers or Array of dictionaries of integers Job scheduling. The syntax is similar to cron . RootDirectory String The job will be chrooted into this directory before execution. WorkingDirectory String The job will be chdired into this directory before execution. StandardInPath, StandardOutPath, StandardErrorPath String Keys to determine files for input and output for the launched process. LowPriorityIO Boolean Tells the kernel that this task is of a low priority when doing filesystem I/O. AbandonProcessGroup Boolean (defaults to NO) A boolean flag that defines whether subprocesses launched from a task launched by launchd will be killed when the task ends. Useful where a short-lived task starts a long-lived subtask, but may result in zombie processes. SessionCreate Boolean (defaults to NO) A boolean flag that defines whether a security session will be created for the task and its subprocesses.","title":"Property list"},{"location":"MacOS/Launching%20Custom%20Daemons%20Using%20launchd/#reference","text":"https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html##//apple_ref/doc/uid/10000172i-SW7-BCIEDDBJ https://en.wikipedia.org/wiki/Launchd \\","title":"Reference"},{"location":"MacOS/MacOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","text":"\u7f51\u7edc netstat -f inet -n -p TCP UD \u67e5\u770b\u7aef\u53e3\u5360\u7528 lsof -i :8080 \u8f93\u51fa\u5230\u526a\u5207\u7248 echo hello | pbcopy","title":"MacOS\u5e38\u7528\u547d\u4ee4"},{"location":"MacOS/MacOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","text":"netstat -f inet -n -p TCP UD","title":"\u7f51\u7edc"},{"location":"MacOS/MacOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","text":"lsof -i :8080","title":"\u67e5\u770b\u7aef\u53e3\u5360\u7528"},{"location":"MacOS/MacOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","text":"echo hello | pbcopy","title":"\u8f93\u51fa\u5230\u526a\u5207\u7248"},{"location":"MacOS/MacOS%E5%BF%85%E5%A4%87/","text":"xcode xcode-select --install Homebrew /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" java brew cask install java","title":"MacOS\u5fc5\u5907"},{"location":"MacOS/MacOS%E5%BF%85%E5%A4%87/#xcode","text":"xcode-select --install","title":"xcode"},{"location":"MacOS/MacOS%E5%BF%85%E5%A4%87/#homebrew","text":"/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"","title":"Homebrew"},{"location":"MacOS/MacOS%E5%BF%85%E5%A4%87/#java","text":"brew cask install java","title":"java"},{"location":"Markdown/Markdown%20Syntax/","text":"MacDown Hello there! I\u2019m MacDown , the open source Markdown editor for OS X. Let me introduce myself. Markdown and I Markdown is a plain text formatting syntax created by John Gruber, aiming to provide a easy-to-read and feasible markup. The original Markdown syntax specification can be found here . MacDown is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel. I support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the Markdown preference pane . You can specify extra HTML rendering options through the Rendering preference pane . You can customize the editor window to you liking in the Editor preferences pane : You can configure various application (that's me!) behaviors in the General preference pane . The Basics Before I tell you about all the extra syntaxes and capabilities I have, I'll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the Markdown preference pane . Lets jump right in. Line Breaks To force a line break, put two spaces and a newline (return) at the end of the line. These lines won't break These lines will break Strong and Emphasize Strong : **Strong** or __Strong__ (Command-B) Emphasize : *Emphasize* or _Emphasize_ [^emphasize] (Command-I) Headers (like this one!) Header 1 ======== Header 2 -------- or # Header 1 ## Header 2 ### Header 3 #### Header 4 ##### Header 5 ###### Header 6 Links and Email Inline Just put angle brackets around an email and it becomes clickable: uranusjr@gmail.com <uranusjr@gmail.com> Same thing with urls: http://macdown.uranusjr.com <http://macdown.uranusjr.com> Perhaps you want to some link text like this: Macdown Website [Macdown Website](http://macdown.uranusjr.com \"Title\") (The title is optional) Reference style Sometimes it looks too messy to include big long urls inline, or you want to keep all your urls together. Make a link [a link][arbitrary_id] then on it's own line anywhere else in the file: [arbitrary_id]: http://macdown.uranusjr.com \"Title\" If the link text itself would make a good id, you can link like this [like this][] , then on it's own line anywhere else in the file: [like this]: http://macdown.uranusjr.com Images Inline ![Alt Image Text](path/or/url/to.jpg \"Optional Title\") Reference style ![Alt Image Text][image-id] on it's own line elsewhere: [image-id]: path/or/url/to.jpg \"Optional Title\" Lists Lists must be preceded by a blank line (or block element) Unordered lists start each item with a * - works too Indent a level to make a nested list Ordered lists are supported. Start each item (number-period-space) like 1. It doesn't matter what number you use, I will render them sequentially So you might want to start each line with 1. and let me sort it out Here is the code: * Lists must be preceded by a blank line (or block element) * Unordered lists start each item with a `*` - `-` works too * Indent a level to make a nested list 1. Ordered lists are supported. 2. Start each item (number-period-space) like `1. ` 42. It doesn't matter what number you use, I will render them sequentially 1. So you might want to start each line with `1.` and let me sort it out Block Quote Angle brackets > are used for block quotes. Technically not every line needs to start with a > as long as there are no empty lines between paragraphs. Looks kinda ugly though. Block quotes can be nested. Multiple Levels Most markdown syntaxes work inside block quotes. Lists Links Etc. Here is the code: > Angle brackets `>` are used for block quotes. Technically not every line needs to start with a `>` as long as there are no empty lines between paragraphs. > Looks kinda ugly though. > > Block quotes can be nested. > > > Multiple Levels > > Most markdown syntaxes work inside block quotes. > > * Lists > * [Links][arbitrary_id] > * Etc. Inline Code Inline code is indicated by surrounding it with backticks: `Inline code` If your code has `backticks` that need to be displayed, you can use double backticks: ``Code with `backticks` `` (mind the spaces preceding the final set of backticks) Block Code If you indent at least four spaces or one tab, I'll display a code block. print('This is a code block') print('The block must be preceded by a blank line') print('Then indent at least 4 spaces or 1 tab') print('Nesting does nothing. Your code is displayed Literally') I also know how to do something called Fenced Code Blocks which I will tell you about later. Horizontal Rules If you type three asterisks *** or three dashes --- on a line, I'll display a horizontal rule: The Markdown Preference Pane This is where I keep all preferences related to how I parse markdown into html. Document Formatting The Smartypants extension automatically transforms straight quotes ( \" and ' ) in your text into typographer\u2019s quotes ( \u201c , \u201d , \u2018 , and \u2019 ) according to the context. Very useful if you\u2019re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence. Block Formatting Table This is a table: First Header Second Header Content Cell Content Cell Content Cell Content Cell You can align cell contents with syntax like this: Left Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 The left- and right-most pipes ( | ) are only aesthetic, and can be omitted. The spaces don\u2019t matter, either. Alignment depends solely on : marks. Fenced Code Block This is a fenced code block: print ('Hello world!)' You can also use waves ( ~ ) instead of back ticks ( ` ): print('Hello world!') You can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the Enable highlighting in code blocks option. This is what happens if you enable it: I support many popular languages as well as some generic syntax descriptions that can be used if your language of choice is not supported. See relevant sections on the official site for a full list of supported syntaxes. Inline Formatting The following is a list of optional inline markups supported: Option name Markup Result if enabled Intra-word emphasis So A*maz*ing So A maz ing Strikethrough \\~~Much wow\\~~ Much wow Underline [^under] _So doge_ So doge Quote [^quote] \\\"Such editor\\\" Such editor Highlight \\==So good\\== So good Superscript hoge\\^(fuga) hoge fuga Autolink http://t.co http://t.co Footnotes [\\^4] and [\\^4]: [^4] and footnote 4 [^4]: You don't have to use a number. Arbitrary things like [^footy note4] and [^footy note4]: will also work. But they will render as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes. The Rendering Preference Pane This is where I keep preferences relating to how I render and style the parsed markdown in the preview window. CSS You can choose different css files for me to use to render your html. You can even customize or add your own custom css files. Syntax Highlighting You have already seen how I can syntax highlight your fenced code blocks. See the Fenced Code Block section if you haven\u2019t! You can also choose different themes for syntax highlighting. TeX-like Math Syntax I can also render TeX-like math syntaxes, if you allow me to.[^math] I can do inline math like this: \\( 1 + 1 \\) or this (in MathML): 1 + 1 , and block math: \\[ A^T_S = B \\] or (in MathML) A S T = B Task List Syntax [x] I can render checkbox list syntax [x] I support nesting [x] I support ordered and unordered lists [ ] I don't support clicking checkboxes directly in the html window Jekyll front-matter If you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with --- . For example: --- title: \"Macdown is my friend\" date: 2014-06-06 20:00:00 --- Render newline literally Normally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some other program render it. The General Preferences Pane This is where I keep preferences related to application behavior. The General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit command-R instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases. The Editor Preference Pane This is where I keep preferences related to the behavior and styling of the editing window. Styling My editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of Mou \u2019s creator, Chen Luo) if you don\u2019t know where to start. You can also edit, or even add new themes if you want to! Just click the Reveal button, and start moving things around. Remember to use the correct file extension ( .styles ), though. I\u2019m picky about that. I offer auto-completion and other functions to ease your editing experience. If you don\u2019t like it, however, you can turn them off. Hack On That\u2019s about it. Thanks for listening. I\u2019ll be quiet from now on (unless there\u2019s an update about the app\u2014I\u2019ll remind you for that!). Happy writing! [^emphasize]: If Underlines is turned on, _this notation_ will render as underlined instead of emphasized [^under]: If Underline is disabled _this_ will be rendered as emphasized instead of being underlined. [^quote]: Quote replaces literal \" characters with html <q> tags. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence. Note that Quote is different from blockquote , which is part of standard Markdown. [^math]: Internet connection required. https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax","title":"Markdown Syntax"},{"location":"Markdown/Markdown%20Syntax/#macdown","text":"Hello there! I\u2019m MacDown , the open source Markdown editor for OS X. Let me introduce myself.","title":"MacDown"},{"location":"Markdown/Markdown%20Syntax/#markdown-and-i","text":"Markdown is a plain text formatting syntax created by John Gruber, aiming to provide a easy-to-read and feasible markup. The original Markdown syntax specification can be found here . MacDown is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel. I support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the Markdown preference pane . You can specify extra HTML rendering options through the Rendering preference pane . You can customize the editor window to you liking in the Editor preferences pane : You can configure various application (that's me!) behaviors in the General preference pane .","title":"Markdown and I"},{"location":"Markdown/Markdown%20Syntax/#the-basics","text":"Before I tell you about all the extra syntaxes and capabilities I have, I'll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the Markdown preference pane . Lets jump right in.","title":"The Basics"},{"location":"Markdown/Markdown%20Syntax/#line-breaks","text":"To force a line break, put two spaces and a newline (return) at the end of the line. These lines won't break These lines will break","title":"Line Breaks"},{"location":"Markdown/Markdown%20Syntax/#strong-and-emphasize","text":"Strong : **Strong** or __Strong__ (Command-B) Emphasize : *Emphasize* or _Emphasize_ [^emphasize] (Command-I)","title":"Strong and Emphasize"},{"location":"Markdown/Markdown%20Syntax/#headers-like-this-one","text":"Header 1 ======== Header 2 -------- or # Header 1 ## Header 2 ### Header 3 #### Header 4 ##### Header 5 ###### Header 6","title":"Headers (like this one!)"},{"location":"Markdown/Markdown%20Syntax/#links-and-email","text":"","title":"Links and Email"},{"location":"Markdown/Markdown%20Syntax/#inline","text":"Just put angle brackets around an email and it becomes clickable: uranusjr@gmail.com <uranusjr@gmail.com> Same thing with urls: http://macdown.uranusjr.com <http://macdown.uranusjr.com> Perhaps you want to some link text like this: Macdown Website [Macdown Website](http://macdown.uranusjr.com \"Title\") (The title is optional)","title":"Inline"},{"location":"Markdown/Markdown%20Syntax/#reference-style","text":"Sometimes it looks too messy to include big long urls inline, or you want to keep all your urls together. Make a link [a link][arbitrary_id] then on it's own line anywhere else in the file: [arbitrary_id]: http://macdown.uranusjr.com \"Title\" If the link text itself would make a good id, you can link like this [like this][] , then on it's own line anywhere else in the file: [like this]: http://macdown.uranusjr.com","title":"Reference style"},{"location":"Markdown/Markdown%20Syntax/#images","text":"","title":"Images"},{"location":"Markdown/Markdown%20Syntax/#inline_1","text":"![Alt Image Text](path/or/url/to.jpg \"Optional Title\")","title":"Inline"},{"location":"Markdown/Markdown%20Syntax/#reference-style_1","text":"![Alt Image Text][image-id] on it's own line elsewhere: [image-id]: path/or/url/to.jpg \"Optional Title\"","title":"Reference style"},{"location":"Markdown/Markdown%20Syntax/#lists","text":"Lists must be preceded by a blank line (or block element) Unordered lists start each item with a * - works too Indent a level to make a nested list Ordered lists are supported. Start each item (number-period-space) like 1. It doesn't matter what number you use, I will render them sequentially So you might want to start each line with 1. and let me sort it out Here is the code: * Lists must be preceded by a blank line (or block element) * Unordered lists start each item with a `*` - `-` works too * Indent a level to make a nested list 1. Ordered lists are supported. 2. Start each item (number-period-space) like `1. ` 42. It doesn't matter what number you use, I will render them sequentially 1. So you might want to start each line with `1.` and let me sort it out","title":"Lists"},{"location":"Markdown/Markdown%20Syntax/#block-quote","text":"Angle brackets > are used for block quotes. Technically not every line needs to start with a > as long as there are no empty lines between paragraphs. Looks kinda ugly though. Block quotes can be nested. Multiple Levels Most markdown syntaxes work inside block quotes. Lists Links Etc. Here is the code: > Angle brackets `>` are used for block quotes. Technically not every line needs to start with a `>` as long as there are no empty lines between paragraphs. > Looks kinda ugly though. > > Block quotes can be nested. > > > Multiple Levels > > Most markdown syntaxes work inside block quotes. > > * Lists > * [Links][arbitrary_id] > * Etc.","title":"Block Quote"},{"location":"Markdown/Markdown%20Syntax/#inline-code","text":"Inline code is indicated by surrounding it with backticks: `Inline code` If your code has `backticks` that need to be displayed, you can use double backticks: ``Code with `backticks` `` (mind the spaces preceding the final set of backticks)","title":"Inline Code"},{"location":"Markdown/Markdown%20Syntax/#block-code","text":"If you indent at least four spaces or one tab, I'll display a code block. print('This is a code block') print('The block must be preceded by a blank line') print('Then indent at least 4 spaces or 1 tab') print('Nesting does nothing. Your code is displayed Literally') I also know how to do something called Fenced Code Blocks which I will tell you about later.","title":"Block Code"},{"location":"Markdown/Markdown%20Syntax/#horizontal-rules","text":"If you type three asterisks *** or three dashes --- on a line, I'll display a horizontal rule:","title":"Horizontal Rules"},{"location":"Markdown/Markdown%20Syntax/#the-markdown-preference-pane","text":"This is where I keep all preferences related to how I parse markdown into html.","title":"The Markdown Preference Pane"},{"location":"Markdown/Markdown%20Syntax/#document-formatting","text":"The Smartypants extension automatically transforms straight quotes ( \" and ' ) in your text into typographer\u2019s quotes ( \u201c , \u201d , \u2018 , and \u2019 ) according to the context. Very useful if you\u2019re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence.","title":"Document Formatting"},{"location":"Markdown/Markdown%20Syntax/#block-formatting","text":"","title":"Block Formatting"},{"location":"Markdown/Markdown%20Syntax/#table","text":"This is a table: First Header Second Header Content Cell Content Cell Content Cell Content Cell You can align cell contents with syntax like this: Left Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 The left- and right-most pipes ( | ) are only aesthetic, and can be omitted. The spaces don\u2019t matter, either. Alignment depends solely on : marks.","title":"Table"},{"location":"Markdown/Markdown%20Syntax/#fenced-code-block","text":"This is a fenced code block: print ('Hello world!)' You can also use waves ( ~ ) instead of back ticks ( ` ): print('Hello world!') You can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the Enable highlighting in code blocks option. This is what happens if you enable it: I support many popular languages as well as some generic syntax descriptions that can be used if your language of choice is not supported. See relevant sections on the official site for a full list of supported syntaxes.","title":"Fenced Code Block"},{"location":"Markdown/Markdown%20Syntax/#inline-formatting","text":"The following is a list of optional inline markups supported: Option name Markup Result if enabled Intra-word emphasis So A*maz*ing So A maz ing Strikethrough \\~~Much wow\\~~ Much wow Underline [^under] _So doge_ So doge Quote [^quote] \\\"Such editor\\\" Such editor Highlight \\==So good\\== So good Superscript hoge\\^(fuga) hoge fuga Autolink http://t.co http://t.co Footnotes [\\^4] and [\\^4]: [^4] and footnote 4 [^4]: You don't have to use a number. Arbitrary things like [^footy note4] and [^footy note4]: will also work. But they will render as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes.","title":"Inline Formatting"},{"location":"Markdown/Markdown%20Syntax/#the-rendering-preference-pane","text":"This is where I keep preferences relating to how I render and style the parsed markdown in the preview window.","title":"The Rendering Preference Pane"},{"location":"Markdown/Markdown%20Syntax/#css","text":"You can choose different css files for me to use to render your html. You can even customize or add your own custom css files.","title":"CSS"},{"location":"Markdown/Markdown%20Syntax/#syntax-highlighting","text":"You have already seen how I can syntax highlight your fenced code blocks. See the Fenced Code Block section if you haven\u2019t! You can also choose different themes for syntax highlighting.","title":"Syntax Highlighting"},{"location":"Markdown/Markdown%20Syntax/#tex-like-math-syntax","text":"I can also render TeX-like math syntaxes, if you allow me to.[^math] I can do inline math like this: \\( 1 + 1 \\) or this (in MathML): 1 + 1 , and block math: \\[ A^T_S = B \\] or (in MathML) A S T = B","title":"TeX-like Math Syntax"},{"location":"Markdown/Markdown%20Syntax/#task-list-syntax","text":"[x] I can render checkbox list syntax [x] I support nesting [x] I support ordered and unordered lists [ ] I don't support clicking checkboxes directly in the html window","title":"Task List Syntax"},{"location":"Markdown/Markdown%20Syntax/#jekyll-front-matter","text":"If you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with --- . For example: --- title: \"Macdown is my friend\" date: 2014-06-06 20:00:00 ---","title":"Jekyll front-matter"},{"location":"Markdown/Markdown%20Syntax/#render-newline-literally","text":"Normally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some other program render it.","title":"Render newline literally"},{"location":"Markdown/Markdown%20Syntax/#the-general-preferences-pane","text":"This is where I keep preferences related to application behavior. The General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit command-R instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases.","title":"The General Preferences Pane"},{"location":"Markdown/Markdown%20Syntax/#the-editor-preference-pane","text":"This is where I keep preferences related to the behavior and styling of the editing window.","title":"The Editor Preference Pane"},{"location":"Markdown/Markdown%20Syntax/#styling","text":"My editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of Mou \u2019s creator, Chen Luo) if you don\u2019t know where to start. You can also edit, or even add new themes if you want to! Just click the Reveal button, and start moving things around. Remember to use the correct file extension ( .styles ), though. I\u2019m picky about that. I offer auto-completion and other functions to ease your editing experience. If you don\u2019t like it, however, you can turn them off.","title":"Styling"},{"location":"Markdown/Markdown%20Syntax/#hack-on","text":"That\u2019s about it. Thanks for listening. I\u2019ll be quiet from now on (unless there\u2019s an update about the app\u2014I\u2019ll remind you for that!). Happy writing! [^emphasize]: If Underlines is turned on, _this notation_ will render as underlined instead of emphasized [^under]: If Underline is disabled _this_ will be rendered as emphasized instead of being underlined. [^quote]: Quote replaces literal \" characters with html <q> tags. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence. Note that Quote is different from blockquote , which is part of standard Markdown. [^math]: Internet connection required. https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax","title":"Hack On"},{"location":"Markdown/Markdown%E6%A8%A1%E7%89%88/","text":"\u6b22\u8fce\u4f7f\u7528Markdown\u7f16\u8f91\u5668 KaTeX\u6570\u5b66\u516c\u5f0f \u60a8\u53ef\u4ee5\u4f7f\u7528\u6e32\u67d3LaTeX\u6570\u5b66\u8868\u8fbe\u5f0f KaTeX : Gamma\u516c\u5f0f\u5c55\u793a $$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$$ \u662f\u901a\u8fc7\u6b27\u62c9\u79ef\u5206 $$ \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. $$","title":"Markdown\u6a21\u7248"},{"location":"Markdown/Markdown%E6%A8%A1%E7%89%88/#markdown","text":"","title":"\u6b22\u8fce\u4f7f\u7528Markdown\u7f16\u8f91\u5668"},{"location":"Markdown/Markdown%E6%A8%A1%E7%89%88/#katex","text":"\u60a8\u53ef\u4ee5\u4f7f\u7528\u6e32\u67d3LaTeX\u6570\u5b66\u8868\u8fbe\u5f0f KaTeX : Gamma\u516c\u5f0f\u5c55\u793a $$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$$ \u662f\u901a\u8fc7\u6b27\u62c9\u79ef\u5206 $$ \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. $$","title":"KaTeX\u6570\u5b66\u516c\u5f0f"},{"location":"Programing%20Language/Variable%20and%20Pointer/","text":"\u53d8\u91cf\u5bf9\u5e94\u4e00\u4e2aRAM\u5730\u5740\u3002\u6307\u9488\u4e5f\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u4e0e\u666e\u901a\u53d8\u91cf\u7684\u533a\u522b\u662f\uff0c\u5b58\u50a8\u5728\u6307\u9488\u53d8\u91cf\u91cc\u7684\u503c\u662f\u53e6\u5916\u4e00\u4e2aRAM\u5730\u5740\u3002","title":"Variable and Pointer"},{"location":"SSH/SSH%20command/","text":"SSH Login ssh wzq@192.168.1.5 scp - \u201cSecure Copy\u201d Sometimes, you may want to get individual files or entire folders from the Hive machines onto your local system, or vice versa. You can do this by using scp: scp <source> <destination> For example, If I wanted to copy from my local machine to a Remote machine, I would use: scp ~/Downloads/example.txt wzq@192.168.1.5:~/some_folder/ scp by default only works with files. To copy folders, you need to tell scp to \u201crecursively\u201d copy the folder and all its contents, which you can do with the -r flag: scp -rp ~/Downloads wzq@192.168.1.5:~/some_folder/","title":"SSH command"},{"location":"SSH/SSH%20command/#ssh-login","text":"ssh wzq@192.168.1.5","title":"SSH Login"},{"location":"SSH/SSH%20command/#scp-secure-copy","text":"Sometimes, you may want to get individual files or entire folders from the Hive machines onto your local system, or vice versa. You can do this by using scp: scp <source> <destination> For example, If I wanted to copy from my local machine to a Remote machine, I would use: scp ~/Downloads/example.txt wzq@192.168.1.5:~/some_folder/ scp by default only works with files. To copy folders, you need to tell scp to \u201crecursively\u201d copy the folder and all its contents, which you can do with the -r flag: scp -rp ~/Downloads wzq@192.168.1.5:~/some_folder/","title":"scp - \u201cSecure Copy\u201d"},{"location":"SSH/SSH%20config/","text":"\u5bf9 ssh \u8bbe\u7f6e\u505a\u4e00\u4e9b\u5c0f\u4f18\u5316\u53ef\u80fd\u662f\u5f88\u6709\u7528\u7684\uff0c\u4f8b\u5982\u8fd9\u4e2a \"~/.ssh/config\" \u6587\u4ef6\u5305\u542b\u4e86\u9632\u6b62\u7279\u5b9a\u7f51\u7edc\u73af\u5883\u4e0b\u8fde\u63a5\u65ad\u5f00\u3001\u538b\u7f29\u6570\u636e\u3001\u591a\u901a\u9053\u7b49\u9009\u9879 TCPKeepAlive=yes ServerAliveInterval=15 ServerAliveCountMax=6 Compression=yes ControlMaster auto ControlPath /tmp/%r@%h:%p ControlPersist yes","title":"SSH config"},{"location":"SSH/SSH%20install/","text":"Intall in ubuntu install opensshservice sudo apt install -y openssh-server install openssh-client sudo apt install -y openssh-client check ps -aux | grep ssh startup sudo service ssh start","title":"SSH install"},{"location":"SSH/SSH%20install/#intall-in-ubuntu","text":"install opensshservice sudo apt install -y openssh-server install openssh-client sudo apt install -y openssh-client check ps -aux | grep ssh startup sudo service ssh start","title":"Intall in ubuntu"},{"location":"SSH/SSH%20login%20without%20password/","text":"\u5047\u8bbe\u8fdc\u7a0b\u7ec8\u7aef\u7684IP\u5730\u5740\u4e3a \u201c192.168.83.11\u201d 1. \u751f\u6210\u79c1\u94a5\u6587\u4ef6 \u5ba2\u6237\u7aef\u7ec8\u7aef\u4e0b\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4 ssh-keygen -N \"\" -t rsa -f ~/.ssh/id_rsa \u6bcf\u6b21\u6267\u884c ssh-keygen -t rsa \u4ea7\u751f\u7684\u79c1\u94a5\u6587\u4ef6\u90fd\u4f1a\u4e0d\u540c \u5982\u679c\u6587\u4ef6 \"~/.ssh/id_rsa\" \u5b58\u5728\uff0c\u4f1a\u63d0\u793a\u662f\u5426\u8986\u76d6\u8be5\u6587\u4ef6\uff0c\u6b64\u65f6\u53ef\u9009\u62e9\"n\"\u4e0d\u8986\u76d6\u8be5\u6587\u4ef6\u800c\u4f7f\u7528\u5df2\u6709\u7684id_rsa\u6587\u4ef6\u3002\u5982\u679c\u9009\u62e9\"y\"\u5219\u4f1a\u91cd\u65b0\u751f\u6210 \"~/.ssh/id_rsa\" \u6587\u4ef6\u3002\u63a5\u4e0b\u6765\u4f1a\u63d0\u793a\u8f93\u5165passphrase\uff0c\u56de\u8f66\u786e\u5b9a\u4f7f\u7528\u7a7a\u7684passphrase\uff0c\u518d\u6b21\u56de\u8f66\u786e\u8ba4\uff08\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u8f93\u51fapassphrase\uff0c\u76f8\u5f53\u4e8essh\u65f6\u767b\u5f55\u7684\u5bc6\u7801\uff09\u3002\u7136\u540e\u4f1a\u91cd\u65b0\u751f\u6210id_rsa\u6587\u4ef6\u548cid_rsa.pub\u6587\u4ef6. 2.\u5c06\u672c\u5730\u7684public key \u62f7\u8d1d\u5230\u8fdc\u7a0b\u7ec8\u7aef\u4e0a scp ~/.ssh/id_rsa.pub wzq@192.168.83.11:~/Downloads 3.\u5c06\u672c\u5730\u7684public key\u8ffd\u52a0\u5230\u8fdc\u7a0b\u7ec8\u7aefauthorized_keys\u6587\u4ef6\u4e2d cat ~/Downloads/id_rsa.pub >> ~/.ssh/authorized_keys Alternatively, Step 2 and 3 can be replaced with one step as following. ssh-copy-id -i ~/.ssh/id_rsa.pub wzq@192.168.83.11 4.\u6d4b\u8bd5\u662f\u5426\u914d\u7f6e\u751f\u6548 ssh wzq@192.168.83.11","title":"SSH login without password"},{"location":"SSH/SSH%20login%20without%20password/#1","text":"\u5ba2\u6237\u7aef\u7ec8\u7aef\u4e0b\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4 ssh-keygen -N \"\" -t rsa -f ~/.ssh/id_rsa \u6bcf\u6b21\u6267\u884c ssh-keygen -t rsa \u4ea7\u751f\u7684\u79c1\u94a5\u6587\u4ef6\u90fd\u4f1a\u4e0d\u540c \u5982\u679c\u6587\u4ef6 \"~/.ssh/id_rsa\" \u5b58\u5728\uff0c\u4f1a\u63d0\u793a\u662f\u5426\u8986\u76d6\u8be5\u6587\u4ef6\uff0c\u6b64\u65f6\u53ef\u9009\u62e9\"n\"\u4e0d\u8986\u76d6\u8be5\u6587\u4ef6\u800c\u4f7f\u7528\u5df2\u6709\u7684id_rsa\u6587\u4ef6\u3002\u5982\u679c\u9009\u62e9\"y\"\u5219\u4f1a\u91cd\u65b0\u751f\u6210 \"~/.ssh/id_rsa\" \u6587\u4ef6\u3002\u63a5\u4e0b\u6765\u4f1a\u63d0\u793a\u8f93\u5165passphrase\uff0c\u56de\u8f66\u786e\u5b9a\u4f7f\u7528\u7a7a\u7684passphrase\uff0c\u518d\u6b21\u56de\u8f66\u786e\u8ba4\uff08\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u8f93\u51fapassphrase\uff0c\u76f8\u5f53\u4e8essh\u65f6\u767b\u5f55\u7684\u5bc6\u7801\uff09\u3002\u7136\u540e\u4f1a\u91cd\u65b0\u751f\u6210id_rsa\u6587\u4ef6\u548cid_rsa.pub\u6587\u4ef6.","title":"1. \u751f\u6210\u79c1\u94a5\u6587\u4ef6"},{"location":"SSH/SSH%20login%20without%20password/#2public-key","text":"scp ~/.ssh/id_rsa.pub wzq@192.168.83.11:~/Downloads","title":"2.\u5c06\u672c\u5730\u7684public key \u62f7\u8d1d\u5230\u8fdc\u7a0b\u7ec8\u7aef\u4e0a"},{"location":"SSH/SSH%20login%20without%20password/#3public-keyauthorized_keys","text":"cat ~/Downloads/id_rsa.pub >> ~/.ssh/authorized_keys Alternatively, Step 2 and 3 can be replaced with one step as following. ssh-copy-id -i ~/.ssh/id_rsa.pub wzq@192.168.83.11","title":"3.\u5c06\u672c\u5730\u7684public key\u8ffd\u52a0\u5230\u8fdc\u7a0b\u7ec8\u7aefauthorized_keys\u6587\u4ef6\u4e2d"},{"location":"SSH/SSH%20login%20without%20password/#4","text":"ssh wzq@192.168.83.11","title":"4.\u6d4b\u8bd5\u662f\u5426\u914d\u7f6e\u751f\u6548"},{"location":"Shell/Shell%20Command/","text":"Linux \u5b89\u88c5\u5305\u67e5\u627e https://pkgs.org \u7cfb\u7edf\u786c\u4ef6\u5de5\u5177 \u67e5\u770b\u5404\u786c\u4ef6\u7684\u578b\u53f7 lspci CPU # \u67e5\u770bcup\u4fe1\u606f cat /proc/cpuinfo # \u67e5\u770b\u5404\u7ea7cache\u5927\u5c0f getconf -a | grep CACHE sudo dmidecode -t 4 # get thread or cpu core count nproc \u78c1\u76d8 \u53c2\u8003\uff1a \u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc-\u7b2c\u4e03\u7ae0 \u5217\u51fa\u7cfb\u7edf\u6240\u6709\u7684\u88c5\u7f6e\uff0c\u5305\u62ec\u672a\u6302\u8f7d\u7684 lsblk -p lsblk -o NAME,PARTTYPE,MOUNTPOINT \u67e5\u770b\u76ee\u524d\u5df2\u6302\u8f7d\u7684\u88c5\u7f6e/\u78c1\u76d8\u7684\u5269\u4f59\u7a7a\u95f4 # \u67e5\u770b\u76ee\u524d\u6302\u8f7d\u7684\u88c5\u7f6e/\u78c1\u76d8\u5269\u4f59\u7a7a\u95f4 df -Th # \u67e5\u770b /etc \u6240\u5728\u78c1\u76d8\u7684\u5269\u4f59\u7a7a\u95f4 df -h /etc \u67e5\u770b\u6587\u4ef6\u5360\u7528\u5927\u5c0f # \u67e5\u770b/home\u76ee\u5f55\u4e0b\u5404\u6587\u4ef6\u5360\u7528\u5927\u5c0f du -sh /home/* # \u67e5\u770b /home\u76ee\u5f55\u5360\u7528\u5927\u5c0f du -sh /home \u67e5\u770b\u78c1\u76d8\u5206\u533a\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b sudo parted /dev/sda print \u65e7\u6709\u7684MBR\u5206\u533a\u4f7f\u7528\u7684\u201c\u78c1\u76d8\u5206\u533a\u201d\u547d\u4ee4 # \u786c\u76d8\u5206\u533a\u5de5\u5177 fdisk, cfdisk, sfdisk, GParted # \u67e5\u770b\u78c1\u76d8\u5206\u533a fdisk -l # \u78c1\u76d8\u5206\u533a fdisk /dev/sda Create file system # ext4 file system mkfs -v -t ext4 /dev/<xxx> # create swap partition file system mkswap /dev/<yyy> # enabled /sbin/swapon -v /dev/<yyy> \u68c0\u67e5\u548c\u4fee\u590d\u635f\u574f\u7684\u786c\u76d8 fsck -C -f -t ext3 /dev/sda1 \u68c0\u67e5\u786c\u76d8\u6247\u533a\u6709\u6ca1\u6709\u574f\u8f68 badblocks -sv /dev/sda \u89c2\u5bdf\u6587\u4ef6\u7cfb\u7edf dumpe2fs \u67e5\u770b\u786c\u76d8\u4fe1\u606f \u5236\u9020\u5546\u5e8f\u5217\u53f7\u7b49 sudo hdparm -i /dev/sda # or sudo smartctl -a /dev/sda \u5236\u4f5c\u542f\u52a8\u786c\u76d8 \u5982\u679c\u5728linux\u4e0a\u7528 lsblk -p \u67e5\u770bUSB\u8bbe\u5907\uff0c\u5982\u679c\u662fmacos\u8981\u7528 diskutil list \u67e5\u770b, \u67e5\u627e\u5230\u6211\u7684USB\u8bbe\u5907\u662f/dev/disk3\uff0c \u7136\u540e\u7528dd\u547d\u4ee4\u628a\u7cfb\u7edf\u5b89\u88c5\u955c\u50cf\u70e7\u5f55\u5230USB\u4e0a dd if=ubuntu-16.04.5-desktop-amd64.iso of=/dev/disk3 \u5982\u679c\u63d0\u793a \u201c Resource busy\u201d, \u5728linux\u4e0a\u7528 umount /dev/disk3 , \u5728macos\u4e0a\u7528 diskutil umount /dev/disk3 \u53d6\u6d88\u6302\u8f7d\u3002 loop dev dd if=/dev/zero of=./rootfs.ext3 bs=1M count=32 mkfs.ext3 rootfs.ext3 sudo mount -o loop rootfs.ext3 /test/ \u67e5\u770binitramfs #\u770b\u4e00\u4e0b initramfs \u88e1\u9762\u7684\u5167\u5bb9\u6709\u4e9b\u5565\u8cc7\u6599\uff1f $ lsinitrd /boot/initramfs-4.18.0-193.el8.x86_64.img $ mkdir /dev/shm/initramfs $ cd /dev/shm/initramfs # \u53d6\u5f97 initramfs \u524d\u9762\u61c9\u8a72\u8981\u53bb\u9664\u7684\u5bb9\u91cf $ cpio -i -d --no-absolute-filenames -I /boot/initramfs-4.18.0-193.el8.x86_64.img 198 blocks # \u9019\u500b\u91cd\u9ede\u5c31\u662f\u5728\u524d\u9762\u7684\u5b57\u5143\u4f54\u4e86\u5e7e\u500b block \u5bb9\u91cf\uff0c\u6bcf\u500b block \u5bb9\u91cf\u70ba 512bytes\uff0c # \u6bcf\u4e00\u500b initramfs \u6a94\u6848\u7684\u524d\u7f6e\u5b57\u5143\u5bb9\u91cf\u90fd\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u9700\u8981\u5148\u627e\u51fa\u4f86\u53bb\u9664\u624d\u884c\uff01 $ dd if=/boot/initramfs-4.18.0-193.el8.x86_64.img of=initramfs.gz bs=512 skip=198 $ file initramfs.gz initramfs.gz: gzip compressed data, from Unix, last modified: Mon May 4 17:56:47 2015,max compression # 3. \u5f9e\u4e0a\u9762\u770b\u5230\u6a94\u6848\u662f gzip \u58d3\u7e2e\u6a94\uff0c\u6240\u4ee5\u5c07\u5b83\u89e3\u58d3\u7e2e\u5f8c\uff0c\u518d\u67e5\u95b1\u4e00\u4e0b\u6a94\u6848\u7684\u985e\u578b\uff01 $ gzip -d initramfs.gz $ file initramfs initramfs: ASCII cpio archive (SVR4 with no CRC) # \u89e3\u958b\u5f8c\u53c8\u7522\u751f\u4e00\u500b cpio \u6a94\u6848\uff0c\u5f97\u8981\u5c07\u5b83\u7528 cpio \u7684\u65b9\u6cd5\u89e3\u958b\uff01\u52a0\u4e0a\u4e0d\u8981\u7d55\u5c0d\u8def\u5f91\u7684\u53c3\u6578\u8f03\u4fdd\u96aa\uff01 $ cpio -i -d -H newc --no-absolute-filenames < initramfs \u7cfb\u7edf\u4fe1\u606f \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f Type any one of the following command to find os name and version in Linux: cat /etc/os-release lsb_release -a hostnamectl Type the following command to find Linux kernel version uname -r # \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f cat /proc/version # \u7cfb\u7edf\u67b6\u6784 arch file /bin/ls # \u4f9d\u636elong\u7c7b\u578b\u7684\u4f4d\u6570\u5224\u65ad\u5b89\u88c5\u7cfb\u7edf\u7684\u4f4d\u6570\uff0c \u4e00\u822c64\u4f4d\u64cd\u4f5c\u7cfb\u7edflong\u7c7b\u578b\u662f64\u4f4d get_conf LONG_BIT man - Manual Pages If you want the man page for a single program/command, you can run: man command_name | less Hit q to exit the man page and get back to your terminal prompt. \u67e5\u627e\u7cfb\u7edf\u5185\u8ddfpasswd\u6709\u5173\u7684\u8bf4\u660e man -f passwd If you want to search the man pages for a command that pertains to a keyword: man -k single_keyword | less This command will search the manual pages for a command with the keyword 'single_keyword'. Forget how to open files in Vim? You can search for 'editor' and get a list of all editor-related commands on your system. \u7cfb\u7edf\u8fdb\u7a0b ps -f -o pid,ppid,tty,stat,wchan,args # \u67e5\u770b7979 \u548c 29825 \u8fdb\u7a0b ps -p 7979 -p 29825 -o \"pid ppid sid tty cmd\" # \u6740\u6389kucker\u540d\u5b57\u7684\u8fdb\u7a0b ps -ef | grep \"kucker\" | awk '{print $2}' | xargs -i sudo kill -9 {} \u7f51\u7edc \u67e5\u8be2\u57df\u540dIP dig +norecurse @a.root-servers.net any yahoo.com dig +norecurse @e.gtld-servers.net any yahoo.com dig +norecurse @ns1.yahoo.com any yahoo.com nslookup yahoo.com nslookup -type=NS yahoo.com nslookup yahoo.com ns2.yahoo.com netstat -a --inet netstat -tlunp tcpdump -t -N 'port 80' \u6587\u4ef6 \u6587\u4ef6\u6743\u9650 # \u6539\u53d8\u6240\u5c5e\u7fa4\u7ec4 change group chgrp [-R] \u7fa4\u7ec4\u540d dirname/filename ... # \u6539\u53d8\u6863\u6848\u62e5\u6709\u8005 change owner chown [-R] \u8d26\u53f7\u540d \u6863\u6848\u6212\u76ee\u5f54 chown [-R] \u8d26\u53f7\u540d:\u7ec4\u540d \u6863\u6848\u6212\u76ee\u5f54 # \u6539\u53d8\u6743\u9650 # \u6570\u5b57\u7c7b\u578b\u6539\u53d8\u6863\u6848\u6743\u9650 chmod [-R] 740 \u6863\u6848\u76ee\u5f54 # \u7b26\u53f7\u7c7b\u578b\u6539\u53d8\u6863\u6848\u6743\u9650 # | u | +(\u52a0\u5165) | r | # chmod | g | -(\u9664\u53bb) | w | \u6863\u6848\u6212\u76ee\u5f54 # | o | =(\u8bbe\u5b9a) | x | # | a | | | chmod u=rwx,go=rx .bashrc chmod a-x .bashrc \u6587\u4ef6\u7ba1\u7406 # \u5c55\u793a\u76ee\u5f55\u5217\u8868 ls -ld \u76ee\u5f55 # \u56de\u5230\u4e0a\u6b21\u8bbf\u95ee\u7684\u76ee\u5f55 cd - # \u8fdb\u5165wzq\u7528\u6237\u5bb6\u76ee\u5f55 cd wzq~ grep \u66ff\u6362\u6216\u5220\u9664\u8de8\u8d8a\u591a\u4e2a\u76ee\u5f55\u7684\u591a\u4e2a\u6587\u4ef6\u91cc\u7684\u6307\u5b9a\u6587\u672c # \u66ff\u6362\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u91cc\u7684\u2018window\u2019\u4e3a\u2018linux\u2019 grep -rl 'windows' ./ | xargs sed -i 's/windows/linux/g' # Mac\u4e0bsed\u547d\u4ee4\u7684\"-i\"\u9009\u9879\u540e\u9762\u9700\u8981\u52a0\u5b57\u7b26\u4e32\u8868\u793a\u5907\u4efd\u6587\u4ef6\u7684\u540e\u7f00 grep -rl 'windows' ./ | xargs sed -i '' 's/windows/linux/g' #\u5220\u9664\u51fa\u73b0\u2018windows\u2019\u7684\u884c grep -rl 'windows' ./ | xargs sed -i '' '/windows/d' \u7edf\u8ba1\u67d0\u4e2a\u8bcd\u8bed\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 # count the number of occurrence of a word in a text file grep -o -i 'word' test.txt | wc -l find find . -name \"*nng*\" -exec rm -rf {} \\; find /usr/{lib,libexec} -name \\*.la -delete find /usr -depth -name $(uname -m)-lfs-linux-gnu\\* | xargs rm -rf find $(1) -not -type d -and -not -type l -print0 | xargs -0r chmod $(FILE_MODE) diff \u65b9\u6cd5\u4e00\uff1a diff -bur [oldDir] [newDir] \u65b9\u6cd5\u4e8c\uff1a rsync -rcnv [oldDir] [newDir] Split the screen to two columns for comparing convenience diff -y [oldDir] [newDir] sed https://www.grymoire.com/Unix/Sed.html \u538b\u7f29\u4e0e\u6253\u5305 [dmtsai@study ~]$ tar [-z|-j|-J] [cv] [-f \u5f85\u5efa\u7acb\u7684\u65b0\u6a94\u540d] filename... <==\u6253\u5305\u8207\u58d3\u7e2e [dmtsai@study ~]$ tar [-z|-j|-J] [tv] [-f \u65e2\u6709\u7684 tar\u6a94\u540d] <==\u5bdf\u770b\u6a94\u540d [dmtsai@study ~]$ tar [-z|-j|-J] [xv] [-f \u65e2\u6709\u7684 tar\u6a94\u540d] [-C \u76ee\u9304] <==\u89e3\u58d3\u7e2e \u9078\u9805\u8207\u53c3\u6578\uff1a -c \uff1a\u5efa\u7acb\u6253\u5305\u6a94\u6848\uff0c\u53ef\u642d\u914d -v \u4f86\u5bdf\u770b\u904e\u7a0b\u4e2d\u88ab\u6253\u5305\u7684\u6a94\u540d(filename) -t \uff1a\u5bdf\u770b\u6253\u5305\u6a94\u6848\u7684\u5167\u5bb9\u542b\u6709\u54ea\u4e9b\u6a94\u540d\uff0c\u91cd\u9ede\u5728\u5bdf\u770b\u300e\u6a94\u540d\u300f\u5c31\u662f\u4e86\uff1b -x \uff1a\u89e3\u6253\u5305\u6216\u89e3\u58d3\u7e2e\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u642d\u914d -C (\u5927\u5beb) \u5728\u7279\u5b9a\u76ee\u9304\u89e3\u958b \u7279\u5225\u7559\u610f\u7684\u662f\uff0c -c, -t, -x \u4e0d\u53ef\u540c\u6642\u51fa\u73fe\u5728\u4e00\u4e32\u6307\u4ee4\u5217\u4e2d\u3002 -z \uff1a\u900f\u904e gzip \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.gz -j \uff1a\u900f\u904e bzip2 \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.bz2 -J \uff1a\u900f\u904e xz \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.xz \u7279\u5225\u7559\u610f\uff0c -z, -j, -J \u4e0d\u53ef\u4ee5\u540c\u6642\u51fa\u73fe\u5728\u4e00\u4e32\u6307\u4ee4\u5217\u4e2d -v \uff1a\u5728\u58d3\u7e2e/\u89e3\u58d3\u7e2e\u7684\u904e\u7a0b\u4e2d\uff0c\u5c07\u6b63\u5728\u8655\u7406\u7684\u6a94\u540d\u986f\u793a\u51fa\u4f86\uff01 -f filename\uff1a-f \u5f8c\u9762\u8981\u7acb\u523b\u63a5\u8981\u88ab\u8655\u7406\u7684\u6a94\u540d\uff01\u5efa\u8b70 -f \u55ae\u7368\u5beb\u4e00\u500b\u9078\u9805\u56c9\uff01(\u6bd4\u8f03\u4e0d\u6703\u5fd8\u8a18) -C \u76ee\u9304 \uff1a\u9019\u500b\u9078\u9805\u7528\u5728\u89e3\u58d3\u7e2e\uff0c\u82e5\u8981\u5728\u7279\u5b9a\u76ee\u9304\u89e3\u58d3\u7e2e\uff0c\u53ef\u4ee5\u4f7f\u7528\u9019\u500b\u9078\u9805\u3002 \u5176\u4ed6\u5f8c\u7e8c\u7df4\u7fd2\u6703\u4f7f\u7528\u5230\u7684\u9078\u9805\u4ecb\u7d39\uff1a -p(\u5c0f\u5beb) \uff1a\u4fdd\u7559\u5099\u4efd\u8cc7\u6599\u7684\u539f\u672c\u6b0a\u9650\u8207\u5c6c\u6027\uff0c\u5e38\u7528\u65bc\u5099\u4efd(-c)\u91cd\u8981\u7684\u8a2d\u5b9a\u6a94 -P(\u5927\u5beb) \uff1a\u4fdd\u7559\u7d55\u5c0d\u8def\u5f91\uff0c\u4ea6\u5373\u5141\u8a31\u5099\u4efd\u8cc7\u6599\u4e2d\u542b\u6709\u6839\u76ee\u9304\u5b58\u5728\u4e4b\u610f\uff1b --exclude=FILE\uff1a\u5728\u58d3\u7e2e\u7684\u904e\u7a0b\u4e2d\uff0c\u4e0d\u8981\u5c07 FILE \u6253\u5305\uff01 \u58d3\u3000\u7e2e\uff1atar -jcv -f filename.tar.bz2 \u8981\u88ab\u58d3\u7e2e\u7684\u6a94\u6848\u6216\u76ee\u9304\u540d\u7a31 \u67e5\u3000\u8a62\uff1atar -jtv -f filename.tar.bz2 \u89e3\u58d3\u7e2e\uff1atar -jxv -f filename.tar.bz2 -C \u6b32\u89e3\u58d3\u7e2e\u7684\u76ee\u9304 \u5b9e\u4f8b\uff1a # \u89e3\u538btar.bz2\u6587\u4ef6 tar xvfj ./linux-2.6.23.tar.bz2 tar xvfJ ./linux-2.6.23.tar.xz tar xvfz ./linux-2.6.23.tar.gz tar -xf ./linux-2.6.23.tar.* # \u89e3\u538bpython-3.9.0-docs-html.tar.bz2\u5230/usr/share/doc/python-3.9.0/html tar --strip-components=1 \\ --no-same-owner \\ --no-same-permissions \\ -C /usr/share/doc/python-3.9.0/html \\ -xvf ../python-3.9.0-docs-html.tar.bz2 # --no-same-owner and --no-same-permissions # Ensure the installed files have the correct ownership and permissions. # Without these options, using tar will install the package files with the upstream creator's values. # \u5f53\u524d\u76ee\u5f55\u538b\u7f29\u6253\u5305\u5230/home/wzq/lfs/lfs-2.tar.xz tar -cJpf /home/wzq/lfs/lfs-2.tar.xz . # \u89e3\u538b\u5bfc\u5f53\u524d\u76ee\u5f55 tar -xpf $HOME/lfs-temp-tools-10.0-systemd.tar.xz User add user add the new user vivi groupadd vivi useradd -s /bin/bash -g vivi -m -d /home/vivi vivi # useradd -s /bin/bash -g vivi -m -k /dev/null vivi passwd vivi The command adds an entry to the /etc/passwd, /etc/shadow, /etc/group and /etc/gshadow files. Or, Simply by useradd -s /bin/bash -m vivi passwd vivi Or, adduser is an interactive command-line tool available by default in most Linux distributions. adduser vivi More about create user add user to sudoers Most Linux systems, including Ubuntu, have a user group for sudo users. To grant the new user elevated privileges, add them to the sudo group. usermod -aG sudo vivi The -aG option tells the system to append the user to the specified group. (The -a option is only used with G.) Or sudo adduser vivi sudo More about sudo delete user userdel -r vivi -r Remove Linux user account including home directory and mail spool Verify user information lslogins vivi id vivi View the groups a user belongs to groups vivi Gain root shell sudo -s or sudo -i Terminal CLI Shortcuts [ctrl]+u / [ctrl]+k \u5220\u9664\u884c\u5185\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u4e4b\u524d/\u540e\u7684\u5185\u5bb9 <ctrl> + a <ctrl> + e will move the cursor to the beginning / end of the current line alt-f / alt-b \u53ef\u4ee5\u4ee5\u5355\u8bcd\u4e3a\u5355\u4f4d\u5411\u524d/\u540e\u79fb\u52a8\u5149\u6807 ctrl-w \u5220\u9664\u4f60\u952e\u5165\u7684\u6700\u540e\u4e00\u4e2a\u5355\u8bcd ctrl-l \u6e05\u5c4f <ctrl> + r will let you search through your recently used commands \u4f60\u559c\u6b22\u7684\u8bdd\uff0c\u53ef\u4ee5\u6267\u884c set -o vi \u6765\u4f7f\u7528 vi \u98ce\u683c\u7684\u5feb\u6377\u952e\uff0c\u800c\u6267\u884c set -o emacs \u53ef\u4ee5\u628a\u5b83\u6539\u56de\u6765\u3002 history # number \uff1a\u57f7\u884c\u7b2c\u5e7e\u7b46\u6307\u4ee4\u7684\u610f\u601d\uff1b !number # command \uff1a\u7531\u6700\u8fd1\u7684\u6307\u4ee4\u5411\u524d\u641c\u5c0b\u300e\u6307\u4ee4\u4e32\u958b\u982d\u70ba command\u300f\u7684\u90a3\u500b\u6307\u4ee4\uff0c\u4e26\u57f7\u884c\uff1b !command # \u57f7\u884c\u4e0a\u4e00\u500b\u6307\u4ee4(\u76f8\u7576\u65bc\u6309\u2191\u6309\u9375\u5f8c\uff0c\u6309 Enter) !! \u91cd\u5b9a\u5411 # \u5c07\u6307\u4ee4\u7684\u8cc7\u6599\u5168\u90e8\u5beb\u5165\u540d\u70ba list \u7684\u6a94\u6848\u4e2d find /home -name .bashrc > list 2>&1 wget wget --input-file=downloadListFile --continue --directory-prefix=target-directory curl #-o, --output <file>: Write output to <file> instead of stdout. curl https://github.com/ginuerzh/gost/releases/download/v2.11.1/gost-linux-amd64-2.11.1.gz --output gost.gz # -O, --remote-name: Write output to a local file named like the remote file we get curl -O https://github.com/ginuerzh/gost/releases/download/v2.11.1/gost-linux-amd64-2.11.1.gz \u5173\u673a/\u91cd\u542f # \u672a\u4fdd\u5b58\u7684\u5185\u5b58\u6570\u636e\u5199\u5165\u786c\u76d8 sync # \u7acb\u523b\u5173\u673a\uff0c\u5176\u4e2d now \u76f8\u5f53\u4e8d\u65f6\u95f4\u4e3a 0 \u7684\u72b6\u6001 shutdown -h now # \u7cfb\u7edf\u5728\u4eca\u5929\u7684 20:25 \u5206\u4f1a\u5173\u673a\uff0c\u82e5\u5728 21:25 \u624d\u4e0b\u8fbe\u6b64\u6303\u4ee4\uff0c\u5219\u9691\u5929\u624d\u5173\u673a shutdown -h 20:25 # \u7cfb\u7edf\u518d\u8fc7\u5341\u5206\u949f\u540e\u81ea\u52a2\u5173\u673a shutdown -h +10 # \u7cfb\u7edf\u7acb\u523b\u91cd\u65b0\u542f\u52a2 shutdown -r now # \u518d\u8fc7\u4e09\u5341\u5206\u949f\u7cfb\u7edf\u4f1a\u91cd\u65b0\u542f\u52a2\uff0c\u5e75\u663e\u793a\u540e\u9762\u7684\u8baf\u606f\u7ed9\u6240\u6709\u5728\u5728\u7ebf\u7684\u4f7f\u7528\u8005 shutdown -r +30 'The system will reboot' # \u4ec5\u53d1\u51fa\u8b66\u544a\uff0c\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u5173\u673a\u5566!\u5413\u552c\u4eba! shutdown -k now 'This system will reboot' # \u91cd\u65b0\u542f\u52a2\uff0c\u5173\u673a\uff0c\u65ad\u7535 reboot, halt, poweroff https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md#%E4%BB%85%E9%99%90-os-x-%E7%B3%BB%E7%BB%9F","title":"Shell Command"},{"location":"Shell/Shell%20Command/#linux","text":"https://pkgs.org","title":"Linux \u5b89\u88c5\u5305\u67e5\u627e"},{"location":"Shell/Shell%20Command/#_1","text":"","title":"\u7cfb\u7edf\u786c\u4ef6\u5de5\u5177"},{"location":"Shell/Shell%20Command/#_2","text":"lspci","title":"\u67e5\u770b\u5404\u786c\u4ef6\u7684\u578b\u53f7"},{"location":"Shell/Shell%20Command/#cpu","text":"# \u67e5\u770bcup\u4fe1\u606f cat /proc/cpuinfo # \u67e5\u770b\u5404\u7ea7cache\u5927\u5c0f getconf -a | grep CACHE sudo dmidecode -t 4 # get thread or cpu core count nproc","title":"CPU"},{"location":"Shell/Shell%20Command/#_3","text":"\u53c2\u8003\uff1a \u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc-\u7b2c\u4e03\u7ae0 \u5217\u51fa\u7cfb\u7edf\u6240\u6709\u7684\u88c5\u7f6e\uff0c\u5305\u62ec\u672a\u6302\u8f7d\u7684 lsblk -p lsblk -o NAME,PARTTYPE,MOUNTPOINT \u67e5\u770b\u76ee\u524d\u5df2\u6302\u8f7d\u7684\u88c5\u7f6e/\u78c1\u76d8\u7684\u5269\u4f59\u7a7a\u95f4 # \u67e5\u770b\u76ee\u524d\u6302\u8f7d\u7684\u88c5\u7f6e/\u78c1\u76d8\u5269\u4f59\u7a7a\u95f4 df -Th # \u67e5\u770b /etc \u6240\u5728\u78c1\u76d8\u7684\u5269\u4f59\u7a7a\u95f4 df -h /etc \u67e5\u770b\u6587\u4ef6\u5360\u7528\u5927\u5c0f # \u67e5\u770b/home\u76ee\u5f55\u4e0b\u5404\u6587\u4ef6\u5360\u7528\u5927\u5c0f du -sh /home/* # \u67e5\u770b /home\u76ee\u5f55\u5360\u7528\u5927\u5c0f du -sh /home \u67e5\u770b\u78c1\u76d8\u5206\u533a\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b sudo parted /dev/sda print \u65e7\u6709\u7684MBR\u5206\u533a\u4f7f\u7528\u7684\u201c\u78c1\u76d8\u5206\u533a\u201d\u547d\u4ee4 # \u786c\u76d8\u5206\u533a\u5de5\u5177 fdisk, cfdisk, sfdisk, GParted # \u67e5\u770b\u78c1\u76d8\u5206\u533a fdisk -l # \u78c1\u76d8\u5206\u533a fdisk /dev/sda Create file system # ext4 file system mkfs -v -t ext4 /dev/<xxx> # create swap partition file system mkswap /dev/<yyy> # enabled /sbin/swapon -v /dev/<yyy> \u68c0\u67e5\u548c\u4fee\u590d\u635f\u574f\u7684\u786c\u76d8 fsck -C -f -t ext3 /dev/sda1 \u68c0\u67e5\u786c\u76d8\u6247\u533a\u6709\u6ca1\u6709\u574f\u8f68 badblocks -sv /dev/sda \u89c2\u5bdf\u6587\u4ef6\u7cfb\u7edf dumpe2fs \u67e5\u770b\u786c\u76d8\u4fe1\u606f \u5236\u9020\u5546\u5e8f\u5217\u53f7\u7b49 sudo hdparm -i /dev/sda # or sudo smartctl -a /dev/sda","title":"\u78c1\u76d8"},{"location":"Shell/Shell%20Command/#_4","text":"\u5982\u679c\u5728linux\u4e0a\u7528 lsblk -p \u67e5\u770bUSB\u8bbe\u5907\uff0c\u5982\u679c\u662fmacos\u8981\u7528 diskutil list \u67e5\u770b, \u67e5\u627e\u5230\u6211\u7684USB\u8bbe\u5907\u662f/dev/disk3\uff0c \u7136\u540e\u7528dd\u547d\u4ee4\u628a\u7cfb\u7edf\u5b89\u88c5\u955c\u50cf\u70e7\u5f55\u5230USB\u4e0a dd if=ubuntu-16.04.5-desktop-amd64.iso of=/dev/disk3 \u5982\u679c\u63d0\u793a \u201c Resource busy\u201d, \u5728linux\u4e0a\u7528 umount /dev/disk3 , \u5728macos\u4e0a\u7528 diskutil umount /dev/disk3 \u53d6\u6d88\u6302\u8f7d\u3002","title":"\u5236\u4f5c\u542f\u52a8\u786c\u76d8"},{"location":"Shell/Shell%20Command/#loop-dev","text":"dd if=/dev/zero of=./rootfs.ext3 bs=1M count=32 mkfs.ext3 rootfs.ext3 sudo mount -o loop rootfs.ext3 /test/","title":"loop dev"},{"location":"Shell/Shell%20Command/#initramfs","text":"#\u770b\u4e00\u4e0b initramfs \u88e1\u9762\u7684\u5167\u5bb9\u6709\u4e9b\u5565\u8cc7\u6599\uff1f $ lsinitrd /boot/initramfs-4.18.0-193.el8.x86_64.img $ mkdir /dev/shm/initramfs $ cd /dev/shm/initramfs # \u53d6\u5f97 initramfs \u524d\u9762\u61c9\u8a72\u8981\u53bb\u9664\u7684\u5bb9\u91cf $ cpio -i -d --no-absolute-filenames -I /boot/initramfs-4.18.0-193.el8.x86_64.img 198 blocks # \u9019\u500b\u91cd\u9ede\u5c31\u662f\u5728\u524d\u9762\u7684\u5b57\u5143\u4f54\u4e86\u5e7e\u500b block \u5bb9\u91cf\uff0c\u6bcf\u500b block \u5bb9\u91cf\u70ba 512bytes\uff0c # \u6bcf\u4e00\u500b initramfs \u6a94\u6848\u7684\u524d\u7f6e\u5b57\u5143\u5bb9\u91cf\u90fd\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u9700\u8981\u5148\u627e\u51fa\u4f86\u53bb\u9664\u624d\u884c\uff01 $ dd if=/boot/initramfs-4.18.0-193.el8.x86_64.img of=initramfs.gz bs=512 skip=198 $ file initramfs.gz initramfs.gz: gzip compressed data, from Unix, last modified: Mon May 4 17:56:47 2015,max compression # 3. \u5f9e\u4e0a\u9762\u770b\u5230\u6a94\u6848\u662f gzip \u58d3\u7e2e\u6a94\uff0c\u6240\u4ee5\u5c07\u5b83\u89e3\u58d3\u7e2e\u5f8c\uff0c\u518d\u67e5\u95b1\u4e00\u4e0b\u6a94\u6848\u7684\u985e\u578b\uff01 $ gzip -d initramfs.gz $ file initramfs initramfs: ASCII cpio archive (SVR4 with no CRC) # \u89e3\u958b\u5f8c\u53c8\u7522\u751f\u4e00\u500b cpio \u6a94\u6848\uff0c\u5f97\u8981\u5c07\u5b83\u7528 cpio \u7684\u65b9\u6cd5\u89e3\u958b\uff01\u52a0\u4e0a\u4e0d\u8981\u7d55\u5c0d\u8def\u5f91\u7684\u53c3\u6578\u8f03\u4fdd\u96aa\uff01 $ cpio -i -d -H newc --no-absolute-filenames < initramfs","title":"\u67e5\u770binitramfs"},{"location":"Shell/Shell%20Command/#_5","text":"","title":"\u7cfb\u7edf\u4fe1\u606f"},{"location":"Shell/Shell%20Command/#_6","text":"Type any one of the following command to find os name and version in Linux: cat /etc/os-release lsb_release -a hostnamectl Type the following command to find Linux kernel version uname -r # \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f cat /proc/version # \u7cfb\u7edf\u67b6\u6784 arch file /bin/ls # \u4f9d\u636elong\u7c7b\u578b\u7684\u4f4d\u6570\u5224\u65ad\u5b89\u88c5\u7cfb\u7edf\u7684\u4f4d\u6570\uff0c \u4e00\u822c64\u4f4d\u64cd\u4f5c\u7cfb\u7edflong\u7c7b\u578b\u662f64\u4f4d get_conf LONG_BIT","title":"\u67e5\u770b\u7cfb\u7edf\u4fe1\u606f"},{"location":"Shell/Shell%20Command/#man-manual-pages","text":"If you want the man page for a single program/command, you can run: man command_name | less Hit q to exit the man page and get back to your terminal prompt. \u67e5\u627e\u7cfb\u7edf\u5185\u8ddfpasswd\u6709\u5173\u7684\u8bf4\u660e man -f passwd If you want to search the man pages for a command that pertains to a keyword: man -k single_keyword | less This command will search the manual pages for a command with the keyword 'single_keyword'. Forget how to open files in Vim? You can search for 'editor' and get a list of all editor-related commands on your system.","title":"man -  Manual Pages"},{"location":"Shell/Shell%20Command/#_7","text":"ps -f -o pid,ppid,tty,stat,wchan,args # \u67e5\u770b7979 \u548c 29825 \u8fdb\u7a0b ps -p 7979 -p 29825 -o \"pid ppid sid tty cmd\" # \u6740\u6389kucker\u540d\u5b57\u7684\u8fdb\u7a0b ps -ef | grep \"kucker\" | awk '{print $2}' | xargs -i sudo kill -9 {}","title":"\u7cfb\u7edf\u8fdb\u7a0b"},{"location":"Shell/Shell%20Command/#_8","text":"\u67e5\u8be2\u57df\u540dIP dig +norecurse @a.root-servers.net any yahoo.com dig +norecurse @e.gtld-servers.net any yahoo.com dig +norecurse @ns1.yahoo.com any yahoo.com nslookup yahoo.com nslookup -type=NS yahoo.com nslookup yahoo.com ns2.yahoo.com netstat -a --inet netstat -tlunp tcpdump -t -N 'port 80'","title":"\u7f51\u7edc"},{"location":"Shell/Shell%20Command/#_9","text":"","title":"\u6587\u4ef6"},{"location":"Shell/Shell%20Command/#_10","text":"# \u6539\u53d8\u6240\u5c5e\u7fa4\u7ec4 change group chgrp [-R] \u7fa4\u7ec4\u540d dirname/filename ... # \u6539\u53d8\u6863\u6848\u62e5\u6709\u8005 change owner chown [-R] \u8d26\u53f7\u540d \u6863\u6848\u6212\u76ee\u5f54 chown [-R] \u8d26\u53f7\u540d:\u7ec4\u540d \u6863\u6848\u6212\u76ee\u5f54 # \u6539\u53d8\u6743\u9650 # \u6570\u5b57\u7c7b\u578b\u6539\u53d8\u6863\u6848\u6743\u9650 chmod [-R] 740 \u6863\u6848\u76ee\u5f54 # \u7b26\u53f7\u7c7b\u578b\u6539\u53d8\u6863\u6848\u6743\u9650 # | u | +(\u52a0\u5165) | r | # chmod | g | -(\u9664\u53bb) | w | \u6863\u6848\u6212\u76ee\u5f54 # | o | =(\u8bbe\u5b9a) | x | # | a | | | chmod u=rwx,go=rx .bashrc chmod a-x .bashrc","title":"\u6587\u4ef6\u6743\u9650"},{"location":"Shell/Shell%20Command/#_11","text":"# \u5c55\u793a\u76ee\u5f55\u5217\u8868 ls -ld \u76ee\u5f55 # \u56de\u5230\u4e0a\u6b21\u8bbf\u95ee\u7684\u76ee\u5f55 cd - # \u8fdb\u5165wzq\u7528\u6237\u5bb6\u76ee\u5f55 cd wzq~","title":"\u6587\u4ef6\u7ba1\u7406"},{"location":"Shell/Shell%20Command/#grep","text":"\u66ff\u6362\u6216\u5220\u9664\u8de8\u8d8a\u591a\u4e2a\u76ee\u5f55\u7684\u591a\u4e2a\u6587\u4ef6\u91cc\u7684\u6307\u5b9a\u6587\u672c # \u66ff\u6362\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u91cc\u7684\u2018window\u2019\u4e3a\u2018linux\u2019 grep -rl 'windows' ./ | xargs sed -i 's/windows/linux/g' # Mac\u4e0bsed\u547d\u4ee4\u7684\"-i\"\u9009\u9879\u540e\u9762\u9700\u8981\u52a0\u5b57\u7b26\u4e32\u8868\u793a\u5907\u4efd\u6587\u4ef6\u7684\u540e\u7f00 grep -rl 'windows' ./ | xargs sed -i '' 's/windows/linux/g' #\u5220\u9664\u51fa\u73b0\u2018windows\u2019\u7684\u884c grep -rl 'windows' ./ | xargs sed -i '' '/windows/d' \u7edf\u8ba1\u67d0\u4e2a\u8bcd\u8bed\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 # count the number of occurrence of a word in a text file grep -o -i 'word' test.txt | wc -l","title":"grep"},{"location":"Shell/Shell%20Command/#find","text":"find . -name \"*nng*\" -exec rm -rf {} \\; find /usr/{lib,libexec} -name \\*.la -delete find /usr -depth -name $(uname -m)-lfs-linux-gnu\\* | xargs rm -rf find $(1) -not -type d -and -not -type l -print0 | xargs -0r chmod $(FILE_MODE)","title":"find"},{"location":"Shell/Shell%20Command/#diff","text":"\u65b9\u6cd5\u4e00\uff1a diff -bur [oldDir] [newDir] \u65b9\u6cd5\u4e8c\uff1a rsync -rcnv [oldDir] [newDir] Split the screen to two columns for comparing convenience diff -y [oldDir] [newDir]","title":"diff"},{"location":"Shell/Shell%20Command/#sed","text":"https://www.grymoire.com/Unix/Sed.html","title":"sed"},{"location":"Shell/Shell%20Command/#_12","text":"[dmtsai@study ~]$ tar [-z|-j|-J] [cv] [-f \u5f85\u5efa\u7acb\u7684\u65b0\u6a94\u540d] filename... <==\u6253\u5305\u8207\u58d3\u7e2e [dmtsai@study ~]$ tar [-z|-j|-J] [tv] [-f \u65e2\u6709\u7684 tar\u6a94\u540d] <==\u5bdf\u770b\u6a94\u540d [dmtsai@study ~]$ tar [-z|-j|-J] [xv] [-f \u65e2\u6709\u7684 tar\u6a94\u540d] [-C \u76ee\u9304] <==\u89e3\u58d3\u7e2e \u9078\u9805\u8207\u53c3\u6578\uff1a -c \uff1a\u5efa\u7acb\u6253\u5305\u6a94\u6848\uff0c\u53ef\u642d\u914d -v \u4f86\u5bdf\u770b\u904e\u7a0b\u4e2d\u88ab\u6253\u5305\u7684\u6a94\u540d(filename) -t \uff1a\u5bdf\u770b\u6253\u5305\u6a94\u6848\u7684\u5167\u5bb9\u542b\u6709\u54ea\u4e9b\u6a94\u540d\uff0c\u91cd\u9ede\u5728\u5bdf\u770b\u300e\u6a94\u540d\u300f\u5c31\u662f\u4e86\uff1b -x \uff1a\u89e3\u6253\u5305\u6216\u89e3\u58d3\u7e2e\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u642d\u914d -C (\u5927\u5beb) \u5728\u7279\u5b9a\u76ee\u9304\u89e3\u958b \u7279\u5225\u7559\u610f\u7684\u662f\uff0c -c, -t, -x \u4e0d\u53ef\u540c\u6642\u51fa\u73fe\u5728\u4e00\u4e32\u6307\u4ee4\u5217\u4e2d\u3002 -z \uff1a\u900f\u904e gzip \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.gz -j \uff1a\u900f\u904e bzip2 \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.bz2 -J \uff1a\u900f\u904e xz \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.xz \u7279\u5225\u7559\u610f\uff0c -z, -j, -J \u4e0d\u53ef\u4ee5\u540c\u6642\u51fa\u73fe\u5728\u4e00\u4e32\u6307\u4ee4\u5217\u4e2d -v \uff1a\u5728\u58d3\u7e2e/\u89e3\u58d3\u7e2e\u7684\u904e\u7a0b\u4e2d\uff0c\u5c07\u6b63\u5728\u8655\u7406\u7684\u6a94\u540d\u986f\u793a\u51fa\u4f86\uff01 -f filename\uff1a-f \u5f8c\u9762\u8981\u7acb\u523b\u63a5\u8981\u88ab\u8655\u7406\u7684\u6a94\u540d\uff01\u5efa\u8b70 -f \u55ae\u7368\u5beb\u4e00\u500b\u9078\u9805\u56c9\uff01(\u6bd4\u8f03\u4e0d\u6703\u5fd8\u8a18) -C \u76ee\u9304 \uff1a\u9019\u500b\u9078\u9805\u7528\u5728\u89e3\u58d3\u7e2e\uff0c\u82e5\u8981\u5728\u7279\u5b9a\u76ee\u9304\u89e3\u58d3\u7e2e\uff0c\u53ef\u4ee5\u4f7f\u7528\u9019\u500b\u9078\u9805\u3002 \u5176\u4ed6\u5f8c\u7e8c\u7df4\u7fd2\u6703\u4f7f\u7528\u5230\u7684\u9078\u9805\u4ecb\u7d39\uff1a -p(\u5c0f\u5beb) \uff1a\u4fdd\u7559\u5099\u4efd\u8cc7\u6599\u7684\u539f\u672c\u6b0a\u9650\u8207\u5c6c\u6027\uff0c\u5e38\u7528\u65bc\u5099\u4efd(-c)\u91cd\u8981\u7684\u8a2d\u5b9a\u6a94 -P(\u5927\u5beb) \uff1a\u4fdd\u7559\u7d55\u5c0d\u8def\u5f91\uff0c\u4ea6\u5373\u5141\u8a31\u5099\u4efd\u8cc7\u6599\u4e2d\u542b\u6709\u6839\u76ee\u9304\u5b58\u5728\u4e4b\u610f\uff1b --exclude=FILE\uff1a\u5728\u58d3\u7e2e\u7684\u904e\u7a0b\u4e2d\uff0c\u4e0d\u8981\u5c07 FILE \u6253\u5305\uff01 \u58d3\u3000\u7e2e\uff1atar -jcv -f filename.tar.bz2 \u8981\u88ab\u58d3\u7e2e\u7684\u6a94\u6848\u6216\u76ee\u9304\u540d\u7a31 \u67e5\u3000\u8a62\uff1atar -jtv -f filename.tar.bz2 \u89e3\u58d3\u7e2e\uff1atar -jxv -f filename.tar.bz2 -C \u6b32\u89e3\u58d3\u7e2e\u7684\u76ee\u9304 \u5b9e\u4f8b\uff1a # \u89e3\u538btar.bz2\u6587\u4ef6 tar xvfj ./linux-2.6.23.tar.bz2 tar xvfJ ./linux-2.6.23.tar.xz tar xvfz ./linux-2.6.23.tar.gz tar -xf ./linux-2.6.23.tar.* # \u89e3\u538bpython-3.9.0-docs-html.tar.bz2\u5230/usr/share/doc/python-3.9.0/html tar --strip-components=1 \\ --no-same-owner \\ --no-same-permissions \\ -C /usr/share/doc/python-3.9.0/html \\ -xvf ../python-3.9.0-docs-html.tar.bz2 # --no-same-owner and --no-same-permissions # Ensure the installed files have the correct ownership and permissions. # Without these options, using tar will install the package files with the upstream creator's values. # \u5f53\u524d\u76ee\u5f55\u538b\u7f29\u6253\u5305\u5230/home/wzq/lfs/lfs-2.tar.xz tar -cJpf /home/wzq/lfs/lfs-2.tar.xz . # \u89e3\u538b\u5bfc\u5f53\u524d\u76ee\u5f55 tar -xpf $HOME/lfs-temp-tools-10.0-systemd.tar.xz","title":"\u538b\u7f29\u4e0e\u6253\u5305"},{"location":"Shell/Shell%20Command/#user","text":"","title":"User"},{"location":"Shell/Shell%20Command/#add-user","text":"add the new user vivi groupadd vivi useradd -s /bin/bash -g vivi -m -d /home/vivi vivi # useradd -s /bin/bash -g vivi -m -k /dev/null vivi passwd vivi The command adds an entry to the /etc/passwd, /etc/shadow, /etc/group and /etc/gshadow files. Or, Simply by useradd -s /bin/bash -m vivi passwd vivi Or, adduser is an interactive command-line tool available by default in most Linux distributions. adduser vivi More about create user","title":"add user"},{"location":"Shell/Shell%20Command/#add-user-to-sudoers","text":"Most Linux systems, including Ubuntu, have a user group for sudo users. To grant the new user elevated privileges, add them to the sudo group. usermod -aG sudo vivi The -aG option tells the system to append the user to the specified group. (The -a option is only used with G.) Or sudo adduser vivi sudo More about sudo","title":"add user to sudoers"},{"location":"Shell/Shell%20Command/#delete-user","text":"userdel -r vivi -r Remove Linux user account including home directory and mail spool","title":"delete user"},{"location":"Shell/Shell%20Command/#verify-user-information","text":"lslogins vivi id vivi","title":"Verify user information"},{"location":"Shell/Shell%20Command/#view-the-groups-a-user-belongs-to","text":"groups vivi","title":"View the groups a user belongs to"},{"location":"Shell/Shell%20Command/#gain-root-shell","text":"sudo -s or sudo -i","title":"Gain root shell"},{"location":"Shell/Shell%20Command/#terminal","text":"","title":"Terminal"},{"location":"Shell/Shell%20Command/#cli-shortcuts","text":"[ctrl]+u / [ctrl]+k \u5220\u9664\u884c\u5185\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u4e4b\u524d/\u540e\u7684\u5185\u5bb9 <ctrl> + a <ctrl> + e will move the cursor to the beginning / end of the current line alt-f / alt-b \u53ef\u4ee5\u4ee5\u5355\u8bcd\u4e3a\u5355\u4f4d\u5411\u524d/\u540e\u79fb\u52a8\u5149\u6807 ctrl-w \u5220\u9664\u4f60\u952e\u5165\u7684\u6700\u540e\u4e00\u4e2a\u5355\u8bcd ctrl-l \u6e05\u5c4f <ctrl> + r will let you search through your recently used commands \u4f60\u559c\u6b22\u7684\u8bdd\uff0c\u53ef\u4ee5\u6267\u884c set -o vi \u6765\u4f7f\u7528 vi \u98ce\u683c\u7684\u5feb\u6377\u952e\uff0c\u800c\u6267\u884c set -o emacs \u53ef\u4ee5\u628a\u5b83\u6539\u56de\u6765\u3002","title":"CLI Shortcuts"},{"location":"Shell/Shell%20Command/#history","text":"# number \uff1a\u57f7\u884c\u7b2c\u5e7e\u7b46\u6307\u4ee4\u7684\u610f\u601d\uff1b !number # command \uff1a\u7531\u6700\u8fd1\u7684\u6307\u4ee4\u5411\u524d\u641c\u5c0b\u300e\u6307\u4ee4\u4e32\u958b\u982d\u70ba command\u300f\u7684\u90a3\u500b\u6307\u4ee4\uff0c\u4e26\u57f7\u884c\uff1b !command # \u57f7\u884c\u4e0a\u4e00\u500b\u6307\u4ee4(\u76f8\u7576\u65bc\u6309\u2191\u6309\u9375\u5f8c\uff0c\u6309 Enter) !!","title":"history"},{"location":"Shell/Shell%20Command/#_13","text":"# \u5c07\u6307\u4ee4\u7684\u8cc7\u6599\u5168\u90e8\u5beb\u5165\u540d\u70ba list \u7684\u6a94\u6848\u4e2d find /home -name .bashrc > list 2>&1","title":"\u91cd\u5b9a\u5411"},{"location":"Shell/Shell%20Command/#wget","text":"wget --input-file=downloadListFile --continue --directory-prefix=target-directory","title":"wget"},{"location":"Shell/Shell%20Command/#curl","text":"#-o, --output <file>: Write output to <file> instead of stdout. curl https://github.com/ginuerzh/gost/releases/download/v2.11.1/gost-linux-amd64-2.11.1.gz --output gost.gz # -O, --remote-name: Write output to a local file named like the remote file we get curl -O https://github.com/ginuerzh/gost/releases/download/v2.11.1/gost-linux-amd64-2.11.1.gz","title":"curl"},{"location":"Shell/Shell%20Command/#_14","text":"# \u672a\u4fdd\u5b58\u7684\u5185\u5b58\u6570\u636e\u5199\u5165\u786c\u76d8 sync # \u7acb\u523b\u5173\u673a\uff0c\u5176\u4e2d now \u76f8\u5f53\u4e8d\u65f6\u95f4\u4e3a 0 \u7684\u72b6\u6001 shutdown -h now # \u7cfb\u7edf\u5728\u4eca\u5929\u7684 20:25 \u5206\u4f1a\u5173\u673a\uff0c\u82e5\u5728 21:25 \u624d\u4e0b\u8fbe\u6b64\u6303\u4ee4\uff0c\u5219\u9691\u5929\u624d\u5173\u673a shutdown -h 20:25 # \u7cfb\u7edf\u518d\u8fc7\u5341\u5206\u949f\u540e\u81ea\u52a2\u5173\u673a shutdown -h +10 # \u7cfb\u7edf\u7acb\u523b\u91cd\u65b0\u542f\u52a2 shutdown -r now # \u518d\u8fc7\u4e09\u5341\u5206\u949f\u7cfb\u7edf\u4f1a\u91cd\u65b0\u542f\u52a2\uff0c\u5e75\u663e\u793a\u540e\u9762\u7684\u8baf\u606f\u7ed9\u6240\u6709\u5728\u5728\u7ebf\u7684\u4f7f\u7528\u8005 shutdown -r +30 'The system will reboot' # \u4ec5\u53d1\u51fa\u8b66\u544a\uff0c\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u5173\u673a\u5566!\u5413\u552c\u4eba! shutdown -k now 'This system will reboot' # \u91cd\u65b0\u542f\u52a2\uff0c\u5173\u673a\uff0c\u65ad\u7535 reboot, halt, poweroff https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md#%E4%BB%85%E9%99%90-os-x-%E7%B3%BB%E7%BB%9F","title":"\u5173\u673a/\u91cd\u542f"},{"location":"Shell/Shell%20Script/","text":"local variable local d=\"hello\" Remark: both side of '=' can't have white space. function # declaration function function recurse() { local dir=${1} # ls ${1} #cd ${1} for file in `ls ${dir}` do if [[ -d ${dir}/$file ]]; then recurse ${dir}/$file elif [[ -f ${dir}/$file ]]; then if [[ $file == *.xml ]] then echo ${dir}/${file} #echo rename ${dir}/${file} fi else echo \"$file is not valid\" exit 1 fi done } # call function recurse ~/wk/nand2tetris/projects Loop Statement for file in `ls ~/wk/nand2tetris/projects/01` do echo ${file} done for file in $(find . -name \"*.c\") do filename=${file%.c} echo $filename.cpp done for (( i=0; i<10; i++ )) do echo $i done If Statement if [[ -d $file ]]; then echo \"$file is a directory\" elif [[ -f $file ]]; then echo \"$file is a file\" else echo \"$file is not valid\" exit 1 fi Case Statement case ${1} in \"release\") echo \"release case\" ;; \"debug\") echo \"debug case\" ;; \"help\") echo \"usage case\" ;; \"\") echo \"No argument case\" ;; *) echo \"Default case.\" ;; esac","title":"Shell Script"},{"location":"Shell/Shell%20Script/#local-variable","text":"local d=\"hello\" Remark: both side of '=' can't have white space.","title":"local variable"},{"location":"Shell/Shell%20Script/#function","text":"# declaration function function recurse() { local dir=${1} # ls ${1} #cd ${1} for file in `ls ${dir}` do if [[ -d ${dir}/$file ]]; then recurse ${dir}/$file elif [[ -f ${dir}/$file ]]; then if [[ $file == *.xml ]] then echo ${dir}/${file} #echo rename ${dir}/${file} fi else echo \"$file is not valid\" exit 1 fi done } # call function recurse ~/wk/nand2tetris/projects","title":"function"},{"location":"Shell/Shell%20Script/#loop-statement","text":"for file in `ls ~/wk/nand2tetris/projects/01` do echo ${file} done for file in $(find . -name \"*.c\") do filename=${file%.c} echo $filename.cpp done for (( i=0; i<10; i++ )) do echo $i done","title":"Loop Statement"},{"location":"Shell/Shell%20Script/#if-statement","text":"if [[ -d $file ]]; then echo \"$file is a directory\" elif [[ -f $file ]]; then echo \"$file is a file\" else echo \"$file is not valid\" exit 1 fi","title":"If Statement"},{"location":"Shell/Shell%20Script/#case-statement","text":"case ${1} in \"release\") echo \"release case\" ;; \"debug\") echo \"debug case\" ;; \"help\") echo \"usage case\" ;; \"\") echo \"No argument case\" ;; *) echo \"Default case.\" ;; esac","title":"Case Statement"},{"location":"Unbuntu/fix-the-no-wi-fi-adapter-found-error-on-ubuntu/","text":"Use the Ubuntu ISO image to install drivers A remarkable fact is that this method doesn\u2019t require you to have an internet connection. Step 1: Copy the Ubuntu ISO image in your home directory. Rename it to a simple name like \u2018ubuntu.iso.\u2019 Step 2: Launch the Terminal and mount the ISO image on the system like a CD/DVD. sudo mkdir /media/cdrom cd ~ sudo mount -o loop ubuntu.iso /media/cdrom Step 3. Now, launch the Software & Updates app from the applications menu. Step 4. Click on the Ubuntu Software tab and check the box \u2018Installable from CD-Rom/DVD.\u2019 A window will pop-up, and you will be required to enter the root password. Step 5. Click on the Additional Drivers tab. If you see the statement \u201cNo additional drivers available,\u201d this Method won\u2019t work for you. If you see the proprietary drivers listed, then you can go ahead. Select the proprietary drivers and click the Apply Changes button. In my case, my system supports Broadcom drivers. Once done, your wireless connection problem should be solved, and you can see your WiFi networks. https://www.fosslinux.com/43345/fix-the-no-wi-fi-adapter-found-error-on-ubuntu.htm","title":"Fix \u201cNo Wi-Fi Adapter Found\u201d Error on Ubuntu"},{"location":"Unbuntu/fix-the-no-wi-fi-adapter-found-error-on-ubuntu/#use-the-ubuntu-iso-image-to-install-drivers","text":"A remarkable fact is that this method doesn\u2019t require you to have an internet connection. Step 1: Copy the Ubuntu ISO image in your home directory. Rename it to a simple name like \u2018ubuntu.iso.\u2019 Step 2: Launch the Terminal and mount the ISO image on the system like a CD/DVD. sudo mkdir /media/cdrom cd ~ sudo mount -o loop ubuntu.iso /media/cdrom Step 3. Now, launch the Software & Updates app from the applications menu. Step 4. Click on the Ubuntu Software tab and check the box \u2018Installable from CD-Rom/DVD.\u2019 A window will pop-up, and you will be required to enter the root password. Step 5. Click on the Additional Drivers tab. If you see the statement \u201cNo additional drivers available,\u201d this Method won\u2019t work for you. If you see the proprietary drivers listed, then you can go ahead. Select the proprietary drivers and click the Apply Changes button. In my case, my system supports Broadcom drivers. Once done, your wireless connection problem should be solved, and you can see your WiFi networks. https://www.fosslinux.com/43345/fix-the-no-wi-fi-adapter-found-error-on-ubuntu.htm","title":"Use the Ubuntu ISO image to install drivers"},{"location":"Vagrant/Vagrant%20tutorial/","text":"Create the machine mkdir ubuntu18 cd ubuntu18 vagrant init generic/ubuntu1804 Start the machine vagrant up Login the machine vagrant ssh Logout the machine exit or CTRL+D Suspend the machine Suspending the virtual machine will stop it and save its current running state. Suspend the machine now. vagrant suspend Halt the machine Halting the virtual machine will gracefully shut down the guest operating system and power down the guest machine. Halt your machine now. vagrant halt Destroy the machine Destroying the virtual machine will remove all traces of the guest machine from your system. It'll stop the guest machine, power it down, and reclaim its disk space and RAM. vagrant destroy List boxes vagrant box list Quik start HashiCorp's Vagrant Cloud box catalog boxes create","title":"Vagrant tutorial"},{"location":"Vagrant/Vagrant%20tutorial/#create-the-machine","text":"mkdir ubuntu18 cd ubuntu18 vagrant init generic/ubuntu1804","title":"Create the machine"},{"location":"Vagrant/Vagrant%20tutorial/#start-the-machine","text":"vagrant up","title":"Start the machine"},{"location":"Vagrant/Vagrant%20tutorial/#login-the-machine","text":"vagrant ssh","title":"Login the machine"},{"location":"Vagrant/Vagrant%20tutorial/#logout-the-machine","text":"exit or CTRL+D","title":"Logout the machine"},{"location":"Vagrant/Vagrant%20tutorial/#suspend-the-machine","text":"Suspending the virtual machine will stop it and save its current running state. Suspend the machine now. vagrant suspend","title":"Suspend the machine"},{"location":"Vagrant/Vagrant%20tutorial/#halt-the-machine","text":"Halting the virtual machine will gracefully shut down the guest operating system and power down the guest machine. Halt your machine now. vagrant halt","title":"Halt the machine"},{"location":"Vagrant/Vagrant%20tutorial/#destroy-the-machine","text":"Destroying the virtual machine will remove all traces of the guest machine from your system. It'll stop the guest machine, power it down, and reclaim its disk space and RAM. vagrant destroy","title":"Destroy the machine"},{"location":"Vagrant/Vagrant%20tutorial/#list-boxes","text":"vagrant box list Quik start HashiCorp's Vagrant Cloud box catalog boxes create","title":"List boxes"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","text":"\u5e2e\u52a9 vimtutor \u67e5\u770b\u4f7f\u7528\u8bf4\u660e :help feature \u83b7\u53d6feature \u7684\u76f8\u5173\u4fe1\u606f :help doc-file-list \u83b7\u53d6\u5e2e\u52a9\u6587\u4ef6\u7684\u5b8c\u6574\u5217\u8868 CONTROL+] \u6253\u5f00\u94fe\u63a5 CONTROL+o \u8fd4\u56de :q \u9000\u51fa\u5e2e\u52a9\u6587\u6863 Mode Vim is a modal editor. It has a normal mode, visual mode ,insert mode, and other modes. Undo/Redo u: undo last change Ctrl_R: Redo \u6d4f\u89c8 ctrl+d \u4e0b\u7ffb\u534a\u5c4f d=down ctrl+u \u4e0a\u7ffb\u534a\u5c4f u=up ctrl+b\u4e0a\u7ffb\u4e00\u9875 b=backward ctrl+f\u4e0b\u7ffb\u4e00\u9875 f=forward \u6eda\u4e00\u884c ctrl-e ctrl-y zz \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u4e2d\u592e zt \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u6700\u4e0a\u4e00\u884c t=top zb \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u6700\u4e0b\u4e00\u884c b=bottom \u5149\u6807\u79fb\u52a8 w \u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 b \u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 $ \u79fb\u52a8\u5230\u884c\u5c3e 0\u6216^ \u79fb\u52a8\u5230\u884c\u9996 gg \u79fb\u52a8\u5230\u6587\u6863\u5934 G \u79fb\u52a8\u5230\u6587\u6863\u5c3e \u884c\u53f7\uff0bG \u8df3\u8f6c\u5230\u67d0\u884c\uff0c\u4f8b\u5982\u5230\u7b2c6\u884c 6G :\u884c\u53f7 , \u8df3\u8f6c\u5230\u67d0\u884c\uff0c \u4f8b\u5982\u5230\u7b2c6\u884c :6 ( \u6216 { \u79fb\u52a8\u5230\u6bb5\u843d\u5934 ) \u6216 } \u79fb\u52a8\u5230\u6bb5\u843d\u5c3e e \u79fb\u52a8\u5230\u5f53\u524d\u5b57\u7684\u5c3e\u90e8 ge\u79fb\u52a8\u5230\u524d\u4e00\u4e2a\u5b57\u7684\u5c3e\u90e8 % \u8df3\u8f6c\u5230\u914d\u5bf9\u7684\u7b26\u53f7\u4e0a\uff0c\u914d\u5bf9\u7b26\u53f7\u4f8b\u5982: \"\", (), <>, {} [[ \u8df3\u8f6c\u5230\u5f53\u524d\u6216\u8005\u4e0a\u4e00\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u5f00\u5934\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) ][ \u8df3\u8f6c\u5230\u5f53\u524d\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u7ed3\u5c3e\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) ]] \u8df3\u8f6c\u5230\u4e0b\u4e00\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u5f00\u5934\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) [/ \u8df3\u5230\u6ce8\u91ca\u5f00\u5934\uff08\u53ea\u5bf9/ /\u6ce8\u91ca\u6709\u6548\uff09 ]/ \u8df3\u5230\u6ce8\u91ca\u7ed3\u5c3e\uff08\u53ea\u5bf9/ /\u6ce8\u91ca\u6709\u6548\uff09 gD \u8df3\u8f6c\u5230\u5f53\u524d\u6587\u4ef6\u5185\u6807\u8bc6\u7b26\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u53ef\u7528\u4e8e\u8df3\u8f6c\u5230\u5168\u90e8\u53d8\u91cf\u7684\u5b9a\u4e49\u5904\uff1b\u67e5\u627e\u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u8981\u662f\u591a\u4e2a\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u8be5\u5c40\u90e8\u53d8\u91cf\uff0c\u4f7f\u7528gD\u8fdb\u884c\u67e5\u627e\uff0c\u627e\u5230\u7684\u53d8\u91cf\u5b9a\u4e49\u53ef\u80fd\u4e0d\u662f\u4f60\u9700\u8981\u7684 gd \u8df3\u8f6c\u5230\u5f53\u524d\u51fd\u6570\u5185\u6807\u8bc6\u7b26\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u53ef\u7528\u4e8e\u8df3\u8f6c\u5230\u5c40\u90e8\u53d8\u91cf\u7684\u5b9a\u4e49\u5904 '' \u8df3\u8f6c\u5230\u5149\u6807\u4e0a\u6b21\u505c\u9760\u7684\u5730\u65b9, \u662f\u4e24\u4e2a ' , \u800c\u4e0d\u662f\u4e00\u4e2a \" \u590d\u5236\u7c98\u8d34 \u590d\u5236=Yank, \u5220\u9664=Delete, \u7c98\u8d34=Put Yank(Y) \u590d\u5236\u5230\u901a\u7528\u7f13\u51b2\u533a Delete\uff08D\uff09\u5220\u9664\u5e76\u653e\u5230\u901a\u7528\u7f13\u51b2\u533a Put(P) \u628a\u901a\u7528\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u63d2\u5165\u7684\u5f53\u524d\u6587\u672c \u4f8b\u5982\uff1a yy \u590d\u5236\u5f53\u524d\u884c n+yy \u590d\u5236\u5f53\u524d\u884c\u548c\u540e\u9762n-1\u884c gg + yG \u590d\u5236\u5168\u90e8 \"ayy \u590d\u5236\u5230\u7f13\u51b2\u533aa \"ap \u7c98\u8d34\u7f13\u51b2\u533aa\u5230\u6587\u672c Delete\u547d\u4ee4\u7684\u6a21\u5f0f\u540cYank\u4e00\u6837 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u5173\u4e8e\u5bc4\u5b58\u5668(registers)\u7684\u64cd\u4f5c\u3002 \u201c\uff0b\u5b57\u6bcd\uff0byy \u628a\u5f53\u524d\u884c\u590d\u5236\u5230\u5b57\u6bcd\u7684\u547d\u540d\u5bc4\u5b58\u5668, \u201c\uff0b\u5b57\u6bcd\uff0bp \u628a\u5bf9\u5e94\u5b57\u6bcd\u540d\u5b57\u7684\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u9ecf\u8d34\u5230\u5f53\u524d\u6587\u6863\u3002 \u66f4\u591a\u5173\u4e8e\u5bc4\u5b58\u5668\u7684\u4ecb\u7ecd\u53c2\u89c1 :help registers \u7f16\u8f91 \u5220\u9664 d+\u8981\u5220\u9664\u7684\u4f4d\u7f6e\uff0c \u4f8b\u5982\uff1a dw \u5220\u9664\u5230\u5b57\u7684\u672b\u5c3e daw \u5220\u9664\u4e00\u4e2a\u5355\u8bcd d3aw \u5220\u96643\u4e2a\u5355\u8bcd dw \u5220\u9664\u5230\u5b57\u7684\u5c3e\u90e8 db \u5220\u9664\u5230\u5b57\u7684\u5f00\u59cb dd \u5220\u9664\u4e00\u884c x \u6216 dl \u5220\u9664\u5355\u4e2a\u5b57\u7b26 d0 \u6216 d^ \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u884c\u7684\u5934\u90e8 d$ \u6216 D \u5220\u9664\u5230\u884c\u5c3e d) \u6216 d} \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u6bb5\u843d\u5c3e d( \u6216 d{ \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u6bb5\u843d\u5934 d/text \u5220\u9664\u5230text\u5355\u8bcd\u7684\u4e0b\u4e00\u6b21\u51fa\u73b0 cw \u5220\u9664\u5230\u5b57\u7684\u672b\u5c3e\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f \u63d2\u5165\u6a21\u5f0f\u4e0b, ctrl+H \u5b57\u7b26\u5220\u9664 ctrl+U \u884c\u5220\u9664 ctrl+W \u5b57\u5220\u9664 \u5bf9\u914d\u5bf9\u7b26\u53f7\u5185\u7684\u5185\u5bb9\u8fdb\u884c\u64cd\u4f5c \u914d\u5bf9\u7b26\u53f7\u5305\u62ec \"\", (), {} \u7b49 \u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5bf9\u7b26\u53f7\u5185\u7684\u5185\u5bb9\u8fdb\u884c\u64cd\u4f5c\u3002 ci+\u7b26\u53f7 \u66f4\u6539\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 di+\u7b26\u53f7 \u5220\u9664\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 yi+\u7b26\u53f7 \u590d\u5236\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 vi+\u7b26\u53f7 \u9009\u4e2d\u8fd9\u4e9b\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 \u53e6\u5916\u5982\u679c\u628a\u4e0a\u9762\u7684 i \u6539\u6210 a \u53ef\u4ee5\u8fde\u914d\u5bf9\u7b26\u53f7\u4e00\u8d77\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u8981\u5220\u9664\u53cc\u5f15\u53f7\u5185 \"\" \u5185\u7684\u5185\u5bb9, 111\"222\"333 \uff0c \u5c06\u5149\u6807\u79fb\u5230\u53cc\u5f15\u53f7\u5185\uff0c\u6309\u4e0b di\" ,\u5220\u9664\u53cc\u5f15\u53f7\u5185\u7684\u5185\u5bb9\uff0c\u53d8\u6210 111\"\"333 \uff0c\u82e5\u8981\u8fde\u540c\u53cc\u5f15\u53f7\u4e00\u540c\u5220\u9664\uff0c\u5219\u8981\u6309\u4e0b da\" ,\u6587\u672c\u4f1a\u4fee\u6539\u4e3a\uff1a 111333 Select text inside a tag Tag is the tag in html or xml, for example <div> ... </div> , We can select a text within an html or xml tag by using visual selection v and text object it . Go to normal mode by pressing ESC Type vit from anywhere within the html or xml section This will visually select all text inside the tag. All other text objects can also be used to operate on the text inside the tag vit - select all text inside the tag cit - delete text inside the tag and place in insert mode dit - delete text inside the tag and remain in normal mode cat - delete around tag and place in insert mode dat - delete text around the tag and remain in normal mode \u683c\u5f0f\u5316 \\== \u683c\u5f0f\u5316\u5f53\u524d\u884c n+== \u683c\u5f0f\u5316\u5f53\u524d\u548c\u540e\u9762n-1\u884c gg=G \u6216\u8005 = \u683c\u5f0f\u5316\u5168\u6587 \u7f29\u8fdb \u63d2\u5165\u6a21\u5f0f\u4e0b\uff1a CTRL+T \u53f3\u7f29\u8fdb CTRL+D \u5de6\u7f29\u8fdb \u547d\u4ee4\u6a21\u5f0f\u4e0b\uff1a > \u589e\u52a0\u7f29\u8fdb, x> \u8868\u793a\u589e\u52a0\u4ee5\u4e0bx\u884c\u7684\u7f29\u8fdb < \u51cf\u5c11\u7f29\u8fdb, x< \u8868\u793a\u51cf\u5c11\u4ee5\u4e0bx\u884c\u7684\u7f29\u8fdb \u4ee3\u7801\u6ce8\u91ca \u65b9\u6cd5\u4e00 \u591a\u884c\u6ce8\u91ca\uff1a \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309 ctrl + v \u8fdb\u5165 visual block\u6a21\u5f0f\uff0c\u7136\u540e\u6309j\u6216k\u9009\u4e2d\u591a\u884c\uff0c\u628a\u9700\u8981\u6ce8\u91ca\u7684\u884c\u6807\u8bb0\u8d77\u6765\uff0c\u6309\u5927\u5199\u5b57\u6bcdI\uff0c\u518d\u63d2\u5165\u6ce8\u91ca\u7b26\uff0c\u4f8b\u5982 // \uff0c\u6309esc\u952e\u5c31\u4f1a\u5168\u90e8\u6ce8\u91ca\u4e86\u3002 \u53d6\u6d88\u591a\u884c\u6ce8\u91ca\uff1a \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309\u00b7ctrl + v\u00b7\u8fdb\u5165 visual block\u6a21\u5f0f\uff0c\u6309\u5b57\u6bcdl\u6a2a\u5411\u9009\u4e2d\u5217\u7684\u4e2a\u6570\uff0c\u4f8b\u5982 \u00b7//\u00b7 \u9700\u8981\u9009\u4e2d2\u5217\uff0c\u6309\u5b57\u6bcdj\uff0c\u6216 \u8005k\u9009\u4e2d\u6ce8\u91ca\u7b26\u53f7\uff0c\u6309d\u952e\u5c31\u53ef\u5220\u9664\u6ce8\u91ca\u7b26\u3002 \u65b9\u6cd5\u4e8c \u66ff\u6362\u547d\u4ee4 \u63d2\u5165\u6ce8\u91ca :\u8d77\u59cb\u884c\u53f7,\u7ed3\u675f\u884c\u53f7s/^/\u6ce8\u91ca\u7b26/g \u4f8b\u5982\uff1a :27,30s#^#//#g \u5c31\u662f\u572827 - 30\u884c\u6dfb\u52a0 // \u6ce8\u91ca` \u53d6\u6d88\u6ce8\u91ca \u00b7:\u8d77\u59cb\u884c\u53f7,\u7ed3\u675f\u884c\u53f7s/^\u6ce8\u91ca\u7b26//g\u00b7 \u4f8b\u5982\uff1a :27,30s#^//##g \u5c31\u662f\u572827 - 30\u884c\u5220\u9664 // \u6ce8\u91ca \u81ea\u52a8\u8865\u5168 crl+p \u548c crl+n \u66ff\u6362 \u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b :[g] [address] s/search-string/replacement-string[/option] \u5176\u4e2d addess\uff1a\u4ee3\u8868\u884c s: \u8868\u793a\u66ff\u6362\u5f53\u524d\u5b57\u7b26 S: \u8868\u793a\u66ff\u6362\u5f53\u524d\u884c ~: \u8868\u793a\u4fee\u6539\u5927\u5c0f\u5199 \u4f8b\u5982\uff1a :s/p1/p2/g \u5c06\u5f53\u524d\u884c\u4e2d\u6240\u6709p1\u5747\u7528p2\u66ff\u4ee3 :1,.s/p1/p2/g \u5c06\u5f53\u524d\u884c\u4e4b\u524d\u7684\u6240\u6709\u884c\u7684\u5b57\u7b26\u4e32p1\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32p2 :1,$s/p1/p2/g \u5c06\u6240\u6709\u51fa\u73b0\u7684\u5b57\u7b26\u4e32p1\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32p2 :g/chaper/s/ten/10/ \u5c06\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5305\u542b\u5b57\u7b26\u4e32chaper\u7684\u6240\u6709\u884c\u4e2d\u7684\u5b57\u7b26\u4e32ten\u66ff\u6362\u4e3a\u5b57\u7b26\u4e3210 :%s/<ten>/10/g \u5c06\u6240\u6709\u51fa\u73b0\u7684\u5b57ten\u66ff\u6362\u4e3a\u5b57\u7b26\u4e3210 :.,.+10s/every/each/g \u5c06\u51fa\u73b0\u7684\u4ece\u5f53\u524d\u884c\u5230\u540e\u7eed10\u884c\u5185\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32every\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32each :s/<short\\>/\"&\"/ \u5c06\u5f53\u524d\u884c\u4e2d\u7684\u5b57short\u66ff\u6362\u4e3a\"short\"(\u5373\u5c06\u5f53\u524d\u884c\u4e2d\u7684\u5b57short\u7528\u5f15\u53f7\u62ec\u8d77\u6765) :n1,n2s/p1/p2/g \u5c06\u7b2cn1\u81f3n2\u884c\u4e2d\u6240\u6709p1\u5747\u7528p2\u66ff\u4ee3 :n1,n2 co n3 \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u7b2cn3\u884c\u4e0b :n1,n2 m n3 \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u79fb\u81f3\u5230\u7b2cn3\u884c\u4e0b :n1,n2 d \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u5220\u9664 \u67e5\u627e /pattern \u4ece\u5149\u6807\u5f00\u59cb\u5904\u5411\u6587\u4ef6\u5c3e\u641c\u7d22pattern ?pattern \u4ece\u5149\u6807\u5f00\u59cb\u5904\u5411\u6587\u4ef6\u9996\u641c\u7d22pattern \u9f20\u6807\u79fb\u52a8\u7684\u4e00\u4e2a\u5355\u8bcd\u4e0a,\u6309 * \u5728\u5168\u6587\u4e2d\u67e5\u627e\u4e0e\u4e4b\u76f8\u540c\u7684\u5355\u8bcd n\uff1a\u5728\u540c\u4e00\u65b9\u5411\u91cd\u590d\u4e0a\u4e00\u6b21\u641c\u7d22\u547d\u4ee4\uff0cN\uff1a\u5728\u53cd\u65b9\u5411\u4e0a\u91cd\u590d\u4e0a\u4e00\u6b21\u641c\u7d22\u547d\u4ee4 \u6807\u8bb0 ma \u8bbe\u7f6e\u4e00\u4e2a\u540d\u5b57\u4e3a a \u7684\u6807\u8bb0 \u2018a (\u5355\u5f15\u53f7+\u6807\u8bb0a)\u5b9a\u4f4d\u5230\u6807\u8bb0a\u7684\u4f4d\u7f6e\u6240\u5728\u884c\u7684\u8d77\u59cb\u4f4d\u7f6e `a(\u53cd\u5f15\u53f7+\u6807\u8bb0a)\u5c06\u5149\u6807\u5b9a\u4f4d\u5230\u6807\u8bb0a\u6240\u5728\u7684\u7684\u7cbe\u786e\u4f4d\u7f6e d'a \u5220\u9664\u5f53\u524d\u884c\u5230\u6807\u8bb0a\u6240\u5728\u884c\u4e4b\u95f4\u7684\u6587\u672c d a ` \u5220\u9664\u5f53\u524d\u884c\u5230a\u6807\u8bb0\u5904\u7684\u6240\u6709\u6587\u672c \u5728\u547d\u4ee4\u4e2d\u53ef\u4ee5\u4f5c\u4e3a\u884c\u53f7\u4f7f\u7528 \uff0c\u4f8b\u5982\uff1a 'm,.s/the/THE/g \u7f16\u8f91\u6307\u5b9a\u6587\u4ef6 :e[!] [filename] \u7f16\u8f91filename\u6307\u5b9a\u7684\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u6307\u5b9afilename\uff0c\u7ee7\u7eed\u7f16\u8f91\u5f53\u524d\u6587\u4ef6(load\u6587\u4ef6\u5230\u5f53\u524d\u7f13\u51b2\u533a\u5373\u7f16\u8f91\u533a\uff0c\u53ef\u505a\u5237\u65b0\u6587\u4ef6\u7528) :e# \u5173\u95ed\u5f53\u524d\u6587\u4ef6\uff0c\u6253\u5f00\u4e0a\u6b21\u7f16\u8f91\u7684\u6587\u4ef6 :n filename \u6253\u5f00\u65b0\u6587\u4ef6 vim\u4e2d\u6267\u884cshell :sh \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c \u6309 CONTROL+D \u6216\u8f93\u5165 exit \u547d\u4ee4\u9000\u51fa\u547d\u4ee4\u6a21\u5f0f :!command ,vim\u4e2d\u6267\u884ccommand\u547d\u4ee4 !!command ,\u6267\u884ccommand\u547d\u4ee4\uff0c\u5e76\u628a\u8f93\u51fa\u7ed3\u679c\u66ff\u6362\u5f53\u524d\u884c !+\u884c\u5730\u5740+ command ,\u5bf9\u6307\u5b9a\u884c\u6267\u884ccommand\u547d\u4ee4\uff0c\u5e76\u7528\u8f93\u51fa\u7ed3\u679c\u66ff\u6362 \u91cd\u590d\u4e0a\u6b21\u547d\u4ee4 . \u91cd\u590d\u4e0a\u6b21\u64cd\u4f5c \u200b","title":"Vim\u5e38\u7528\u547d\u4ee4"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","text":"vimtutor \u67e5\u770b\u4f7f\u7528\u8bf4\u660e :help feature \u83b7\u53d6feature \u7684\u76f8\u5173\u4fe1\u606f :help doc-file-list \u83b7\u53d6\u5e2e\u52a9\u6587\u4ef6\u7684\u5b8c\u6574\u5217\u8868 CONTROL+] \u6253\u5f00\u94fe\u63a5 CONTROL+o \u8fd4\u56de :q \u9000\u51fa\u5e2e\u52a9\u6587\u6863","title":"\u5e2e\u52a9"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#mode","text":"Vim is a modal editor. It has a normal mode, visual mode ,insert mode, and other modes.","title":"Mode"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#undoredo","text":"u: undo last change Ctrl_R: Redo","title":"Undo/Redo"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","text":"ctrl+d \u4e0b\u7ffb\u534a\u5c4f d=down ctrl+u \u4e0a\u7ffb\u534a\u5c4f u=up ctrl+b\u4e0a\u7ffb\u4e00\u9875 b=backward ctrl+f\u4e0b\u7ffb\u4e00\u9875 f=forward \u6eda\u4e00\u884c ctrl-e ctrl-y zz \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u4e2d\u592e zt \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u6700\u4e0a\u4e00\u884c t=top zb \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u6700\u4e0b\u4e00\u884c b=bottom","title":"\u6d4f\u89c8"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","text":"w \u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 b \u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 $ \u79fb\u52a8\u5230\u884c\u5c3e 0\u6216^ \u79fb\u52a8\u5230\u884c\u9996 gg \u79fb\u52a8\u5230\u6587\u6863\u5934 G \u79fb\u52a8\u5230\u6587\u6863\u5c3e \u884c\u53f7\uff0bG \u8df3\u8f6c\u5230\u67d0\u884c\uff0c\u4f8b\u5982\u5230\u7b2c6\u884c 6G :\u884c\u53f7 , \u8df3\u8f6c\u5230\u67d0\u884c\uff0c \u4f8b\u5982\u5230\u7b2c6\u884c :6 ( \u6216 { \u79fb\u52a8\u5230\u6bb5\u843d\u5934 ) \u6216 } \u79fb\u52a8\u5230\u6bb5\u843d\u5c3e e \u79fb\u52a8\u5230\u5f53\u524d\u5b57\u7684\u5c3e\u90e8 ge\u79fb\u52a8\u5230\u524d\u4e00\u4e2a\u5b57\u7684\u5c3e\u90e8 % \u8df3\u8f6c\u5230\u914d\u5bf9\u7684\u7b26\u53f7\u4e0a\uff0c\u914d\u5bf9\u7b26\u53f7\u4f8b\u5982: \"\", (), <>, {} [[ \u8df3\u8f6c\u5230\u5f53\u524d\u6216\u8005\u4e0a\u4e00\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u5f00\u5934\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) ][ \u8df3\u8f6c\u5230\u5f53\u524d\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u7ed3\u5c3e\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) ]] \u8df3\u8f6c\u5230\u4e0b\u4e00\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u5f00\u5934\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) [/ \u8df3\u5230\u6ce8\u91ca\u5f00\u5934\uff08\u53ea\u5bf9/ /\u6ce8\u91ca\u6709\u6548\uff09 ]/ \u8df3\u5230\u6ce8\u91ca\u7ed3\u5c3e\uff08\u53ea\u5bf9/ /\u6ce8\u91ca\u6709\u6548\uff09 gD \u8df3\u8f6c\u5230\u5f53\u524d\u6587\u4ef6\u5185\u6807\u8bc6\u7b26\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u53ef\u7528\u4e8e\u8df3\u8f6c\u5230\u5168\u90e8\u53d8\u91cf\u7684\u5b9a\u4e49\u5904\uff1b\u67e5\u627e\u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u8981\u662f\u591a\u4e2a\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u8be5\u5c40\u90e8\u53d8\u91cf\uff0c\u4f7f\u7528gD\u8fdb\u884c\u67e5\u627e\uff0c\u627e\u5230\u7684\u53d8\u91cf\u5b9a\u4e49\u53ef\u80fd\u4e0d\u662f\u4f60\u9700\u8981\u7684 gd \u8df3\u8f6c\u5230\u5f53\u524d\u51fd\u6570\u5185\u6807\u8bc6\u7b26\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u53ef\u7528\u4e8e\u8df3\u8f6c\u5230\u5c40\u90e8\u53d8\u91cf\u7684\u5b9a\u4e49\u5904 '' \u8df3\u8f6c\u5230\u5149\u6807\u4e0a\u6b21\u505c\u9760\u7684\u5730\u65b9, \u662f\u4e24\u4e2a ' , \u800c\u4e0d\u662f\u4e00\u4e2a \"","title":"\u5149\u6807\u79fb\u52a8"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_4","text":"\u590d\u5236=Yank, \u5220\u9664=Delete, \u7c98\u8d34=Put Yank(Y) \u590d\u5236\u5230\u901a\u7528\u7f13\u51b2\u533a Delete\uff08D\uff09\u5220\u9664\u5e76\u653e\u5230\u901a\u7528\u7f13\u51b2\u533a Put(P) \u628a\u901a\u7528\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u63d2\u5165\u7684\u5f53\u524d\u6587\u672c \u4f8b\u5982\uff1a yy \u590d\u5236\u5f53\u524d\u884c n+yy \u590d\u5236\u5f53\u524d\u884c\u548c\u540e\u9762n-1\u884c gg + yG \u590d\u5236\u5168\u90e8 \"ayy \u590d\u5236\u5230\u7f13\u51b2\u533aa \"ap \u7c98\u8d34\u7f13\u51b2\u533aa\u5230\u6587\u672c Delete\u547d\u4ee4\u7684\u6a21\u5f0f\u540cYank\u4e00\u6837 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u5173\u4e8e\u5bc4\u5b58\u5668(registers)\u7684\u64cd\u4f5c\u3002 \u201c\uff0b\u5b57\u6bcd\uff0byy \u628a\u5f53\u524d\u884c\u590d\u5236\u5230\u5b57\u6bcd\u7684\u547d\u540d\u5bc4\u5b58\u5668, \u201c\uff0b\u5b57\u6bcd\uff0bp \u628a\u5bf9\u5e94\u5b57\u6bcd\u540d\u5b57\u7684\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u9ecf\u8d34\u5230\u5f53\u524d\u6587\u6863\u3002 \u66f4\u591a\u5173\u4e8e\u5bc4\u5b58\u5668\u7684\u4ecb\u7ecd\u53c2\u89c1 :help registers","title":"\u590d\u5236\u7c98\u8d34"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_5","text":"","title":"\u7f16\u8f91"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_6","text":"d+\u8981\u5220\u9664\u7684\u4f4d\u7f6e\uff0c \u4f8b\u5982\uff1a dw \u5220\u9664\u5230\u5b57\u7684\u672b\u5c3e daw \u5220\u9664\u4e00\u4e2a\u5355\u8bcd d3aw \u5220\u96643\u4e2a\u5355\u8bcd dw \u5220\u9664\u5230\u5b57\u7684\u5c3e\u90e8 db \u5220\u9664\u5230\u5b57\u7684\u5f00\u59cb dd \u5220\u9664\u4e00\u884c x \u6216 dl \u5220\u9664\u5355\u4e2a\u5b57\u7b26 d0 \u6216 d^ \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u884c\u7684\u5934\u90e8 d$ \u6216 D \u5220\u9664\u5230\u884c\u5c3e d) \u6216 d} \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u6bb5\u843d\u5c3e d( \u6216 d{ \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u6bb5\u843d\u5934 d/text \u5220\u9664\u5230text\u5355\u8bcd\u7684\u4e0b\u4e00\u6b21\u51fa\u73b0 cw \u5220\u9664\u5230\u5b57\u7684\u672b\u5c3e\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f \u63d2\u5165\u6a21\u5f0f\u4e0b, ctrl+H \u5b57\u7b26\u5220\u9664 ctrl+U \u884c\u5220\u9664 ctrl+W \u5b57\u5220\u9664","title":"\u5220\u9664"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_7","text":"\u914d\u5bf9\u7b26\u53f7\u5305\u62ec \"\", (), {} \u7b49 \u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5bf9\u7b26\u53f7\u5185\u7684\u5185\u5bb9\u8fdb\u884c\u64cd\u4f5c\u3002 ci+\u7b26\u53f7 \u66f4\u6539\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 di+\u7b26\u53f7 \u5220\u9664\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 yi+\u7b26\u53f7 \u590d\u5236\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 vi+\u7b26\u53f7 \u9009\u4e2d\u8fd9\u4e9b\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 \u53e6\u5916\u5982\u679c\u628a\u4e0a\u9762\u7684 i \u6539\u6210 a \u53ef\u4ee5\u8fde\u914d\u5bf9\u7b26\u53f7\u4e00\u8d77\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u8981\u5220\u9664\u53cc\u5f15\u53f7\u5185 \"\" \u5185\u7684\u5185\u5bb9, 111\"222\"333 \uff0c \u5c06\u5149\u6807\u79fb\u5230\u53cc\u5f15\u53f7\u5185\uff0c\u6309\u4e0b di\" ,\u5220\u9664\u53cc\u5f15\u53f7\u5185\u7684\u5185\u5bb9\uff0c\u53d8\u6210 111\"\"333 \uff0c\u82e5\u8981\u8fde\u540c\u53cc\u5f15\u53f7\u4e00\u540c\u5220\u9664\uff0c\u5219\u8981\u6309\u4e0b da\" ,\u6587\u672c\u4f1a\u4fee\u6539\u4e3a\uff1a 111333","title":"\u5bf9\u914d\u5bf9\u7b26\u53f7\u5185\u7684\u5185\u5bb9\u8fdb\u884c\u64cd\u4f5c"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#select-text-inside-a-tag","text":"Tag is the tag in html or xml, for example <div> ... </div> , We can select a text within an html or xml tag by using visual selection v and text object it . Go to normal mode by pressing ESC Type vit from anywhere within the html or xml section This will visually select all text inside the tag. All other text objects can also be used to operate on the text inside the tag vit - select all text inside the tag cit - delete text inside the tag and place in insert mode dit - delete text inside the tag and remain in normal mode cat - delete around tag and place in insert mode dat - delete text around the tag and remain in normal mode","title":"Select text inside a tag"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_8","text":"\\== \u683c\u5f0f\u5316\u5f53\u524d\u884c n+== \u683c\u5f0f\u5316\u5f53\u524d\u548c\u540e\u9762n-1\u884c gg=G \u6216\u8005 = \u683c\u5f0f\u5316\u5168\u6587","title":"\u683c\u5f0f\u5316"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_9","text":"\u63d2\u5165\u6a21\u5f0f\u4e0b\uff1a CTRL+T \u53f3\u7f29\u8fdb CTRL+D \u5de6\u7f29\u8fdb \u547d\u4ee4\u6a21\u5f0f\u4e0b\uff1a > \u589e\u52a0\u7f29\u8fdb, x> \u8868\u793a\u589e\u52a0\u4ee5\u4e0bx\u884c\u7684\u7f29\u8fdb < \u51cf\u5c11\u7f29\u8fdb, x< \u8868\u793a\u51cf\u5c11\u4ee5\u4e0bx\u884c\u7684\u7f29\u8fdb","title":"\u7f29\u8fdb"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_10","text":"\u65b9\u6cd5\u4e00 \u591a\u884c\u6ce8\u91ca\uff1a \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309 ctrl + v \u8fdb\u5165 visual block\u6a21\u5f0f\uff0c\u7136\u540e\u6309j\u6216k\u9009\u4e2d\u591a\u884c\uff0c\u628a\u9700\u8981\u6ce8\u91ca\u7684\u884c\u6807\u8bb0\u8d77\u6765\uff0c\u6309\u5927\u5199\u5b57\u6bcdI\uff0c\u518d\u63d2\u5165\u6ce8\u91ca\u7b26\uff0c\u4f8b\u5982 // \uff0c\u6309esc\u952e\u5c31\u4f1a\u5168\u90e8\u6ce8\u91ca\u4e86\u3002 \u53d6\u6d88\u591a\u884c\u6ce8\u91ca\uff1a \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309\u00b7ctrl + v\u00b7\u8fdb\u5165 visual block\u6a21\u5f0f\uff0c\u6309\u5b57\u6bcdl\u6a2a\u5411\u9009\u4e2d\u5217\u7684\u4e2a\u6570\uff0c\u4f8b\u5982 \u00b7//\u00b7 \u9700\u8981\u9009\u4e2d2\u5217\uff0c\u6309\u5b57\u6bcdj\uff0c\u6216 \u8005k\u9009\u4e2d\u6ce8\u91ca\u7b26\u53f7\uff0c\u6309d\u952e\u5c31\u53ef\u5220\u9664\u6ce8\u91ca\u7b26\u3002 \u65b9\u6cd5\u4e8c \u66ff\u6362\u547d\u4ee4 \u63d2\u5165\u6ce8\u91ca :\u8d77\u59cb\u884c\u53f7,\u7ed3\u675f\u884c\u53f7s/^/\u6ce8\u91ca\u7b26/g \u4f8b\u5982\uff1a :27,30s#^#//#g \u5c31\u662f\u572827 - 30\u884c\u6dfb\u52a0 // \u6ce8\u91ca` \u53d6\u6d88\u6ce8\u91ca \u00b7:\u8d77\u59cb\u884c\u53f7,\u7ed3\u675f\u884c\u53f7s/^\u6ce8\u91ca\u7b26//g\u00b7 \u4f8b\u5982\uff1a :27,30s#^//##g \u5c31\u662f\u572827 - 30\u884c\u5220\u9664 // \u6ce8\u91ca","title":"\u4ee3\u7801\u6ce8\u91ca"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_11","text":"crl+p \u548c crl+n","title":"\u81ea\u52a8\u8865\u5168"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_12","text":"\u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b :[g] [address] s/search-string/replacement-string[/option] \u5176\u4e2d addess\uff1a\u4ee3\u8868\u884c s: \u8868\u793a\u66ff\u6362\u5f53\u524d\u5b57\u7b26 S: \u8868\u793a\u66ff\u6362\u5f53\u524d\u884c ~: \u8868\u793a\u4fee\u6539\u5927\u5c0f\u5199 \u4f8b\u5982\uff1a :s/p1/p2/g \u5c06\u5f53\u524d\u884c\u4e2d\u6240\u6709p1\u5747\u7528p2\u66ff\u4ee3 :1,.s/p1/p2/g \u5c06\u5f53\u524d\u884c\u4e4b\u524d\u7684\u6240\u6709\u884c\u7684\u5b57\u7b26\u4e32p1\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32p2 :1,$s/p1/p2/g \u5c06\u6240\u6709\u51fa\u73b0\u7684\u5b57\u7b26\u4e32p1\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32p2 :g/chaper/s/ten/10/ \u5c06\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5305\u542b\u5b57\u7b26\u4e32chaper\u7684\u6240\u6709\u884c\u4e2d\u7684\u5b57\u7b26\u4e32ten\u66ff\u6362\u4e3a\u5b57\u7b26\u4e3210 :%s/<ten>/10/g \u5c06\u6240\u6709\u51fa\u73b0\u7684\u5b57ten\u66ff\u6362\u4e3a\u5b57\u7b26\u4e3210 :.,.+10s/every/each/g \u5c06\u51fa\u73b0\u7684\u4ece\u5f53\u524d\u884c\u5230\u540e\u7eed10\u884c\u5185\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32every\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32each :s/<short\\>/\"&\"/ \u5c06\u5f53\u524d\u884c\u4e2d\u7684\u5b57short\u66ff\u6362\u4e3a\"short\"(\u5373\u5c06\u5f53\u524d\u884c\u4e2d\u7684\u5b57short\u7528\u5f15\u53f7\u62ec\u8d77\u6765) :n1,n2s/p1/p2/g \u5c06\u7b2cn1\u81f3n2\u884c\u4e2d\u6240\u6709p1\u5747\u7528p2\u66ff\u4ee3 :n1,n2 co n3 \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u7b2cn3\u884c\u4e0b :n1,n2 m n3 \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u79fb\u81f3\u5230\u7b2cn3\u884c\u4e0b :n1,n2 d \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u5220\u9664","title":"\u66ff\u6362"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_13","text":"/pattern \u4ece\u5149\u6807\u5f00\u59cb\u5904\u5411\u6587\u4ef6\u5c3e\u641c\u7d22pattern ?pattern \u4ece\u5149\u6807\u5f00\u59cb\u5904\u5411\u6587\u4ef6\u9996\u641c\u7d22pattern \u9f20\u6807\u79fb\u52a8\u7684\u4e00\u4e2a\u5355\u8bcd\u4e0a,\u6309 * \u5728\u5168\u6587\u4e2d\u67e5\u627e\u4e0e\u4e4b\u76f8\u540c\u7684\u5355\u8bcd n\uff1a\u5728\u540c\u4e00\u65b9\u5411\u91cd\u590d\u4e0a\u4e00\u6b21\u641c\u7d22\u547d\u4ee4\uff0cN\uff1a\u5728\u53cd\u65b9\u5411\u4e0a\u91cd\u590d\u4e0a\u4e00\u6b21\u641c\u7d22\u547d\u4ee4","title":"\u67e5\u627e"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_14","text":"ma \u8bbe\u7f6e\u4e00\u4e2a\u540d\u5b57\u4e3a a \u7684\u6807\u8bb0 \u2018a (\u5355\u5f15\u53f7+\u6807\u8bb0a)\u5b9a\u4f4d\u5230\u6807\u8bb0a\u7684\u4f4d\u7f6e\u6240\u5728\u884c\u7684\u8d77\u59cb\u4f4d\u7f6e `a(\u53cd\u5f15\u53f7+\u6807\u8bb0a)\u5c06\u5149\u6807\u5b9a\u4f4d\u5230\u6807\u8bb0a\u6240\u5728\u7684\u7684\u7cbe\u786e\u4f4d\u7f6e d'a \u5220\u9664\u5f53\u524d\u884c\u5230\u6807\u8bb0a\u6240\u5728\u884c\u4e4b\u95f4\u7684\u6587\u672c d a ` \u5220\u9664\u5f53\u524d\u884c\u5230a\u6807\u8bb0\u5904\u7684\u6240\u6709\u6587\u672c \u5728\u547d\u4ee4\u4e2d\u53ef\u4ee5\u4f5c\u4e3a\u884c\u53f7\u4f7f\u7528 \uff0c\u4f8b\u5982\uff1a 'm,.s/the/THE/g","title":"\u6807\u8bb0"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_15","text":":e[!] [filename] \u7f16\u8f91filename\u6307\u5b9a\u7684\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u6307\u5b9afilename\uff0c\u7ee7\u7eed\u7f16\u8f91\u5f53\u524d\u6587\u4ef6(load\u6587\u4ef6\u5230\u5f53\u524d\u7f13\u51b2\u533a\u5373\u7f16\u8f91\u533a\uff0c\u53ef\u505a\u5237\u65b0\u6587\u4ef6\u7528) :e# \u5173\u95ed\u5f53\u524d\u6587\u4ef6\uff0c\u6253\u5f00\u4e0a\u6b21\u7f16\u8f91\u7684\u6587\u4ef6 :n filename \u6253\u5f00\u65b0\u6587\u4ef6","title":"\u7f16\u8f91\u6307\u5b9a\u6587\u4ef6"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#vimshell","text":":sh \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c \u6309 CONTROL+D \u6216\u8f93\u5165 exit \u547d\u4ee4\u9000\u51fa\u547d\u4ee4\u6a21\u5f0f :!command ,vim\u4e2d\u6267\u884ccommand\u547d\u4ee4 !!command ,\u6267\u884ccommand\u547d\u4ee4\uff0c\u5e76\u628a\u8f93\u51fa\u7ed3\u679c\u66ff\u6362\u5f53\u524d\u884c !+\u884c\u5730\u5740+ command ,\u5bf9\u6307\u5b9a\u884c\u6267\u884ccommand\u547d\u4ee4\uff0c\u5e76\u7528\u8f93\u51fa\u7ed3\u679c\u66ff\u6362","title":"vim\u4e2d\u6267\u884cshell"},{"location":"Vim/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_16","text":". \u91cd\u590d\u4e0a\u6b21\u64cd\u4f5c \u200b","title":"\u91cd\u590d\u4e0a\u6b21\u547d\u4ee4"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/","text":"Multiple Selection with the Keyboard Adding a Line To add the line above or below to the selection, use: Windows/Linux: Ctrl+Alt+\u2b06 and Ctrl+Alt+\u2b07 Mac: \u2303+\u21e7+\u2b06 and \u2303+\u21e7+\u2b07 Splitting the Selection into Lines Select a block of lines, and then split it into many selections, one per line, using: Windows/Linux: Ctrl+Shift+L Mac: \u21e7+\u2318+L Quick Add Next To add the next occurrence of the current word to the selection, use Quick Add Next, which is bound to: Windows/Linux: Ctrl+D Mac: \u2318+D Individual occurrences can be skipped via Quick Skip Next, which is bound to: Windows/Linux: Ctrl+K, Ctrl+D Mac: \u2318+K, \u2318+D Find All To add all occurrences of the current word to the selection, use Find All: Windows/Linux: Alt+F3 Mac: \u2303+\u2318+G Undo Selection If you go too far, use Undo Selection to step backwards: Windows/Linux: Ctrl+U Mac: \u2318+U Single Selection To go from multiple selections to a single selection, press Esc. Column Selection Column selection can be used to select a rectangular area of a file. Column selection doesn\u2019t operate via a separate mode, instead it makes use of multiple selections. You can use additive selections to select multiple blocks of text, or subtractive selections to remove a block. Using the Mouse Different mouse buttons are used on each platform: MAC Left Mouse Button + \u2325 OR: Middle Mouse Button Add to selection: \u2318 Subtract from selection: \u21e7+\u2318 WINDOWS Right Mouse Button + Shift OR: Middle Mouse Button Add to selection: Ctrl Subtract from selection: Alt LINUX Right Mouse Button + Shift Add to selection: Ctrl Subtract from selection: Alt Using the Keyboard MAC Ctrl+Shift+\u2b06 Ctrl+Shift+\u2b07 WINDOWS Ctrl+Alt+\u2b06 Ctrl+Alt+\u2b07 LINUX Alt+Shift+\u2b06 Alt+Shift+\u2b07 Index Find file Type Ctrl+P on Windows and Linux, Cmd+P on macOS. and type the name of the file you're looking for. If there are multiple hits, you can select the appropriate file using cursor keys. It also supports powerful operators, that let you jump to specific parts inside a file. Examples: file.js opens that file :100 jumps to line 100 in current file file.js:100 jumps to line 100 in file.js file.js@loadFile : jumps to a loadFile() in file.js Search DEFINITION inside the current file Windows/Linux: Ctrl+R Mac: \u2318+R GOTO DEFINITION Invoking Goto Symbol in Project to fuzzy-search through symbols Windows/Linux: Ctrl+Shift+R Mac: \u2318+Shift+R Hovering over a word to show the Goto Definition Popup Ctrl-->Click the word-->Goto Definition Executing Goto Definition for the word under the caret F12 Executing Goto Reference for the word under the caret Shift+F12 All of the Goto commands can also be invoked via the \"Goto menu\". Jump to line Ctrl-g https://www.sublimetext.com/docs/","title":"Sublime"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#multiple-selection-with-the-keyboard","text":"","title":"Multiple Selection with the Keyboard"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#adding-a-line","text":"To add the line above or below to the selection, use: Windows/Linux: Ctrl+Alt+\u2b06 and Ctrl+Alt+\u2b07 Mac: \u2303+\u21e7+\u2b06 and \u2303+\u21e7+\u2b07","title":"Adding a Line"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#splitting-the-selection-into-lines","text":"Select a block of lines, and then split it into many selections, one per line, using: Windows/Linux: Ctrl+Shift+L Mac: \u21e7+\u2318+L","title":"Splitting the Selection into Lines"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#quick-add-next","text":"To add the next occurrence of the current word to the selection, use Quick Add Next, which is bound to: Windows/Linux: Ctrl+D Mac: \u2318+D Individual occurrences can be skipped via Quick Skip Next, which is bound to: Windows/Linux: Ctrl+K, Ctrl+D Mac: \u2318+K, \u2318+D","title":"Quick Add Next"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#find-all","text":"To add all occurrences of the current word to the selection, use Find All: Windows/Linux: Alt+F3 Mac: \u2303+\u2318+G","title":"Find All"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#undo-selection","text":"If you go too far, use Undo Selection to step backwards: Windows/Linux: Ctrl+U Mac: \u2318+U","title":"Undo Selection"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#single-selection","text":"To go from multiple selections to a single selection, press Esc.","title":"Single Selection"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#column-selection","text":"Column selection can be used to select a rectangular area of a file. Column selection doesn\u2019t operate via a separate mode, instead it makes use of multiple selections. You can use additive selections to select multiple blocks of text, or subtractive selections to remove a block.","title":"Column Selection"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#using-the-mouse","text":"Different mouse buttons are used on each platform: MAC Left Mouse Button + \u2325 OR: Middle Mouse Button Add to selection: \u2318 Subtract from selection: \u21e7+\u2318 WINDOWS Right Mouse Button + Shift OR: Middle Mouse Button Add to selection: Ctrl Subtract from selection: Alt LINUX Right Mouse Button + Shift Add to selection: Ctrl Subtract from selection: Alt","title":"Using the Mouse"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#using-the-keyboard","text":"MAC Ctrl+Shift+\u2b06 Ctrl+Shift+\u2b07 WINDOWS Ctrl+Alt+\u2b06 Ctrl+Alt+\u2b07 LINUX Alt+Shift+\u2b06 Alt+Shift+\u2b07","title":"Using the Keyboard"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#index","text":"","title":"Index"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#find-file","text":"Type Ctrl+P on Windows and Linux, Cmd+P on macOS. and type the name of the file you're looking for. If there are multiple hits, you can select the appropriate file using cursor keys. It also supports powerful operators, that let you jump to specific parts inside a file. Examples: file.js opens that file :100 jumps to line 100 in current file file.js:100 jumps to line 100 in file.js file.js@loadFile : jumps to a loadFile() in file.js","title":"Find file"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#search-definition-inside-the-current-file","text":"Windows/Linux: Ctrl+R Mac: \u2318+R","title":"Search DEFINITION inside the current file"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#goto-definition","text":"Invoking Goto Symbol in Project to fuzzy-search through symbols Windows/Linux: Ctrl+Shift+R Mac: \u2318+Shift+R Hovering over a word to show the Goto Definition Popup Ctrl-->Click the word-->Goto Definition Executing Goto Definition for the word under the caret F12 Executing Goto Reference for the word under the caret Shift+F12 All of the Goto commands can also be invoked via the \"Goto menu\".","title":"GOTO DEFINITION"},{"location":"%E7%BC%96%E8%BE%91%E5%99%A8/Sublime/#jump-to-line-ctrl-g","text":"https://www.sublimetext.com/docs/","title":"Jump to line Ctrl-g"}]}