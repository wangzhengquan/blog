{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u8fd9\u4e2a\u535a\u5ba2\u7528\u6765\u8bb0\u5f55\u4e00\u4e9b\u7ecf\u5e38\u7528\u5230\u7684\u4f46\u662f\u5374\u7410\u788e\u6613\u5fd8\u7684\u4e1c\u897f\u3002","title":"\u7b80\u4ecb"},{"location":"Algorithms/Using%20two%20stacks%20to%20Evaluate%20an%20Expression/","text":"Infix Expressions are harder for Computers to evaluate because of the additional work needed to decide precedence. Infix notation is how expressions are written and recognized by humans and, generally, input to programs. Given that they are harder to evaluate, they are generally converted to one of the two remaining forms. A very well known algorithm for converting an infix notation to a postfix notation is Shunting Yard Algorithm by Edgar Dijkstra. This algorithm takes as input an Infix Expression and produces a queue that has this expression converted to postfix notation. The same algorithm can be modified so that it outputs the result of the evaluation of expression instead of a queue. The trick is using two stacks instead of one, one for operands, and one for operators. 1. While there are still tokens to be read in, 1.1 Get the next token. 1.2 If the token is: 1.2.1 A number: push it onto the value stack. 1.2.2 A variable: get its value, and push onto the value stack. 1.2.3 A left parenthesis: push it onto the operator stack. 1.2.4 A right parenthesis: 1 While the thing on top of the operator stack is not a left parenthesis, 1 Pop the operator from the operator stack. 2 Pop the value stack twice, getting two operands. 3 Apply the operator to the operands, in the correct order. 4 Push the result onto the value stack. 2 Pop the left parenthesis from the operator stack, and discard it. 1.2.5 An operator (call it thisOp): 1 While the operator stack is not empty, and the top thing on the operator stack has the same or greater precedence as thisOp, 1 Pop the operator from the operator stack. 2 Pop the value stack twice, getting two operands. 3 Apply the operator to the operands, in the correct order. 4 Push the result onto the value stack. 2 Push thisOp onto the operator stack. 2. While the operator stack is not empty, 1 Pop the operator from the operator stack. 2 Pop the value stack twice, getting two operands. 3 Apply the operator to the operands, in the correct order. 4 Push the result onto the value stack. 3. At this point the operator stack should be empty, and the value stack should have only one value in it, which is the final result. Implementation: It should be clear that this algorithm runs in linear time \u2013 each number or operator is pushed onto and popped from Stack only once. /** * https://www.geeksforgeeks.org/expression-evaluation * <p> * Using two stacks , one for operands, and one for operators to Evaluate an Expression in one pass */ import java.util.Map; import java.util.Stack; import java.util.TreeMap; public class CalculatorX { private final static Map<Character, Integer> OPERATOR_MAP = new TreeMap<>(); static { // <Operator, Precedence> OPERATOR_MAP.put('+', 1); OPERATOR_MAP.put('-', 1); OPERATOR_MAP.put('*', 2); OPERATOR_MAP.put('/', 2); OPERATOR_MAP.put('^', 3); // power } public static double evaluate(String expression) { char[] tokens = expression.toCharArray(); // Stack for numbers: 'values' Stack<Double> values = new Stack<>(); // Stack for Operators: 'ops' Stack<Character> ops = new Stack<>(); for (int i = 0; i < tokens.length; i++) { // Current token is a whitespace, skip it if (Character.isWhitespace(tokens[i])) continue; // Current token is a number, push it to stack for numbers if (isDigit(tokens[i])) { StringBuffer sbuf = new StringBuffer(); // There may be more than one digits in number // while (i < tokens.length && tokens[i] >= '0' && tokens[i] <= '9') while (i < tokens.length && isDigit(tokens[i])) sbuf.append(tokens[i++]); values.push(Double.parseDouble(sbuf.toString())); /* right now the i points to the character next to the digit, since the for loop also increases the i, we would skip one token position; we need to decrease the value of i by 1 to correct the offset.*/ i--; } else if (tokens[i] == '(') { // Current token is an opening brace, push it to 'ops' ops.push(tokens[i]); } else if (tokens[i] == ')') { // Closing brace encountered, solve entire brace while (ops.peek() != '(') values.push(applyOp(ops.pop(), values.pop(), values.pop())); //Pop the left parenthesis from the stack and discard it if (ops.isEmpty() || ops.pop() != '(') { throw new IllegalArgumentException(\"The expression contained unbalanced parentheses \"); } } else if (isOperator(tokens[i])) { // Current token is an operator. /* While top of 'ops' has same or greater precedence to current token, which is an operator. Apply operator on top of 'ops' to top two elements in values stack*/ while (!ops.empty() && ops.peek() != '(' && precedence(ops.peek()) > precedence(tokens[i])) values.push(applyOp(ops.pop(), values.pop(), values.pop())); // Push current token to 'ops'. ops.push(tokens[i]); } else { throw new IllegalArgumentException(\"Invalid token found:\" + tokens[i]); } } // Entire expression has been parsed at this point, apply remaining ops to remaining values while (!ops.empty()) { char op = ops.pop(); if (op != '(') values.push(applyOp(op, values.pop(), values.pop())); else throw new IllegalArgumentException(\"The infixQ contained unbalanced parentheses \"); } // Top of 'values' contains result, return it return values.pop(); } private static boolean isOperator(char c) { return c == '+' || c == '-' || c == '*' || c == '/' || c == '^'; } private static boolean isDigit(char c) { // c >= '0' && c <= '9' || c == '.' return Character.isDigit(c) || c == '.'; } // Returns true if 'op2' has higher or same precedence as 'op1', otherwise returns false. public static int precedence(char op) { return OPERATOR_MAP.get(op); } // A utility method to apply an operator 'op' on operands 'a' and 'b'. Return the result. public static double applyOp(char op, double b, double a) { switch (op) { case '+': return a + b; case '-': return a - b; case '*': return a * b; case '/': if (b == 0) throw new UnsupportedOperationException(\"Cannot divide by zero\"); return a / b; case '^': return Math.pow(a, b); } return 0; } // Driver method to test above methods public static void main(String[] args) { System.out.println(CalculatorX.evaluate(\"10 + 2 * 6\")); System.out.println(CalculatorX.evaluate(\"1.01 * 2 + 12\")); System.out.println(CalculatorX.evaluate(\"100 * ( 2 + 12 )\")); System.out.println(CalculatorX.evaluate(\"100 * ( 2 + 12 ) / 14 + 2^3\")); System.out.println(CalculatorX.evaluate(\"2^3\")); } } https://www.geeksforgeeks.org/expression-evaluation/ \\","title":"Using two stacks to Evaluate an Expression"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/","text":"Using a Stack to Evaluate an Expression We often deal with arithmetic expressions written in what is called infix notation: Operand1 op Operand2 We have rules to indicate which operations take precedence over others, and we often use parentheses to override those rules. It is also quite possible to write arithmetic expressions using postfix notation: Operand1 Operand2 op With postfix notation, it is possible to use a stack to find the overall value of an infix expression by first converting it to postfix notation. Example: Suppose we have this infix expression Q: 5 * ( 6 + 2 ) - 12 / 4 The equivalent postfix expression P is: 5 6 2 + * 12 4 / - This discussion assumes all our operations are binary operations (2 arguments each). Notice that we also sometimes use unary operations such as ++ or -- or the unary + and -. We are not including the possibility of array elements in this discussion. (The subscript can be an expression which would have to be evaluated.) One way to think of an expression is as a list or sequence of items, each of which is a left parenthesis, right parenthesis, argument, or operator. An argument can be a constant or the name of a variable. Presumably it would be necessary at some point to replace each variable with its value. There are two algorithms involved. One converts an infix expression to postfix form, and the other evaluates a postfix expression. Each uses a stack. Transform an infix expression to postfix notation Suppose Q is an arithmetic expression in infix notation. We will create an equivalent postfix expression P by adding items to on the right of P. The new expression P will not contain any parentheses. We will use a stack in which each item may be a left parenthesis or the symbol for an operation. Start with an empty stack. We scan Q from left to right. While (we have not reached the end of Q) If (an operand is found) Add it to P End-If If (a left parenthesis is found) Push it onto the stack End-If If (a right parenthesis is found) While (the stack is not empty AND the top item is not a left parenthesis) Pop the stack and add the popped value to P End-While Pop the left parenthesis from the stack and discard it End-If If (an operator is found) While (the stack is not empty AND the top of the stack is not a left parenthesis AND precedence of the operator <= precedence of the top of the stack) Pop the stack and add the top value to P End-While Push the operator onto the stack End-If End-While While (the stack is not empty) Pop the stack and add the popped value to P End-While Notes: At the end, if there is still a left parenthesis at the top of the stack, or if we find a right parenthesis when the stack is empty, then Q contained unbalanced parentheses and is in error. Evaluate a postfix expression Suppose P is an arithmetic expression in postfix notation. We will evaluate it using a stack to hold the operands. Start with an empty stack. We scan P from left to right. While (we have not reached the end of P) If an operand is found push it onto the stack End-If If an operator is found Pop the stack and call the value A Pop the stack and call the value B Evaluate B op A using the operator just found. Push the resulting value onto the stack End-If End-While Pop the stack (this is the final value) Notes: At the end, there should be only one element left on the stack. This assumes the postfix expression is valid. How can this be implemented? Work like this is usually done by an assembler, compiler or interpreter. A programmer uses an expression in her or her code, and evaluating it is someone else's problem. Suppose it is our problem (maybe we are writing an interpreter). The interpreter is reading a line at a time from a file as a string, such as A = ((B + C) / 3 - 47 % E) * (F + 8) The string needs to be parsed--that is, we need to break it up into substrings, each of which is one meaningful part. These substrings are often called tokens. The tokens are separated by spaces, in many cases, but also a token ends if we find a left or right parenthesis or the symbol for an operator. Thus for instance, in the above example, we have \"E)\", and this consists of two tokens \"E\" and \")\". Bear in mind that the symbol for an operator can be more than one character. We then have a list of tokens, perhaps in an array or a linked list. Somewhere we will have an Evaluate function which takes such a list as an argument and returns a numeric value. A java implementation /** * A perfect calculator * <p> * Dijkstra\u2019s Two-Stack Algorithm for Expression Evaluation * <p> * Reference: * http://faculty.cs.niu.edu/~hutchins/csci241/eval.htm * https://en.wikipedia.org/wiki/Shunting_yard_algorithm * Discrete mathmatics and its application 7th --> 11.3 Tree Travesal * * <p> * % java Calculator * 2 + ( 3 + 4 ) * ( 5 * 6 ) * 212.0 * <p> * 1 + ( 2 + 3 ) * ( 4 * 5 ) * 101.0 * <p> * ( 1 + sqrt( 5.0+4*3+sqrt(3+30*2) ) ) / 2.0 * 2.996860725651001 * <p> * ( 1 + sqrt ( 5.0 ) ) / 2.0 * 1.618033988749895 */ import java.util.ArrayList; import java.util.List; import java.util.Map; import java.util.Scanner; import java.util.Stack; import java.util.TreeMap; public class Calculator { // key is operator, value is precedence private final static Map<String, Integer> OPERATOR_MAP = new TreeMap<>(); static { // <Operator, Precedence> OPERATOR_MAP.put(\"+\", 1); OPERATOR_MAP.put(\"-\", 1); OPERATOR_MAP.put(\"*\", 2); OPERATOR_MAP.put(\"/\", 2); OPERATOR_MAP.put(\"^\", 3); // power OPERATOR_MAP.put(\"sqrt\", 4); OPERATOR_MAP.put(\"sin\", 4); OPERATOR_MAP.put(\"cos\", 4); OPERATOR_MAP.put(\"log\", 4); //natural logarithm } public Calculator() { } public double evaluate(String expression) { if (expression == null || expression.length() == 0) { throw new IllegalArgumentException(\"empty expression\"); } return evaluatePostfix(infixToPostfix(tokenizeExpression(expression))); } private List<String> tokenizeExpression(String expression) { List<String> infixQ = new ArrayList<>(); StringBuilder buf = new StringBuilder(); int len = expression.length(); for (int i = 0; i < len; i++) { char c = expression.charAt(i); if (Character.isWhitespace(c)) { if (buf.length() > 0) { infixQ.add(buf.toString()); buf = new StringBuilder(); } continue; } if (isSymbol(c)) { if (buf.length() > 0) { infixQ.add(buf.toString()); buf = new StringBuilder(); } infixQ.add(String.valueOf(c)); } else buf.append(c); } if (buf.length() > 0) infixQ.add(buf.toString()); return infixQ; } /** * Transform an infix queue to postfix queue * * @param infixQ * @return */ private List<String> infixToPostfix(List<String> infixQ) { if (infixQ == null || infixQ.isEmpty()) { throw new IllegalArgumentException(\"empty infixQ\"); } List<String> postfixQ = new ArrayList<>(); //operator stack , a stack in which each item may be a left parenthesis or the symbol for an operation. Stack<String> stack = new Stack<String>(); for (String token : infixQ) { //If (an operand is found) Add it to P if (isNumeric(token)) { postfixQ.add(token); } else if (token.equals(\"(\")) { stack.push(token); } else if (token.equals(\")\")) { while (!stack.isEmpty() && !stack.peek().equals(\"(\")) { postfixQ.add(stack.pop()); } //Pop the left parenthesis from the stack and discard it if (stack.isEmpty() || !stack.pop().equals(\"(\")) { throw new IllegalArgumentException(\"The infixQ contained unbalanced parentheses \"); } } else if (isOperator(token)) { while (!stack.isEmpty() && !stack.peek().equals(\"(\") && precedence(stack.peek()) >= precedence(token)) { postfixQ.add(stack.pop()); } stack.push(token); } else { throw new IllegalArgumentException(\"Invalid token found:\" + token); } } while (!stack.isEmpty()) { String op = stack.pop(); if (!op.equals(\"(\")) postfixQ.add(op); else throw new IllegalArgumentException(\"The infixQ contained unbalanced parentheses \"); } return postfixQ; } private static boolean isOperator(String token) { return OPERATOR_MAP.containsKey(token); } private static boolean isSymbol(char c) { return c == '+' || c == '-' || c == '*' || c == '/' || c == '^' || c == '(' || c == ')' || c == ','; } /** * Evaluate a postfix queue * * @param postfixQ * @return */ private Double evaluatePostfix(List<String> postfixQ) { if (postfixQ == null || postfixQ.isEmpty()) { throw new IllegalArgumentException(\"empty postfixQ\"); } //operand stack, a stack to hold the operands. Stack<Double> stack = new Stack<>(); for (String token : postfixQ) { //If an operand is found push it onto the stack if (isNumeric(token)) { stack.push(Double.parseDouble(token)); } else if (isOperator(token)) { //If an operator is found double v = stack.pop(); switch (token) { case \"+\": v = stack.pop() + v; break; case \"-\": v = stack.pop() - v; break; case \"*\": v = stack.pop() * v; break; case \"/\": v = stack.pop() / v; break; case \"^\": v = Math.pow(stack.pop(), v); break; case \"sqrt\": v = Math.sqrt(v); break; case \"sin\": v = Math.sin(degreeToRadian(v)); break; case \"cos\": v = Math.cos(degreeToRadian(v)); break; case \"log\": v = Math.log(v); break; default: break; } stack.push(v); } else { throw new IllegalArgumentException(\" invalid token found:\" + token); } } //At the end, there should be only one element left on the stack. if (stack.size() != 1) { throw new IllegalArgumentException(\"Invalid postfix\"); } return stack.pop(); } private int precedence(String token) { return OPERATOR_MAP.get(token); } private static double degreeToRadian(double degree) { return degree / 180 * Math.PI; } private static boolean isNumeric(String token) { if (token == null) { return false; } try { Double.parseDouble(token); } catch (NumberFormatException nfe) { return false; } return true; } /** * match a number with optional '-' and decimal. */ private static boolean isNumeric2(String str) { return str.matches(\"-?\\\\d+(\\\\.\\\\d+)?\"); } private double debug(String expression) { System.out.println(\"---expression---\"); System.out.println(expression); List<String> infixQ = tokenizeExpression(expression); System.out.println(\"---tokenize---\"); for (String token : infixQ) { System.out.print(token + \" \"); } System.out.println(\"\\n---transform to postfix---\"); List<String> postfixQ = infixToPostfix(infixQ); for (String token : postfixQ) { System.out.print(token + \" \"); } System.out.println(); return evaluatePostfix(postfixQ); } private static void simulate() { // BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); // String line = br.readLine(); Calculator cal = new Calculator(); Scanner scanner = new Scanner(System.in, \"UTF-8\"); while (scanner.hasNextLine()) { String expression = scanner.nextLine().trim(); if (expression.length() == 0) continue; if (expression.equals(\"quit\")) break; System.out.println(cal.evaluate(expression)); } } public static void main(String[] args) { // simulate(); test1(); // test2(); // testCorrect(); } private static void test1() { String expression = \"3+4*2-2^3\"; //String expression = \"3 4 2 * + 1 - \"; // String expression = \"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\"; Calculator cal = new Calculator(); System.out.println(\"value:\" + cal.debug(expression)); } private static void test2() { List<String> expressions = new ArrayList<>(); expressions.add(\"(8+9)^2+(8-4)/3\"); expressions.add(\"(2+sqrt(5+4))\"); expressions.add(\"2 + ( 3 + 4 ) * ( 5 * 6 )\"); expressions.add(\"1 + ( 2 + 3 ) * ( 4 * 5 )\"); expressions.add(\"(1 + sqrt(5.0+4*3+sqrt(30*2+3)) ) / 2.0\"); expressions.add(\"(1 + log( 5.0+4*3+sqrt(30*2+3) ) ) / 2.0\"); expressions.add(\"(1 + sqrt ( 5.0 ) ) / 2.0\"); expressions.add(\"6*sin(30)\"); expressions.add(\"6*(5+4+3)\"); expressions.add(\"2*(5+4+3+2*2*2+1)\"); expressions.add(\"3 + 4 * 2 - 1\"); expressions.add(\"3 + 4 * (2 - 1)\"); expressions.add(\"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\"); expressions.add(\"1 + 3 + 2 * 4 * (2 - 1)\"); // expressions.add(\"\"); Calculator cal = new Calculator(); for (String expression : expressions) { System.out.println(expression + \" = \" + cal.evaluate(expression)); } } private static void testCorrect() { Calculator cal = new Calculator(); if (cal.evaluate(\"(8+9)^2+(8-4)/3\") != (Math.pow(8 + 9, 2) + (8.0 - 4.0) / 3)) { throw new Error(\"false\"); } if (cal.evaluate(\"(2+sqrt(5+4))\") != ((2 + Math.sqrt(5 + 4)))) { throw new Error(\"false\"); } if (cal.evaluate(\"2 + ( 3 + 4 ) * ( 5 * 6 )\") != (2 + (3 + 4) * (5 * 6))) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + sqrt(5.0+4*3+sqrt(30*2+3)) ) / 2.0\") != ((1 + Math.sqrt(5.0 + 4 * 3 + Math.sqrt(30 * 2 + 3))) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + log( 5.0+4*3+sqrt(30*2+3) ) ) / 2.0\") != ((1 + Math.log(5.0 + 4 * 3 + Math.sqrt(30 * 2 + 3))) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + sqrt ( 5.0 ) ) / 2.0\") != ((1 + Math.sqrt(5.0)) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"6*sin(30)\") != (6 * Math.sin(degreeToRadian(30)))) { throw new Error(cal.evaluate(\"6*sin(30)\") + \" = \" + (6 * Math.sin(degreeToRadian(30)))); } if (cal.evaluate(\"6*(5+4+3)\") != (6 * (5 + 4 + 3))) { throw new Error(\"false\"); } if (cal.evaluate(\"2*(5+4+3+2*2*2+1)\") != (2 * (5 + 4 + 3 + 2 * 2 * 2 + 1))) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * 2 - 1\") != (3 + 4 * 2 - 1)) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * (2 - 1)\") != (3 + 4 * (2 - 1))) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\") != (3 + 4 * 2 / Math.pow(Math.pow(1 - 5, 2), 3))) { throw new Error(\"false\"); } if (cal.evaluate(\"1 + 3 + 2 * 4 * (2 - 1)\") != (1 + 3 + 2 * 4 * (2 - 1))) { throw new Error(\"false\"); } System.out.println(\"Pass!\"); } } http://faculty.cs.niu.edu/\\~hutchins/csci241/eval.htm https://en.wikipedia.org/wiki/Shunting_yard_algorithm https://www.geeksforgeeks.org/expression-evaluation/ \\","title":"Using a Stack to Evaluate an Expression"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/#using-a-stack-to-evaluate-an-expression","text":"We often deal with arithmetic expressions written in what is called infix notation: Operand1 op Operand2 We have rules to indicate which operations take precedence over others, and we often use parentheses to override those rules. It is also quite possible to write arithmetic expressions using postfix notation: Operand1 Operand2 op With postfix notation, it is possible to use a stack to find the overall value of an infix expression by first converting it to postfix notation. Example: Suppose we have this infix expression Q: 5 * ( 6 + 2 ) - 12 / 4 The equivalent postfix expression P is: 5 6 2 + * 12 4 / - This discussion assumes all our operations are binary operations (2 arguments each). Notice that we also sometimes use unary operations such as ++ or -- or the unary + and -. We are not including the possibility of array elements in this discussion. (The subscript can be an expression which would have to be evaluated.) One way to think of an expression is as a list or sequence of items, each of which is a left parenthesis, right parenthesis, argument, or operator. An argument can be a constant or the name of a variable. Presumably it would be necessary at some point to replace each variable with its value. There are two algorithms involved. One converts an infix expression to postfix form, and the other evaluates a postfix expression. Each uses a stack.","title":"Using a Stack to Evaluate an Expression"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/#transform-an-infix-expression-to-postfix-notation","text":"Suppose Q is an arithmetic expression in infix notation. We will create an equivalent postfix expression P by adding items to on the right of P. The new expression P will not contain any parentheses. We will use a stack in which each item may be a left parenthesis or the symbol for an operation. Start with an empty stack. We scan Q from left to right. While (we have not reached the end of Q) If (an operand is found) Add it to P End-If If (a left parenthesis is found) Push it onto the stack End-If If (a right parenthesis is found) While (the stack is not empty AND the top item is not a left parenthesis) Pop the stack and add the popped value to P End-While Pop the left parenthesis from the stack and discard it End-If If (an operator is found) While (the stack is not empty AND the top of the stack is not a left parenthesis AND precedence of the operator <= precedence of the top of the stack) Pop the stack and add the top value to P End-While Push the operator onto the stack End-If End-While While (the stack is not empty) Pop the stack and add the popped value to P End-While Notes: At the end, if there is still a left parenthesis at the top of the stack, or if we find a right parenthesis when the stack is empty, then Q contained unbalanced parentheses and is in error.","title":"Transform an infix expression to postfix notation"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/#evaluate-a-postfix-expression","text":"Suppose P is an arithmetic expression in postfix notation. We will evaluate it using a stack to hold the operands. Start with an empty stack. We scan P from left to right. While (we have not reached the end of P) If an operand is found push it onto the stack End-If If an operator is found Pop the stack and call the value A Pop the stack and call the value B Evaluate B op A using the operator just found. Push the resulting value onto the stack End-If End-While Pop the stack (this is the final value) Notes: At the end, there should be only one element left on the stack. This assumes the postfix expression is valid.","title":"Evaluate a postfix expression"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/#how-can-this-be-implemented","text":"Work like this is usually done by an assembler, compiler or interpreter. A programmer uses an expression in her or her code, and evaluating it is someone else's problem. Suppose it is our problem (maybe we are writing an interpreter). The interpreter is reading a line at a time from a file as a string, such as A = ((B + C) / 3 - 47 % E) * (F + 8) The string needs to be parsed--that is, we need to break it up into substrings, each of which is one meaningful part. These substrings are often called tokens. The tokens are separated by spaces, in many cases, but also a token ends if we find a left or right parenthesis or the symbol for an operator. Thus for instance, in the above example, we have \"E)\", and this consists of two tokens \"E\" and \")\". Bear in mind that the symbol for an operator can be more than one character. We then have a list of tokens, perhaps in an array or a linked list. Somewhere we will have an Evaluate function which takes such a list as an argument and returns a numeric value.","title":"How can this be implemented?"},{"location":"Algorithms/Using_a_Stack_to_Evaluate_an_Expression/#a-java-implementation","text":"/** * A perfect calculator * <p> * Dijkstra\u2019s Two-Stack Algorithm for Expression Evaluation * <p> * Reference: * http://faculty.cs.niu.edu/~hutchins/csci241/eval.htm * https://en.wikipedia.org/wiki/Shunting_yard_algorithm * Discrete mathmatics and its application 7th --> 11.3 Tree Travesal * * <p> * % java Calculator * 2 + ( 3 + 4 ) * ( 5 * 6 ) * 212.0 * <p> * 1 + ( 2 + 3 ) * ( 4 * 5 ) * 101.0 * <p> * ( 1 + sqrt( 5.0+4*3+sqrt(3+30*2) ) ) / 2.0 * 2.996860725651001 * <p> * ( 1 + sqrt ( 5.0 ) ) / 2.0 * 1.618033988749895 */ import java.util.ArrayList; import java.util.List; import java.util.Map; import java.util.Scanner; import java.util.Stack; import java.util.TreeMap; public class Calculator { // key is operator, value is precedence private final static Map<String, Integer> OPERATOR_MAP = new TreeMap<>(); static { // <Operator, Precedence> OPERATOR_MAP.put(\"+\", 1); OPERATOR_MAP.put(\"-\", 1); OPERATOR_MAP.put(\"*\", 2); OPERATOR_MAP.put(\"/\", 2); OPERATOR_MAP.put(\"^\", 3); // power OPERATOR_MAP.put(\"sqrt\", 4); OPERATOR_MAP.put(\"sin\", 4); OPERATOR_MAP.put(\"cos\", 4); OPERATOR_MAP.put(\"log\", 4); //natural logarithm } public Calculator() { } public double evaluate(String expression) { if (expression == null || expression.length() == 0) { throw new IllegalArgumentException(\"empty expression\"); } return evaluatePostfix(infixToPostfix(tokenizeExpression(expression))); } private List<String> tokenizeExpression(String expression) { List<String> infixQ = new ArrayList<>(); StringBuilder buf = new StringBuilder(); int len = expression.length(); for (int i = 0; i < len; i++) { char c = expression.charAt(i); if (Character.isWhitespace(c)) { if (buf.length() > 0) { infixQ.add(buf.toString()); buf = new StringBuilder(); } continue; } if (isSymbol(c)) { if (buf.length() > 0) { infixQ.add(buf.toString()); buf = new StringBuilder(); } infixQ.add(String.valueOf(c)); } else buf.append(c); } if (buf.length() > 0) infixQ.add(buf.toString()); return infixQ; } /** * Transform an infix queue to postfix queue * * @param infixQ * @return */ private List<String> infixToPostfix(List<String> infixQ) { if (infixQ == null || infixQ.isEmpty()) { throw new IllegalArgumentException(\"empty infixQ\"); } List<String> postfixQ = new ArrayList<>(); //operator stack , a stack in which each item may be a left parenthesis or the symbol for an operation. Stack<String> stack = new Stack<String>(); for (String token : infixQ) { //If (an operand is found) Add it to P if (isNumeric(token)) { postfixQ.add(token); } else if (token.equals(\"(\")) { stack.push(token); } else if (token.equals(\")\")) { while (!stack.isEmpty() && !stack.peek().equals(\"(\")) { postfixQ.add(stack.pop()); } //Pop the left parenthesis from the stack and discard it if (stack.isEmpty() || !stack.pop().equals(\"(\")) { throw new IllegalArgumentException(\"The infixQ contained unbalanced parentheses \"); } } else if (isOperator(token)) { while (!stack.isEmpty() && !stack.peek().equals(\"(\") && precedence(stack.peek()) >= precedence(token)) { postfixQ.add(stack.pop()); } stack.push(token); } else { throw new IllegalArgumentException(\"Invalid token found:\" + token); } } while (!stack.isEmpty()) { String op = stack.pop(); if (!op.equals(\"(\")) postfixQ.add(op); else throw new IllegalArgumentException(\"The infixQ contained unbalanced parentheses \"); } return postfixQ; } private static boolean isOperator(String token) { return OPERATOR_MAP.containsKey(token); } private static boolean isSymbol(char c) { return c == '+' || c == '-' || c == '*' || c == '/' || c == '^' || c == '(' || c == ')' || c == ','; } /** * Evaluate a postfix queue * * @param postfixQ * @return */ private Double evaluatePostfix(List<String> postfixQ) { if (postfixQ == null || postfixQ.isEmpty()) { throw new IllegalArgumentException(\"empty postfixQ\"); } //operand stack, a stack to hold the operands. Stack<Double> stack = new Stack<>(); for (String token : postfixQ) { //If an operand is found push it onto the stack if (isNumeric(token)) { stack.push(Double.parseDouble(token)); } else if (isOperator(token)) { //If an operator is found double v = stack.pop(); switch (token) { case \"+\": v = stack.pop() + v; break; case \"-\": v = stack.pop() - v; break; case \"*\": v = stack.pop() * v; break; case \"/\": v = stack.pop() / v; break; case \"^\": v = Math.pow(stack.pop(), v); break; case \"sqrt\": v = Math.sqrt(v); break; case \"sin\": v = Math.sin(degreeToRadian(v)); break; case \"cos\": v = Math.cos(degreeToRadian(v)); break; case \"log\": v = Math.log(v); break; default: break; } stack.push(v); } else { throw new IllegalArgumentException(\" invalid token found:\" + token); } } //At the end, there should be only one element left on the stack. if (stack.size() != 1) { throw new IllegalArgumentException(\"Invalid postfix\"); } return stack.pop(); } private int precedence(String token) { return OPERATOR_MAP.get(token); } private static double degreeToRadian(double degree) { return degree / 180 * Math.PI; } private static boolean isNumeric(String token) { if (token == null) { return false; } try { Double.parseDouble(token); } catch (NumberFormatException nfe) { return false; } return true; } /** * match a number with optional '-' and decimal. */ private static boolean isNumeric2(String str) { return str.matches(\"-?\\\\d+(\\\\.\\\\d+)?\"); } private double debug(String expression) { System.out.println(\"---expression---\"); System.out.println(expression); List<String> infixQ = tokenizeExpression(expression); System.out.println(\"---tokenize---\"); for (String token : infixQ) { System.out.print(token + \" \"); } System.out.println(\"\\n---transform to postfix---\"); List<String> postfixQ = infixToPostfix(infixQ); for (String token : postfixQ) { System.out.print(token + \" \"); } System.out.println(); return evaluatePostfix(postfixQ); } private static void simulate() { // BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); // String line = br.readLine(); Calculator cal = new Calculator(); Scanner scanner = new Scanner(System.in, \"UTF-8\"); while (scanner.hasNextLine()) { String expression = scanner.nextLine().trim(); if (expression.length() == 0) continue; if (expression.equals(\"quit\")) break; System.out.println(cal.evaluate(expression)); } } public static void main(String[] args) { // simulate(); test1(); // test2(); // testCorrect(); } private static void test1() { String expression = \"3+4*2-2^3\"; //String expression = \"3 4 2 * + 1 - \"; // String expression = \"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\"; Calculator cal = new Calculator(); System.out.println(\"value:\" + cal.debug(expression)); } private static void test2() { List<String> expressions = new ArrayList<>(); expressions.add(\"(8+9)^2+(8-4)/3\"); expressions.add(\"(2+sqrt(5+4))\"); expressions.add(\"2 + ( 3 + 4 ) * ( 5 * 6 )\"); expressions.add(\"1 + ( 2 + 3 ) * ( 4 * 5 )\"); expressions.add(\"(1 + sqrt(5.0+4*3+sqrt(30*2+3)) ) / 2.0\"); expressions.add(\"(1 + log( 5.0+4*3+sqrt(30*2+3) ) ) / 2.0\"); expressions.add(\"(1 + sqrt ( 5.0 ) ) / 2.0\"); expressions.add(\"6*sin(30)\"); expressions.add(\"6*(5+4+3)\"); expressions.add(\"2*(5+4+3+2*2*2+1)\"); expressions.add(\"3 + 4 * 2 - 1\"); expressions.add(\"3 + 4 * (2 - 1)\"); expressions.add(\"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\"); expressions.add(\"1 + 3 + 2 * 4 * (2 - 1)\"); // expressions.add(\"\"); Calculator cal = new Calculator(); for (String expression : expressions) { System.out.println(expression + \" = \" + cal.evaluate(expression)); } } private static void testCorrect() { Calculator cal = new Calculator(); if (cal.evaluate(\"(8+9)^2+(8-4)/3\") != (Math.pow(8 + 9, 2) + (8.0 - 4.0) / 3)) { throw new Error(\"false\"); } if (cal.evaluate(\"(2+sqrt(5+4))\") != ((2 + Math.sqrt(5 + 4)))) { throw new Error(\"false\"); } if (cal.evaluate(\"2 + ( 3 + 4 ) * ( 5 * 6 )\") != (2 + (3 + 4) * (5 * 6))) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + sqrt(5.0+4*3+sqrt(30*2+3)) ) / 2.0\") != ((1 + Math.sqrt(5.0 + 4 * 3 + Math.sqrt(30 * 2 + 3))) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + log( 5.0+4*3+sqrt(30*2+3) ) ) / 2.0\") != ((1 + Math.log(5.0 + 4 * 3 + Math.sqrt(30 * 2 + 3))) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"(1 + sqrt ( 5.0 ) ) / 2.0\") != ((1 + Math.sqrt(5.0)) / 2.0)) { throw new Error(\"false\"); } if (cal.evaluate(\"6*sin(30)\") != (6 * Math.sin(degreeToRadian(30)))) { throw new Error(cal.evaluate(\"6*sin(30)\") + \" = \" + (6 * Math.sin(degreeToRadian(30)))); } if (cal.evaluate(\"6*(5+4+3)\") != (6 * (5 + 4 + 3))) { throw new Error(\"false\"); } if (cal.evaluate(\"2*(5+4+3+2*2*2+1)\") != (2 * (5 + 4 + 3 + 2 * 2 * 2 + 1))) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * 2 - 1\") != (3 + 4 * 2 - 1)) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * (2 - 1)\") != (3 + 4 * (2 - 1))) { throw new Error(\"false\"); } if (cal.evaluate(\"3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\") != (3 + 4 * 2 / Math.pow(Math.pow(1 - 5, 2), 3))) { throw new Error(\"false\"); } if (cal.evaluate(\"1 + 3 + 2 * 4 * (2 - 1)\") != (1 + 3 + 2 * 4 * (2 - 1))) { throw new Error(\"false\"); } System.out.println(\"Pass!\"); } } http://faculty.cs.niu.edu/\\~hutchins/csci241/eval.htm https://en.wikipedia.org/wiki/Shunting_yard_algorithm https://www.geeksforgeeks.org/expression-evaluation/ \\","title":"A java implementation"},{"location":"Editor/Sublime/","text":"Multiple Selection with the Keyboard Adding a Line To add the line above or below to the selection, use: Windows/Linux: Ctrl+Alt+\u2b06 and Ctrl+Alt+\u2b07 Mac: \u2303+\u21e7+\u2b06 and \u2303+\u21e7+\u2b07 Navigate between files and edit locations \u2303- and \u2303\u21e7- : navigate between files and edit locations. Splitting the Selection into Lines Select a block of lines, and then split it into many selections, one per line, using: Windows/Linux: Ctrl+Shift+L Mac: \u21e7+\u2318+L Quick Add Next To add the next occurrence of the current word to the selection, use Quick Add Next, which is bound to: Windows/Linux: Ctrl+D Mac: \u2318+D Individual occurrences can be skipped via Quick Skip Next, which is bound to: Windows/Linux: Ctrl+K, Ctrl+D Mac: \u2318+K, \u2318+D Find All To add all occurrences of the current word to the selection, use Find All: Windows/Linux: Alt+F3 Mac: \u2303+\u2318+G Undo Selection If you go too far, use Undo Selection to step backwards: Windows/Linux: Ctrl+U Mac: \u2318+U Single Selection To go from multiple selections to a single selection, press Esc. Column Selection Column selection can be used to select a rectangular area of a file. Column selection doesn\u2019t operate via a separate mode, instead it makes use of multiple selections. You can use additive selections to select multiple blocks of text, or subtractive selections to remove a block. Using the Mouse Different mouse buttons are used on each platform: MAC Left Mouse Button + \u2325 OR: Middle Mouse Button Add to selection: \u2318 Subtract from selection: \u21e7+\u2318 WINDOWS Right Mouse Button + Shift OR: Middle Mouse Button Add to selection: Ctrl Subtract from selection: Alt LINUX Right Mouse Button + Shift Add to selection: Ctrl Subtract from selection: Alt Using the Keyboard MAC Ctrl+Shift+\u2b06 Ctrl+Shift+\u2b07 WINDOWS Ctrl+Alt+\u2b06 Ctrl+Alt+\u2b07 LINUX Alt+Shift+\u2b06 Alt+Shift+\u2b07 Index Find file Type Ctrl+P on Windows and Linux, Cmd+P on macOS. and type the name of the file you're looking for. If there are multiple hits, you can select the appropriate file using cursor keys. It also supports powerful operators, that let you jump to specific parts inside a file. Examples: file.js opens that file :100 jumps to line 100 in current file file.js:100 jumps to line 100 in file.js file.js@loadFile : jumps to a loadFile() in file.js Search DEFINITION inside the current file Windows/Linux: Ctrl+R Mac: \u2318+R GOTO DEFINITION Invoking Goto Symbol in Project to fuzzy-search through symbols Windows/Linux: Ctrl+Shift+R Mac: \u2318+Shift+R Hovering over a word to show the Goto Definition Popup Ctrl-->Click the word-->Goto Definition Executing Goto Definition for the word under the caret F12 Executing Goto Reference for the word under the caret Shift+F12 All of the Goto commands can also be invoked via the \"Goto menu\". Jump to line Ctrl-g https://www.sublimetext.com/docs/","title":"Sublime"},{"location":"Editor/Sublime/#multiple-selection-with-the-keyboard","text":"","title":"Multiple Selection with the Keyboard"},{"location":"Editor/Sublime/#adding-a-line","text":"To add the line above or below to the selection, use: Windows/Linux: Ctrl+Alt+\u2b06 and Ctrl+Alt+\u2b07 Mac: \u2303+\u21e7+\u2b06 and \u2303+\u21e7+\u2b07","title":"Adding a Line"},{"location":"Editor/Sublime/#navigate-between-files-and-edit-locations","text":"\u2303- and \u2303\u21e7- : navigate between files and edit locations.","title":"Navigate between files and edit locations"},{"location":"Editor/Sublime/#splitting-the-selection-into-lines","text":"Select a block of lines, and then split it into many selections, one per line, using: Windows/Linux: Ctrl+Shift+L Mac: \u21e7+\u2318+L","title":"Splitting the Selection into Lines"},{"location":"Editor/Sublime/#quick-add-next","text":"To add the next occurrence of the current word to the selection, use Quick Add Next, which is bound to: Windows/Linux: Ctrl+D Mac: \u2318+D Individual occurrences can be skipped via Quick Skip Next, which is bound to: Windows/Linux: Ctrl+K, Ctrl+D Mac: \u2318+K, \u2318+D","title":"Quick Add Next"},{"location":"Editor/Sublime/#find-all","text":"To add all occurrences of the current word to the selection, use Find All: Windows/Linux: Alt+F3 Mac: \u2303+\u2318+G","title":"Find All"},{"location":"Editor/Sublime/#undo-selection","text":"If you go too far, use Undo Selection to step backwards: Windows/Linux: Ctrl+U Mac: \u2318+U","title":"Undo Selection"},{"location":"Editor/Sublime/#single-selection","text":"To go from multiple selections to a single selection, press Esc.","title":"Single Selection"},{"location":"Editor/Sublime/#column-selection","text":"Column selection can be used to select a rectangular area of a file. Column selection doesn\u2019t operate via a separate mode, instead it makes use of multiple selections. You can use additive selections to select multiple blocks of text, or subtractive selections to remove a block.","title":"Column Selection"},{"location":"Editor/Sublime/#using-the-mouse","text":"Different mouse buttons are used on each platform: MAC Left Mouse Button + \u2325 OR: Middle Mouse Button Add to selection: \u2318 Subtract from selection: \u21e7+\u2318 WINDOWS Right Mouse Button + Shift OR: Middle Mouse Button Add to selection: Ctrl Subtract from selection: Alt LINUX Right Mouse Button + Shift Add to selection: Ctrl Subtract from selection: Alt","title":"Using the Mouse"},{"location":"Editor/Sublime/#using-the-keyboard","text":"MAC Ctrl+Shift+\u2b06 Ctrl+Shift+\u2b07 WINDOWS Ctrl+Alt+\u2b06 Ctrl+Alt+\u2b07 LINUX Alt+Shift+\u2b06 Alt+Shift+\u2b07","title":"Using the Keyboard"},{"location":"Editor/Sublime/#index","text":"","title":"Index"},{"location":"Editor/Sublime/#find-file","text":"Type Ctrl+P on Windows and Linux, Cmd+P on macOS. and type the name of the file you're looking for. If there are multiple hits, you can select the appropriate file using cursor keys. It also supports powerful operators, that let you jump to specific parts inside a file. Examples: file.js opens that file :100 jumps to line 100 in current file file.js:100 jumps to line 100 in file.js file.js@loadFile : jumps to a loadFile() in file.js","title":"Find file"},{"location":"Editor/Sublime/#search-definition-inside-the-current-file","text":"Windows/Linux: Ctrl+R Mac: \u2318+R","title":"Search DEFINITION inside the current file"},{"location":"Editor/Sublime/#goto-definition","text":"Invoking Goto Symbol in Project to fuzzy-search through symbols Windows/Linux: Ctrl+Shift+R Mac: \u2318+Shift+R Hovering over a word to show the Goto Definition Popup Ctrl-->Click the word-->Goto Definition Executing Goto Definition for the word under the caret F12 Executing Goto Reference for the word under the caret Shift+F12 All of the Goto commands can also be invoked via the \"Goto menu\".","title":"GOTO DEFINITION"},{"location":"Editor/Sublime/#jump-to-line-ctrl-g","text":"https://www.sublimetext.com/docs/","title":"Jump to line Ctrl-g"},{"location":"Editor/VSCode/","text":"find file Ctrl+P (Cmd+P on Mac) Ctrl + Tab : switch between opened files \u2303- and \u2303\u21e7- : navigate between files and edit locations. Go to Definition If a language supports it, you can go to the definition of a symbol by pressing F12 . If you press Ctrl and hover over a symbol, a preview of the declaration will appear. You can jump to the definition with Ctrl+Click or open the definition to the side with Ctrl+Alt+Click . Go to References Shift + F12 Peek Definition Alt+F12 You can navigate between different references in the peeked editor and make quick edits right there. Clicking on the peeked editor filename or double-clicking in the result list will open the reference in the outer editor. Additionally, the peek window is closed if you press Escape or double-click in the peek editor region. Go to Symbol in File On Windows/Ubuntu: Ctrl + Shift + o On Mac: Command + Shift+ o You can group the symbols by kind by adding a colon, @: . Go to Symbol in Workspace On Windows/Ubuntu: Ctrl + t On Mac: Command + t Navigate to a Specific Line On Windows/Ubuntu: Ctrl + g On Mac: Ctrl + g or Ctrl + p delete line On Windows/Ubuntu: Ctrl + x On Mac: Command + x or Cmd+Shift+k Delete Previous Word On Windows/Ubuntu: Ctrl + backspace On Mac: Command + delete join lines On Mac: Ctrl+J On Ubuntu, Windows: Open keyboard shortcuts from File > Preferences > Keyboard shortcuts, and bind editor.action.joinLines to a shortcut of your choice. Copy Line Up/Down On Windows: Shift + Alt + Up/Down On Mac: Shift + Option + Up/Down On Ubuntu: Ctrl + Shift + Alt + Up/Down Select in Words On Windows/Ubuntu: Ctrl + Shift + Right arrow / Left arrow On Mac: Command + Shift + Right arrow / Left arrow This is very useful to select words faster and edit as required. Add Cursor Above/Below On Windows / Ubuntu: Ctrl + Alt + Up arrow / Down arrow On Mac: Command + Alt + Up arrow / Down arrow You can select blocks of text by using the above command while you drag your mouse. A separate cursor will be added to the end of each selected line. Select Word On Windows: Ctrl+ d On Mac: Command + d On Ubuntu: Ctrl+ d If you hit command + d more than once, you\u2019ll add another occurrence of the same keyword to your selection. Column (Box) Selection On Windows / Ubuntu: Shift + Alt On Mac: Shift + Option You can select blocks of text by using the above command while you drag your mouse. A separate cursor will be added to the end of each selected line. Code Formatting This shortcut helps to indent the code as already set up in the editor settings. Tip : Use this in the end or the start. I prefer using it when I\u2019m done with the code in a file. On Windows: Shift + Alt + F On Mac: Shift + Option + F On Ubuntu: Ctrl + Shift + I Opening and Closing the Sidebar On Windows/Ubuntu: Ctrl+ b On Mac: Command + b Sometimes when the file has a long width or in case of the split editor closing, sidebar helps a lot. https://code.visualstudio.com/docs/introvideos/basics https://code.visualstudio.com/docs/editor/editingevolved https://betterprogramming.pub/20-vs-code-shortcuts-for-fast-coding-cheatsheet-10b0e72fd5d","title":"VSCode"},{"location":"Editor/VSCode/#find-file","text":"Ctrl+P (Cmd+P on Mac) Ctrl + Tab : switch between opened files \u2303- and \u2303\u21e7- : navigate between files and edit locations.","title":"find file"},{"location":"Editor/VSCode/#go-to-definition","text":"If a language supports it, you can go to the definition of a symbol by pressing F12 . If you press Ctrl and hover over a symbol, a preview of the declaration will appear. You can jump to the definition with Ctrl+Click or open the definition to the side with Ctrl+Alt+Click .","title":"Go to Definition"},{"location":"Editor/VSCode/#go-to-references","text":"Shift + F12","title":"Go to References"},{"location":"Editor/VSCode/#peek-definition","text":"Alt+F12 You can navigate between different references in the peeked editor and make quick edits right there. Clicking on the peeked editor filename or double-clicking in the result list will open the reference in the outer editor. Additionally, the peek window is closed if you press Escape or double-click in the peek editor region.","title":"Peek Definition"},{"location":"Editor/VSCode/#go-to-symbol-in-file","text":"On Windows/Ubuntu: Ctrl + Shift + o On Mac: Command + Shift+ o You can group the symbols by kind by adding a colon, @: .","title":"Go to Symbol in File"},{"location":"Editor/VSCode/#go-to-symbol-in-workspace","text":"On Windows/Ubuntu: Ctrl + t On Mac: Command + t","title":"Go to Symbol in Workspace"},{"location":"Editor/VSCode/#navigate-to-a-specific-line","text":"On Windows/Ubuntu: Ctrl + g On Mac: Ctrl + g or Ctrl + p","title":"Navigate to a Specific Line"},{"location":"Editor/VSCode/#delete-line","text":"On Windows/Ubuntu: Ctrl + x On Mac: Command + x or Cmd+Shift+k","title":"delete line"},{"location":"Editor/VSCode/#delete-previous-word","text":"On Windows/Ubuntu: Ctrl + backspace On Mac: Command + delete","title":"Delete Previous Word"},{"location":"Editor/VSCode/#join-lines","text":"On Mac: Ctrl+J On Ubuntu, Windows: Open keyboard shortcuts from File > Preferences > Keyboard shortcuts, and bind editor.action.joinLines to a shortcut of your choice.","title":"join lines"},{"location":"Editor/VSCode/#copy-line-updown","text":"On Windows: Shift + Alt + Up/Down On Mac: Shift + Option + Up/Down On Ubuntu: Ctrl + Shift + Alt + Up/Down","title":"Copy Line Up/Down"},{"location":"Editor/VSCode/#select-in-words","text":"On Windows/Ubuntu: Ctrl + Shift + Right arrow / Left arrow On Mac: Command + Shift + Right arrow / Left arrow This is very useful to select words faster and edit as required.","title":"Select in Words"},{"location":"Editor/VSCode/#add-cursor-abovebelow","text":"On Windows / Ubuntu: Ctrl + Alt + Up arrow / Down arrow On Mac: Command + Alt + Up arrow / Down arrow You can select blocks of text by using the above command while you drag your mouse. A separate cursor will be added to the end of each selected line.","title":"Add Cursor Above/Below"},{"location":"Editor/VSCode/#select-word","text":"On Windows: Ctrl+ d On Mac: Command + d On Ubuntu: Ctrl+ d If you hit command + d more than once, you\u2019ll add another occurrence of the same keyword to your selection.","title":"Select Word"},{"location":"Editor/VSCode/#column-box-selection","text":"On Windows / Ubuntu: Shift + Alt On Mac: Shift + Option You can select blocks of text by using the above command while you drag your mouse. A separate cursor will be added to the end of each selected line.","title":"Column (Box) Selection"},{"location":"Editor/VSCode/#code-formatting","text":"This shortcut helps to indent the code as already set up in the editor settings. Tip : Use this in the end or the start. I prefer using it when I\u2019m done with the code in a file. On Windows: Shift + Alt + F On Mac: Shift + Option + F On Ubuntu: Ctrl + Shift + I","title":"Code Formatting"},{"location":"Editor/VSCode/#opening-and-closing-the-sidebar","text":"On Windows/Ubuntu: Ctrl+ b On Mac: Command + b Sometimes when the file has a long width or in case of the split editor closing, sidebar helps a lot. https://code.visualstudio.com/docs/introvideos/basics https://code.visualstudio.com/docs/editor/editingevolved https://betterprogramming.pub/20-vs-code-shortcuts-for-fast-coding-cheatsheet-10b0e72fd5d","title":"Opening and Closing the Sidebar"},{"location":"Editor/online%20editor/","text":"https://replit.com/ https://godbolt.org/ web https://developer.mozilla.org/en-US/play","title":"Online editor"},{"location":"Editor/online%20editor/#web","text":"https://developer.mozilla.org/en-US/play","title":"web"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","text":"\u5e2e\u52a9 vimtutor \u67e5\u770b\u4f7f\u7528\u8bf4\u660e :help feature \u83b7\u53d6feature \u7684\u76f8\u5173\u4fe1\u606f :help doc-file-list \u83b7\u53d6\u5e2e\u52a9\u6587\u4ef6\u7684\u5b8c\u6574\u5217\u8868 CONTROL+] \u6253\u5f00\u94fe\u63a5 CONTROL+o \u8fd4\u56de :q \u9000\u51fa\u5e2e\u52a9\u6587\u6863 Mode Vim is a modal editor. It has a normal mode, visual mode ,insert mode, and other modes. Undo/Redo u: undo last change Ctrl_R: Redo \u6d4f\u89c8 ctrl+d \u4e0b\u7ffb\u534a\u5c4f d=down ctrl+u \u4e0a\u7ffb\u534a\u5c4f u=up ctrl+b\u4e0a\u7ffb\u4e00\u9875 b=backward ctrl+f\u4e0b\u7ffb\u4e00\u9875 f=forward \u6eda\u4e00\u884c ctrl-e ctrl-y zz \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u4e2d\u592e zt \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u6700\u4e0a\u4e00\u884c t=top zb \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u6700\u4e0b\u4e00\u884c b=bottom \u5149\u6807\u79fb\u52a8 w \u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 b \u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 $ \u79fb\u52a8\u5230\u884c\u5c3e 0\u6216^ \u79fb\u52a8\u5230\u884c\u9996 gg \u79fb\u52a8\u5230\u6587\u6863\u5934 G \u79fb\u52a8\u5230\u6587\u6863\u5c3e \u884c\u53f7\uff0bG \u8df3\u8f6c\u5230\u67d0\u884c\uff0c\u4f8b\u5982\u5230\u7b2c6\u884c 6G :\u884c\u53f7 , \u8df3\u8f6c\u5230\u67d0\u884c\uff0c \u4f8b\u5982\u5230\u7b2c6\u884c :6 ( \u6216 { \u79fb\u52a8\u5230\u6bb5\u843d\u5934 ) \u6216 } \u79fb\u52a8\u5230\u6bb5\u843d\u5c3e e \u79fb\u52a8\u5230\u5f53\u524d\u5b57\u7684\u5c3e\u90e8 ge\u79fb\u52a8\u5230\u524d\u4e00\u4e2a\u5b57\u7684\u5c3e\u90e8 % \u8df3\u8f6c\u5230\u914d\u5bf9\u7684\u7b26\u53f7\u4e0a\uff0c\u914d\u5bf9\u7b26\u53f7\u4f8b\u5982: \"\", (), <>, {} [[ \u8df3\u8f6c\u5230\u5f53\u524d\u6216\u8005\u4e0a\u4e00\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u5f00\u5934\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) ][ \u8df3\u8f6c\u5230\u5f53\u524d\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u7ed3\u5c3e\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) ]] \u8df3\u8f6c\u5230\u4e0b\u4e00\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u5f00\u5934\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) [/ \u8df3\u5230\u6ce8\u91ca\u5f00\u5934\uff08\u53ea\u5bf9/ /\u6ce8\u91ca\u6709\u6548\uff09 ]/ \u8df3\u5230\u6ce8\u91ca\u7ed3\u5c3e\uff08\u53ea\u5bf9/ /\u6ce8\u91ca\u6709\u6548\uff09 gD \u8df3\u8f6c\u5230\u5f53\u524d\u6587\u4ef6\u5185\u6807\u8bc6\u7b26\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u53ef\u7528\u4e8e\u8df3\u8f6c\u5230\u5168\u90e8\u53d8\u91cf\u7684\u5b9a\u4e49\u5904\uff1b\u67e5\u627e\u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u8981\u662f\u591a\u4e2a\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u8be5\u5c40\u90e8\u53d8\u91cf\uff0c\u4f7f\u7528gD\u8fdb\u884c\u67e5\u627e\uff0c\u627e\u5230\u7684\u53d8\u91cf\u5b9a\u4e49\u53ef\u80fd\u4e0d\u662f\u4f60\u9700\u8981\u7684 gd \u8df3\u8f6c\u5230\u5f53\u524d\u51fd\u6570\u5185\u6807\u8bc6\u7b26\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u53ef\u7528\u4e8e\u8df3\u8f6c\u5230\u5c40\u90e8\u53d8\u91cf\u7684\u5b9a\u4e49\u5904 '' \u8df3\u8f6c\u5230\u5149\u6807\u4e0a\u6b21\u505c\u9760\u7684\u5730\u65b9, \u662f\u4e24\u4e2a ' , \u800c\u4e0d\u662f\u4e00\u4e2a \" \u590d\u5236\u7c98\u8d34 \u590d\u5236=Yank, \u5220\u9664=Delete, \u7c98\u8d34=Put Yank(Y) \u590d\u5236\u5230\u901a\u7528\u7f13\u51b2\u533a Delete\uff08D\uff09\u5220\u9664\u5e76\u653e\u5230\u901a\u7528\u7f13\u51b2\u533a Put(P) \u628a\u901a\u7528\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u63d2\u5165\u7684\u5f53\u524d\u6587\u672c \u4f8b\u5982\uff1a yy \u590d\u5236\u5f53\u524d\u884c n+yy \u590d\u5236\u5f53\u524d\u884c\u548c\u540e\u9762n-1\u884c gg + yG \u590d\u5236\u5168\u90e8 \"ayy \u590d\u5236\u5230\u7f13\u51b2\u533aa \"ap \u7c98\u8d34\u7f13\u51b2\u533aa\u5230\u6587\u672c Delete\u547d\u4ee4\u7684\u6a21\u5f0f\u540cYank\u4e00\u6837 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u5173\u4e8e\u5bc4\u5b58\u5668(registers)\u7684\u64cd\u4f5c\u3002 \u201c\uff0b\u5b57\u6bcd\uff0byy \u628a\u5f53\u524d\u884c\u590d\u5236\u5230\u5b57\u6bcd\u7684\u547d\u540d\u5bc4\u5b58\u5668, \u201c\uff0b\u5b57\u6bcd\uff0bp \u628a\u5bf9\u5e94\u5b57\u6bcd\u540d\u5b57\u7684\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u9ecf\u8d34\u5230\u5f53\u524d\u6587\u6863\u3002 \u66f4\u591a\u5173\u4e8e\u5bc4\u5b58\u5668\u7684\u4ecb\u7ecd\u53c2\u89c1 :help registers \u7f16\u8f91 \u5220\u9664 d+\u8981\u5220\u9664\u7684\u4f4d\u7f6e\uff0c \u4f8b\u5982\uff1a dw \u5220\u9664\u5230\u5b57\u7684\u672b\u5c3e daw \u5220\u9664\u4e00\u4e2a\u5355\u8bcd d3aw \u5220\u96643\u4e2a\u5355\u8bcd dw \u5220\u9664\u5230\u5b57\u7684\u5c3e\u90e8 db \u5220\u9664\u5230\u5b57\u7684\u5f00\u59cb dd \u5220\u9664\u4e00\u884c x \u6216 dl \u5220\u9664\u5355\u4e2a\u5b57\u7b26 d0 \u6216 d^ \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u884c\u7684\u5934\u90e8 d$ \u6216 D \u5220\u9664\u5230\u884c\u5c3e d) \u6216 d} \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u6bb5\u843d\u5c3e d( \u6216 d{ \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u6bb5\u843d\u5934 d/text \u5220\u9664\u5230text\u5355\u8bcd\u7684\u4e0b\u4e00\u6b21\u51fa\u73b0 cw \u5220\u9664\u5230\u5b57\u7684\u672b\u5c3e\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f \u63d2\u5165\u6a21\u5f0f\u4e0b, ctrl+H \u5b57\u7b26\u5220\u9664 ctrl+U \u884c\u5220\u9664 ctrl+W \u5b57\u5220\u9664 \u5bf9\u914d\u5bf9\u7b26\u53f7\u5185\u7684\u5185\u5bb9\u8fdb\u884c\u64cd\u4f5c \u914d\u5bf9\u7b26\u53f7\u5305\u62ec \"\", (), {} \u7b49 \u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5bf9\u7b26\u53f7\u5185\u7684\u5185\u5bb9\u8fdb\u884c\u64cd\u4f5c\u3002 ci+\u7b26\u53f7 \u66f4\u6539\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 di+\u7b26\u53f7 \u5220\u9664\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 yi+\u7b26\u53f7 \u590d\u5236\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 vi+\u7b26\u53f7 \u9009\u4e2d\u8fd9\u4e9b\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 \u53e6\u5916\u5982\u679c\u628a\u4e0a\u9762\u7684 i \u6539\u6210 a \u53ef\u4ee5\u8fde\u914d\u5bf9\u7b26\u53f7\u4e00\u8d77\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u8981\u5220\u9664\u53cc\u5f15\u53f7\u5185 \"\" \u5185\u7684\u5185\u5bb9, 111\"222\"333 \uff0c \u5c06\u5149\u6807\u79fb\u5230\u53cc\u5f15\u53f7\u5185\uff0c\u6309\u4e0b di\" ,\u5220\u9664\u53cc\u5f15\u53f7\u5185\u7684\u5185\u5bb9\uff0c\u53d8\u6210 111\"\"333 \uff0c\u82e5\u8981\u8fde\u540c\u53cc\u5f15\u53f7\u4e00\u540c\u5220\u9664\uff0c\u5219\u8981\u6309\u4e0b da\" ,\u6587\u672c\u4f1a\u4fee\u6539\u4e3a\uff1a 111333 Select text inside a tag Tag is the tag in html or xml, for example <div> ... </div> , We can select a text within an html or xml tag by using visual selection v and text object it . Go to normal mode by pressing ESC Type vit from anywhere within the html or xml section This will visually select all text inside the tag. All other text objects can also be used to operate on the text inside the tag vit - select all text inside the tag cit - delete text inside the tag and place in insert mode dit - delete text inside the tag and remain in normal mode cat - delete around tag and place in insert mode dat - delete text around the tag and remain in normal mode \u683c\u5f0f\u5316 \\== \u683c\u5f0f\u5316\u5f53\u524d\u884c n+== \u683c\u5f0f\u5316\u5f53\u524d\u548c\u540e\u9762n-1\u884c gg=G \u6216\u8005 = \u683c\u5f0f\u5316\u5168\u6587 \u7f29\u8fdb \u63d2\u5165\u6a21\u5f0f\u4e0b\uff1a CTRL+T \u53f3\u7f29\u8fdb CTRL+D \u5de6\u7f29\u8fdb \u547d\u4ee4\u6a21\u5f0f\u4e0b\uff1a > \u589e\u52a0\u7f29\u8fdb, x> \u8868\u793a\u589e\u52a0\u4ee5\u4e0bx\u884c\u7684\u7f29\u8fdb < \u51cf\u5c11\u7f29\u8fdb, x< \u8868\u793a\u51cf\u5c11\u4ee5\u4e0bx\u884c\u7684\u7f29\u8fdb \u4ee3\u7801\u6ce8\u91ca \u65b9\u6cd5\u4e00 \u591a\u884c\u6ce8\u91ca\uff1a \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309 ctrl + v \u8fdb\u5165 visual block\u6a21\u5f0f\uff0c\u7136\u540e\u6309j\u6216k\u9009\u4e2d\u591a\u884c\uff0c\u628a\u9700\u8981\u6ce8\u91ca\u7684\u884c\u6807\u8bb0\u8d77\u6765\uff0c\u6309\u5927\u5199\u5b57\u6bcdI\uff0c\u518d\u63d2\u5165\u6ce8\u91ca\u7b26\uff0c\u4f8b\u5982 // \uff0c\u6309esc\u952e\u5c31\u4f1a\u5168\u90e8\u6ce8\u91ca\u4e86\u3002 \u53d6\u6d88\u591a\u884c\u6ce8\u91ca\uff1a \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309\u00b7ctrl + v\u00b7\u8fdb\u5165 visual block\u6a21\u5f0f\uff0c\u6309\u5b57\u6bcdl\u6a2a\u5411\u9009\u4e2d\u5217\u7684\u4e2a\u6570\uff0c\u4f8b\u5982 \u00b7//\u00b7 \u9700\u8981\u9009\u4e2d2\u5217\uff0c\u6309\u5b57\u6bcdj\uff0c\u6216 \u8005k\u9009\u4e2d\u6ce8\u91ca\u7b26\u53f7\uff0c\u6309d\u952e\u5c31\u53ef\u5220\u9664\u6ce8\u91ca\u7b26\u3002 \u65b9\u6cd5\u4e8c \u66ff\u6362\u547d\u4ee4 \u63d2\u5165\u6ce8\u91ca :\u8d77\u59cb\u884c\u53f7,\u7ed3\u675f\u884c\u53f7s/^/\u6ce8\u91ca\u7b26/g \u4f8b\u5982\uff1a :27,30s#^#//#g \u5c31\u662f\u572827 - 30\u884c\u6dfb\u52a0 // \u6ce8\u91ca` \u53d6\u6d88\u6ce8\u91ca \u00b7:\u8d77\u59cb\u884c\u53f7,\u7ed3\u675f\u884c\u53f7s/^\u6ce8\u91ca\u7b26//g\u00b7 \u4f8b\u5982\uff1a :27,30s#^//##g \u5c31\u662f\u572827 - 30\u884c\u5220\u9664 // \u6ce8\u91ca \u81ea\u52a8\u8865\u5168 crl+p \u548c crl+n \u66ff\u6362 \u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b :[g] [address] s/search-string/replacement-string[/option] \u5176\u4e2d addess\uff1a\u4ee3\u8868\u884c s: \u8868\u793a\u66ff\u6362\u5f53\u524d\u5b57\u7b26 S: \u8868\u793a\u66ff\u6362\u5f53\u524d\u884c ~: \u8868\u793a\u4fee\u6539\u5927\u5c0f\u5199 \u4f8b\u5982\uff1a :%s/<ten>/10/g \u5c06\u6240\u6709\u51fa\u73b0\u7684\u5b57ten\u66ff\u6362\u4e3a\u5b57\u7b26\u4e3210 :s/p1/p2/g \u5c06\u5f53\u524d\u884c\u4e2d\u6240\u6709p1\u5747\u7528p2\u66ff\u4ee3 :1,.s/p1/p2/g \u5c06\u5f53\u524d\u884c\u4e4b\u524d\u7684\u6240\u6709\u884c\u7684\u5b57\u7b26\u4e32p1\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32p2 :1,$s/p1/p2/g \u5c06\u6240\u6709\u51fa\u73b0\u7684\u5b57\u7b26\u4e32p1\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32p2 :g/chaper/s/ten/10/ \u5c06\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5305\u542b\u5b57\u7b26\u4e32chaper\u7684\u6240\u6709\u884c\u4e2d\u7684\u5b57\u7b26\u4e32ten\u66ff\u6362\u4e3a\u5b57\u7b26\u4e3210 :.,.+10s/every/each/g \u5c06\u51fa\u73b0\u7684\u4ece\u5f53\u524d\u884c\u5230\u540e\u7eed10\u884c\u5185\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32every\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32each :s/<short\\>/\"&\"/ \u5c06\u5f53\u524d\u884c\u4e2d\u7684\u5b57short\u66ff\u6362\u4e3a\"short\"(\u5373\u5c06\u5f53\u524d\u884c\u4e2d\u7684\u5b57short\u7528\u5f15\u53f7\u62ec\u8d77\u6765) :n1,n2s/p1/p2/g \u5c06\u7b2cn1\u81f3n2\u884c\u4e2d\u6240\u6709p1\u5747\u7528p2\u66ff\u4ee3 :n1,n2 co n3 \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u7b2cn3\u884c\u4e0b :n1,n2 m n3 \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u79fb\u81f3\u5230\u7b2cn3\u884c\u4e0b :n1,n2 d \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u5220\u9664 \u67e5\u627e /pattern \u4ece\u5149\u6807\u5f00\u59cb\u5904\u5411\u6587\u4ef6\u5c3e\u641c\u7d22pattern ?pattern \u4ece\u5149\u6807\u5f00\u59cb\u5904\u5411\u6587\u4ef6\u9996\u641c\u7d22pattern \u9f20\u6807\u79fb\u52a8\u7684\u4e00\u4e2a\u5355\u8bcd\u4e0a,\u6309 * \u5728\u5168\u6587\u4e2d\u67e5\u627e\u4e0e\u4e4b\u76f8\u540c\u7684\u5355\u8bcd n\uff1a\u5728\u540c\u4e00\u65b9\u5411\u91cd\u590d\u4e0a\u4e00\u6b21\u641c\u7d22\u547d\u4ee4\uff0cN\uff1a\u5728\u53cd\u65b9\u5411\u4e0a\u91cd\u590d\u4e0a\u4e00\u6b21\u641c\u7d22\u547d\u4ee4 \u6807\u8bb0 ma \u8bbe\u7f6e\u4e00\u4e2a\u540d\u5b57\u4e3a a \u7684\u6807\u8bb0 \u2018a (\u5355\u5f15\u53f7+\u6807\u8bb0a)\u5b9a\u4f4d\u5230\u6807\u8bb0a\u7684\u4f4d\u7f6e\u6240\u5728\u884c\u7684\u8d77\u59cb\u4f4d\u7f6e `a(\u53cd\u5f15\u53f7+\u6807\u8bb0a)\u5c06\u5149\u6807\u5b9a\u4f4d\u5230\u6807\u8bb0a\u6240\u5728\u7684\u7684\u7cbe\u786e\u4f4d\u7f6e d'a \u5220\u9664\u5f53\u524d\u884c\u5230\u6807\u8bb0a\u6240\u5728\u884c\u4e4b\u95f4\u7684\u6587\u672c d a ` \u5220\u9664\u5f53\u524d\u884c\u5230a\u6807\u8bb0\u5904\u7684\u6240\u6709\u6587\u672c \u5728\u547d\u4ee4\u4e2d\u53ef\u4ee5\u4f5c\u4e3a\u884c\u53f7\u4f7f\u7528 \uff0c\u4f8b\u5982\uff1a 'm,.s/the/THE/g Tab\u9875 \u914d\u7f6e set tabpagemax=18 VIM\u9ed8\u8ba4\u53ea\u80fd\u6253\u5f0010\u4e2a\u6807\u7b7e\u9875\uff0c\u5728\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e2a\u9650\u5236\uff1a set showtabline=0 \u4e0d\u663e\u793a\u6807\u7b7e\u680f set showtabline=1 \u8fd9\u662f\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u610f\u601d\u662f\uff0c\u5728\u521b\u5efa\u6807\u7b7e\u9875\u540e\u624d\u663e\u793a\u6807\u7b7e\u680f\u3002 set showtabline=2 \u603b\u662f\u663e\u793a\u6807\u7b7e\u680f \u547d\u4ee4\u884c\u547d\u4ee4\uff1a :tabe filename \u7528\u6807\u7b7e\u9875\u6253\u5f00\u6587\u4ef6 :tabnew filename \u7528\u6807\u7b7e\u9875\u6253\u5f00\u6587\u4ef6 :tab split \u7528\u6807\u7b7e\u9875\u6253\u5f00\u5f53\u671f\u7f16\u8f91\u7684\u6587\u4ef6 :tabf filename* \u7528\u6807\u7b7e\u9875\u6253\u5f00\u4e0e\u901a\u914d\u7b26\u5339\u914d\u7684\u4e00\u4e2a\u6587\u4ef6 :tabs \u663e\u793a\u6240\u6709\u6807\u7b7e\u9875\uff0c> \u6307\u793a\u5f53\u524d\u9875\uff0c+ \u663e\u793a\u4fee\u6539\u672a\u4fdd\u5b58 :tabc \u5173\u95ed\u5f53\u524d\u6807\u7b7e\u9875\uff0c\u529f\u80fd\u7b49\u540c\u4e8e:q :tabo \u5173\u95ed\u6240\u6709\u6807\u7b7e\u9875 :tabn \u8df3\u8f6c\u540e\u4e00\u4e2a\u6807\u7b7e\u9875 :tabp \u8df3\u8f6c\u524d\u4e00\u4e2a\u6807\u7b7e\u9875 :tabfirst \u8df3\u8f6c\u7b2c\u4e00\u4e2a\u6807\u7b7e\u9875 :tabr \u8df3\u8f6c\u7b2c\u4e00\u4e2a\u6807\u7b7e\u9875 :tablast \u8df3\u8f6c\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u9875 :tabm 0/1/2 \u5c06\u5f53\u524d\u6807\u7b7e\u9875\u79fb\u52a8\u5230\u7b2c1/2/3\u4e2a\u9875\u9762\u4f4d\u7f6e :tabdo \u5bf9\u591a\u4e2a\u6807\u7b7e\u9875\u540c\u65f6\u6267\u884c\u547d\u4ee4\uff0c\u5982 :tabdo %s/aaa/bbb/g \u64cd\u4f5c\u547d\u4ee4: gt \u8df3\u8f6c\u540e\u4e00\u4e2a\u6807\u7b7e\u9875 gT \u8df3\u8f6c\u524d\u4e00\u4e2a\u6807\u7b7e\u9875 \u5206\u5c4f \u5206\u5c4f\u542f\u52a8Vim vim -On file1 file2 ...\u4f7f\u7528\u5927\u5199\u7684O\u53c2\u6570\u6765\u5782\u76f4\u5206\u5c4f\u3002 vim -on file1 file2 ...\u4f7f\u7528\u5c0f\u5199\u7684o\u53c2\u6570\u6765\u6c34\u5e73\u5206\u5c4f\u3002 \u6ce8\u91ca: n\u662f\u6570\u5b57\uff0c\u8868\u793a\u5206\u6210\u51e0\u4e2a\u5c4f\u3002 \u5206\u5c4f\u64cd\u4f5c Ctrl+W s\u4e0a\u4e0b\u5206\u5272\u5f53\u524d\u6253\u5f00\u7684\u6587\u4ef6\u3002 :sp filename\u4e0a\u4e0b\u5206\u5272\uff0c\u5e76\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u3002 Ctrl+W v \u5de6\u53f3\u5206\u5272\u5f53\u524d\u6253\u5f00\u7684\u6587\u4ef6\u3002 :vsp filename \u5de6\u53f3\u5206\u5272\uff0c\u5e76\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u3002 \u5173\u95ed\u5206\u5c4f Ctrl+W c \u5173\u95ed\u5f53\u524d\u7a97\u53e3\u3002 Ctrl+W q \u5173\u95ed\u5f53\u524d\u7a97\u53e3\uff0c\u5982\u679c\u53ea\u5269\u6700\u540e\u4e00\u4e2a\u4e86\uff0c\u5219\u9000\u51faVim\u3002 \u5207\u6362\u5206\u5c4f Vi\u4e2d\u7684\u5149\u6807\u952e\u662fh, j, k, l\uff0c\u8981\u5728\u5404\u4e2a\u5c4f\u95f4\u5207\u6362\uff0c\u53ea\u9700\u8981\u5148\u6309\u4e00\u4e0bCtrl+W Ctrl+W l \u628a\u5149\u6807\u79fb\u5230\u53f3\u8fb9\u7684\u5c4f\u3002 Ctrl+W h \u628a\u5149\u6807\u79fb\u5230\u5de6\u8fb9\u7684\u5c4f\u4e2d\u3002 Ctrl+W k \u628a\u5149\u6807\u79fb\u5230\u4e0a\u8fb9\u7684\u5c4f\u4e2d\u3002 Ctrl+W j \u628a\u5149\u6807\u79fb\u5230\u4e0b\u8fb9\u7684\u5c4f\u4e2d\u3002 Ctrl+W w \u628a\u5149\u6807\u79fb\u5230\u4e0b\u4e00\u4e2a\u7684\u5c4f\u4e2d\u3002 \u6539\u53d8\u5206\u5c4f\u5927\u5c0f :[vertical] res[ize] [N] \u7f16\u8f91\u6307\u5b9a\u6587\u4ef6 :e[!] [filename] \u7f16\u8f91filename\u6307\u5b9a\u7684\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u6307\u5b9afilename\uff0c\u7ee7\u7eed\u7f16\u8f91\u5f53\u524d\u6587\u4ef6(load\u6587\u4ef6\u5230\u5f53\u524d\u7f13\u51b2\u533a\u5373\u7f16\u8f91\u533a\uff0c\u53ef\u505a\u5237\u65b0\u6587\u4ef6\u7528) :e# \u5173\u95ed\u5f53\u524d\u6587\u4ef6\uff0c\u6253\u5f00\u4e0a\u6b21\u7f16\u8f91\u7684\u6587\u4ef6 :n filename \u6253\u5f00\u65b0\u6587\u4ef6 vim\u4e2d\u6267\u884cshell :sh \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c \u6309 CONTROL+D \u6216\u8f93\u5165 exit \u547d\u4ee4\u9000\u51fa\u547d\u4ee4\u6a21\u5f0f :!command ,vim\u4e2d\u6267\u884ccommand\u547d\u4ee4 !!command ,\u6267\u884ccommand\u547d\u4ee4\uff0c\u5e76\u628a\u8f93\u51fa\u7ed3\u679c\u66ff\u6362\u5f53\u524d\u884c !+\u884c\u5730\u5740+ command ,\u5bf9\u6307\u5b9a\u884c\u6267\u884ccommand\u547d\u4ee4\uff0c\u5e76\u7528\u8f93\u51fa\u7ed3\u679c\u66ff\u6362 \u91cd\u590d\u4e0a\u6b21\u547d\u4ee4 . \u91cd\u590d\u4e0a\u6b21\u64cd\u4f5c \u200b","title":"Vim\u5e38\u7528\u547d\u4ee4"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","text":"vimtutor \u67e5\u770b\u4f7f\u7528\u8bf4\u660e :help feature \u83b7\u53d6feature \u7684\u76f8\u5173\u4fe1\u606f :help doc-file-list \u83b7\u53d6\u5e2e\u52a9\u6587\u4ef6\u7684\u5b8c\u6574\u5217\u8868 CONTROL+] \u6253\u5f00\u94fe\u63a5 CONTROL+o \u8fd4\u56de :q \u9000\u51fa\u5e2e\u52a9\u6587\u6863","title":"\u5e2e\u52a9"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#mode","text":"Vim is a modal editor. It has a normal mode, visual mode ,insert mode, and other modes.","title":"Mode"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#undoredo","text":"u: undo last change Ctrl_R: Redo","title":"Undo/Redo"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","text":"ctrl+d \u4e0b\u7ffb\u534a\u5c4f d=down ctrl+u \u4e0a\u7ffb\u534a\u5c4f u=up ctrl+b\u4e0a\u7ffb\u4e00\u9875 b=backward ctrl+f\u4e0b\u7ffb\u4e00\u9875 f=forward \u6eda\u4e00\u884c ctrl-e ctrl-y zz \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u4e2d\u592e zt \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u6700\u4e0a\u4e00\u884c t=top zb \u8ba9\u5149\u6807\u6240\u5728\u7684\u884c\u5c45\u5c4f\u5e55\u6700\u4e0b\u4e00\u884c b=bottom","title":"\u6d4f\u89c8"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","text":"w \u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 b \u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 $ \u79fb\u52a8\u5230\u884c\u5c3e 0\u6216^ \u79fb\u52a8\u5230\u884c\u9996 gg \u79fb\u52a8\u5230\u6587\u6863\u5934 G \u79fb\u52a8\u5230\u6587\u6863\u5c3e \u884c\u53f7\uff0bG \u8df3\u8f6c\u5230\u67d0\u884c\uff0c\u4f8b\u5982\u5230\u7b2c6\u884c 6G :\u884c\u53f7 , \u8df3\u8f6c\u5230\u67d0\u884c\uff0c \u4f8b\u5982\u5230\u7b2c6\u884c :6 ( \u6216 { \u79fb\u52a8\u5230\u6bb5\u843d\u5934 ) \u6216 } \u79fb\u52a8\u5230\u6bb5\u843d\u5c3e e \u79fb\u52a8\u5230\u5f53\u524d\u5b57\u7684\u5c3e\u90e8 ge\u79fb\u52a8\u5230\u524d\u4e00\u4e2a\u5b57\u7684\u5c3e\u90e8 % \u8df3\u8f6c\u5230\u914d\u5bf9\u7684\u7b26\u53f7\u4e0a\uff0c\u914d\u5bf9\u7b26\u53f7\u4f8b\u5982: \"\", (), <>, {} [[ \u8df3\u8f6c\u5230\u5f53\u524d\u6216\u8005\u4e0a\u4e00\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u5f00\u5934\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) ][ \u8df3\u8f6c\u5230\u5f53\u524d\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u7ed3\u5c3e\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) ]] \u8df3\u8f6c\u5230\u4e0b\u4e00\u4ee3\u7801\u5757(\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49)\u7684\u5f00\u5934\u53bb(\u4f46\u8981\u6c42\u4ee3\u7801\u5757\u4e2d'{'\u5fc5\u987b\u5355\u72ec\u5360\u4e00\u884c) [/ \u8df3\u5230\u6ce8\u91ca\u5f00\u5934\uff08\u53ea\u5bf9/ /\u6ce8\u91ca\u6709\u6548\uff09 ]/ \u8df3\u5230\u6ce8\u91ca\u7ed3\u5c3e\uff08\u53ea\u5bf9/ /\u6ce8\u91ca\u6709\u6548\uff09 gD \u8df3\u8f6c\u5230\u5f53\u524d\u6587\u4ef6\u5185\u6807\u8bc6\u7b26\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u53ef\u7528\u4e8e\u8df3\u8f6c\u5230\u5168\u90e8\u53d8\u91cf\u7684\u5b9a\u4e49\u5904\uff1b\u67e5\u627e\u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u8981\u662f\u591a\u4e2a\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u8be5\u5c40\u90e8\u53d8\u91cf\uff0c\u4f7f\u7528gD\u8fdb\u884c\u67e5\u627e\uff0c\u627e\u5230\u7684\u53d8\u91cf\u5b9a\u4e49\u53ef\u80fd\u4e0d\u662f\u4f60\u9700\u8981\u7684 gd \u8df3\u8f6c\u5230\u5f53\u524d\u51fd\u6570\u5185\u6807\u8bc6\u7b26\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u53ef\u7528\u4e8e\u8df3\u8f6c\u5230\u5c40\u90e8\u53d8\u91cf\u7684\u5b9a\u4e49\u5904 '' \u8df3\u8f6c\u5230\u5149\u6807\u4e0a\u6b21\u505c\u9760\u7684\u5730\u65b9, \u662f\u4e24\u4e2a ' , \u800c\u4e0d\u662f\u4e00\u4e2a \"","title":"\u5149\u6807\u79fb\u52a8"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_4","text":"\u590d\u5236=Yank, \u5220\u9664=Delete, \u7c98\u8d34=Put Yank(Y) \u590d\u5236\u5230\u901a\u7528\u7f13\u51b2\u533a Delete\uff08D\uff09\u5220\u9664\u5e76\u653e\u5230\u901a\u7528\u7f13\u51b2\u533a Put(P) \u628a\u901a\u7528\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u63d2\u5165\u7684\u5f53\u524d\u6587\u672c \u4f8b\u5982\uff1a yy \u590d\u5236\u5f53\u524d\u884c n+yy \u590d\u5236\u5f53\u524d\u884c\u548c\u540e\u9762n-1\u884c gg + yG \u590d\u5236\u5168\u90e8 \"ayy \u590d\u5236\u5230\u7f13\u51b2\u533aa \"ap \u7c98\u8d34\u7f13\u51b2\u533aa\u5230\u6587\u672c Delete\u547d\u4ee4\u7684\u6a21\u5f0f\u540cYank\u4e00\u6837 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u5173\u4e8e\u5bc4\u5b58\u5668(registers)\u7684\u64cd\u4f5c\u3002 \u201c\uff0b\u5b57\u6bcd\uff0byy \u628a\u5f53\u524d\u884c\u590d\u5236\u5230\u5b57\u6bcd\u7684\u547d\u540d\u5bc4\u5b58\u5668, \u201c\uff0b\u5b57\u6bcd\uff0bp \u628a\u5bf9\u5e94\u5b57\u6bcd\u540d\u5b57\u7684\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u9ecf\u8d34\u5230\u5f53\u524d\u6587\u6863\u3002 \u66f4\u591a\u5173\u4e8e\u5bc4\u5b58\u5668\u7684\u4ecb\u7ecd\u53c2\u89c1 :help registers","title":"\u590d\u5236\u7c98\u8d34"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_5","text":"","title":"\u7f16\u8f91"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_6","text":"d+\u8981\u5220\u9664\u7684\u4f4d\u7f6e\uff0c \u4f8b\u5982\uff1a dw \u5220\u9664\u5230\u5b57\u7684\u672b\u5c3e daw \u5220\u9664\u4e00\u4e2a\u5355\u8bcd d3aw \u5220\u96643\u4e2a\u5355\u8bcd dw \u5220\u9664\u5230\u5b57\u7684\u5c3e\u90e8 db \u5220\u9664\u5230\u5b57\u7684\u5f00\u59cb dd \u5220\u9664\u4e00\u884c x \u6216 dl \u5220\u9664\u5355\u4e2a\u5b57\u7b26 d0 \u6216 d^ \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u884c\u7684\u5934\u90e8 d$ \u6216 D \u5220\u9664\u5230\u884c\u5c3e d) \u6216 d} \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u6bb5\u843d\u5c3e d( \u6216 d{ \u4ece\u5f53\u524d\u4f4d\u7f6e\u5220\u9664\u5230\u6bb5\u843d\u5934 d/text \u5220\u9664\u5230text\u5355\u8bcd\u7684\u4e0b\u4e00\u6b21\u51fa\u73b0 cw \u5220\u9664\u5230\u5b57\u7684\u672b\u5c3e\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f \u63d2\u5165\u6a21\u5f0f\u4e0b, ctrl+H \u5b57\u7b26\u5220\u9664 ctrl+U \u884c\u5220\u9664 ctrl+W \u5b57\u5220\u9664","title":"\u5220\u9664"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_7","text":"\u914d\u5bf9\u7b26\u53f7\u5305\u62ec \"\", (), {} \u7b49 \u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5bf9\u7b26\u53f7\u5185\u7684\u5185\u5bb9\u8fdb\u884c\u64cd\u4f5c\u3002 ci+\u7b26\u53f7 \u66f4\u6539\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 di+\u7b26\u53f7 \u5220\u9664\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 yi+\u7b26\u53f7 \u590d\u5236\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 vi+\u7b26\u53f7 \u9009\u4e2d\u8fd9\u4e9b\u914d\u5bf9\u7b26\u53f7\u4e2d\u7684\u6587\u672c\u5185\u5bb9 \u53e6\u5916\u5982\u679c\u628a\u4e0a\u9762\u7684 i \u6539\u6210 a \u53ef\u4ee5\u8fde\u914d\u5bf9\u7b26\u53f7\u4e00\u8d77\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u8981\u5220\u9664\u53cc\u5f15\u53f7\u5185 \"\" \u5185\u7684\u5185\u5bb9, 111\"222\"333 \uff0c \u5c06\u5149\u6807\u79fb\u5230\u53cc\u5f15\u53f7\u5185\uff0c\u6309\u4e0b di\" ,\u5220\u9664\u53cc\u5f15\u53f7\u5185\u7684\u5185\u5bb9\uff0c\u53d8\u6210 111\"\"333 \uff0c\u82e5\u8981\u8fde\u540c\u53cc\u5f15\u53f7\u4e00\u540c\u5220\u9664\uff0c\u5219\u8981\u6309\u4e0b da\" ,\u6587\u672c\u4f1a\u4fee\u6539\u4e3a\uff1a 111333","title":"\u5bf9\u914d\u5bf9\u7b26\u53f7\u5185\u7684\u5185\u5bb9\u8fdb\u884c\u64cd\u4f5c"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#select-text-inside-a-tag","text":"Tag is the tag in html or xml, for example <div> ... </div> , We can select a text within an html or xml tag by using visual selection v and text object it . Go to normal mode by pressing ESC Type vit from anywhere within the html or xml section This will visually select all text inside the tag. All other text objects can also be used to operate on the text inside the tag vit - select all text inside the tag cit - delete text inside the tag and place in insert mode dit - delete text inside the tag and remain in normal mode cat - delete around tag and place in insert mode dat - delete text around the tag and remain in normal mode","title":"Select text inside a tag"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_8","text":"\\== \u683c\u5f0f\u5316\u5f53\u524d\u884c n+== \u683c\u5f0f\u5316\u5f53\u524d\u548c\u540e\u9762n-1\u884c gg=G \u6216\u8005 = \u683c\u5f0f\u5316\u5168\u6587","title":"\u683c\u5f0f\u5316"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_9","text":"\u63d2\u5165\u6a21\u5f0f\u4e0b\uff1a CTRL+T \u53f3\u7f29\u8fdb CTRL+D \u5de6\u7f29\u8fdb \u547d\u4ee4\u6a21\u5f0f\u4e0b\uff1a > \u589e\u52a0\u7f29\u8fdb, x> \u8868\u793a\u589e\u52a0\u4ee5\u4e0bx\u884c\u7684\u7f29\u8fdb < \u51cf\u5c11\u7f29\u8fdb, x< \u8868\u793a\u51cf\u5c11\u4ee5\u4e0bx\u884c\u7684\u7f29\u8fdb","title":"\u7f29\u8fdb"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_10","text":"\u65b9\u6cd5\u4e00 \u591a\u884c\u6ce8\u91ca\uff1a \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309 ctrl + v \u8fdb\u5165 visual block\u6a21\u5f0f\uff0c\u7136\u540e\u6309j\u6216k\u9009\u4e2d\u591a\u884c\uff0c\u628a\u9700\u8981\u6ce8\u91ca\u7684\u884c\u6807\u8bb0\u8d77\u6765\uff0c\u6309\u5927\u5199\u5b57\u6bcdI\uff0c\u518d\u63d2\u5165\u6ce8\u91ca\u7b26\uff0c\u4f8b\u5982 // \uff0c\u6309esc\u952e\u5c31\u4f1a\u5168\u90e8\u6ce8\u91ca\u4e86\u3002 \u53d6\u6d88\u591a\u884c\u6ce8\u91ca\uff1a \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309\u00b7ctrl + v\u00b7\u8fdb\u5165 visual block\u6a21\u5f0f\uff0c\u6309\u5b57\u6bcdl\u6a2a\u5411\u9009\u4e2d\u5217\u7684\u4e2a\u6570\uff0c\u4f8b\u5982 \u00b7//\u00b7 \u9700\u8981\u9009\u4e2d2\u5217\uff0c\u6309\u5b57\u6bcdj\uff0c\u6216 \u8005k\u9009\u4e2d\u6ce8\u91ca\u7b26\u53f7\uff0c\u6309d\u952e\u5c31\u53ef\u5220\u9664\u6ce8\u91ca\u7b26\u3002 \u65b9\u6cd5\u4e8c \u66ff\u6362\u547d\u4ee4 \u63d2\u5165\u6ce8\u91ca :\u8d77\u59cb\u884c\u53f7,\u7ed3\u675f\u884c\u53f7s/^/\u6ce8\u91ca\u7b26/g \u4f8b\u5982\uff1a :27,30s#^#//#g \u5c31\u662f\u572827 - 30\u884c\u6dfb\u52a0 // \u6ce8\u91ca` \u53d6\u6d88\u6ce8\u91ca \u00b7:\u8d77\u59cb\u884c\u53f7,\u7ed3\u675f\u884c\u53f7s/^\u6ce8\u91ca\u7b26//g\u00b7 \u4f8b\u5982\uff1a :27,30s#^//##g \u5c31\u662f\u572827 - 30\u884c\u5220\u9664 // \u6ce8\u91ca","title":"\u4ee3\u7801\u6ce8\u91ca"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_11","text":"crl+p \u548c crl+n","title":"\u81ea\u52a8\u8865\u5168"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_12","text":"\u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b :[g] [address] s/search-string/replacement-string[/option] \u5176\u4e2d addess\uff1a\u4ee3\u8868\u884c s: \u8868\u793a\u66ff\u6362\u5f53\u524d\u5b57\u7b26 S: \u8868\u793a\u66ff\u6362\u5f53\u524d\u884c ~: \u8868\u793a\u4fee\u6539\u5927\u5c0f\u5199 \u4f8b\u5982\uff1a :%s/<ten>/10/g \u5c06\u6240\u6709\u51fa\u73b0\u7684\u5b57ten\u66ff\u6362\u4e3a\u5b57\u7b26\u4e3210 :s/p1/p2/g \u5c06\u5f53\u524d\u884c\u4e2d\u6240\u6709p1\u5747\u7528p2\u66ff\u4ee3 :1,.s/p1/p2/g \u5c06\u5f53\u524d\u884c\u4e4b\u524d\u7684\u6240\u6709\u884c\u7684\u5b57\u7b26\u4e32p1\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32p2 :1,$s/p1/p2/g \u5c06\u6240\u6709\u51fa\u73b0\u7684\u5b57\u7b26\u4e32p1\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32p2 :g/chaper/s/ten/10/ \u5c06\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5305\u542b\u5b57\u7b26\u4e32chaper\u7684\u6240\u6709\u884c\u4e2d\u7684\u5b57\u7b26\u4e32ten\u66ff\u6362\u4e3a\u5b57\u7b26\u4e3210 :.,.+10s/every/each/g \u5c06\u51fa\u73b0\u7684\u4ece\u5f53\u524d\u884c\u5230\u540e\u7eed10\u884c\u5185\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32every\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32each :s/<short\\>/\"&\"/ \u5c06\u5f53\u524d\u884c\u4e2d\u7684\u5b57short\u66ff\u6362\u4e3a\"short\"(\u5373\u5c06\u5f53\u524d\u884c\u4e2d\u7684\u5b57short\u7528\u5f15\u53f7\u62ec\u8d77\u6765) :n1,n2s/p1/p2/g \u5c06\u7b2cn1\u81f3n2\u884c\u4e2d\u6240\u6709p1\u5747\u7528p2\u66ff\u4ee3 :n1,n2 co n3 \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u7b2cn3\u884c\u4e0b :n1,n2 m n3 \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u79fb\u81f3\u5230\u7b2cn3\u884c\u4e0b :n1,n2 d \u5c06n1\u884c\u5230n2\u884c\u4e4b\u95f4\u7684\u5185\u5bb9\u5220\u9664","title":"\u66ff\u6362"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_13","text":"/pattern \u4ece\u5149\u6807\u5f00\u59cb\u5904\u5411\u6587\u4ef6\u5c3e\u641c\u7d22pattern ?pattern \u4ece\u5149\u6807\u5f00\u59cb\u5904\u5411\u6587\u4ef6\u9996\u641c\u7d22pattern \u9f20\u6807\u79fb\u52a8\u7684\u4e00\u4e2a\u5355\u8bcd\u4e0a,\u6309 * \u5728\u5168\u6587\u4e2d\u67e5\u627e\u4e0e\u4e4b\u76f8\u540c\u7684\u5355\u8bcd n\uff1a\u5728\u540c\u4e00\u65b9\u5411\u91cd\u590d\u4e0a\u4e00\u6b21\u641c\u7d22\u547d\u4ee4\uff0cN\uff1a\u5728\u53cd\u65b9\u5411\u4e0a\u91cd\u590d\u4e0a\u4e00\u6b21\u641c\u7d22\u547d\u4ee4","title":"\u67e5\u627e"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_14","text":"ma \u8bbe\u7f6e\u4e00\u4e2a\u540d\u5b57\u4e3a a \u7684\u6807\u8bb0 \u2018a (\u5355\u5f15\u53f7+\u6807\u8bb0a)\u5b9a\u4f4d\u5230\u6807\u8bb0a\u7684\u4f4d\u7f6e\u6240\u5728\u884c\u7684\u8d77\u59cb\u4f4d\u7f6e `a(\u53cd\u5f15\u53f7+\u6807\u8bb0a)\u5c06\u5149\u6807\u5b9a\u4f4d\u5230\u6807\u8bb0a\u6240\u5728\u7684\u7684\u7cbe\u786e\u4f4d\u7f6e d'a \u5220\u9664\u5f53\u524d\u884c\u5230\u6807\u8bb0a\u6240\u5728\u884c\u4e4b\u95f4\u7684\u6587\u672c d a ` \u5220\u9664\u5f53\u524d\u884c\u5230a\u6807\u8bb0\u5904\u7684\u6240\u6709\u6587\u672c \u5728\u547d\u4ee4\u4e2d\u53ef\u4ee5\u4f5c\u4e3a\u884c\u53f7\u4f7f\u7528 \uff0c\u4f8b\u5982\uff1a 'm,.s/the/THE/g","title":"\u6807\u8bb0"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#tab","text":"\u914d\u7f6e set tabpagemax=18 VIM\u9ed8\u8ba4\u53ea\u80fd\u6253\u5f0010\u4e2a\u6807\u7b7e\u9875\uff0c\u5728\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e2a\u9650\u5236\uff1a set showtabline=0 \u4e0d\u663e\u793a\u6807\u7b7e\u680f set showtabline=1 \u8fd9\u662f\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u610f\u601d\u662f\uff0c\u5728\u521b\u5efa\u6807\u7b7e\u9875\u540e\u624d\u663e\u793a\u6807\u7b7e\u680f\u3002 set showtabline=2 \u603b\u662f\u663e\u793a\u6807\u7b7e\u680f \u547d\u4ee4\u884c\u547d\u4ee4\uff1a :tabe filename \u7528\u6807\u7b7e\u9875\u6253\u5f00\u6587\u4ef6 :tabnew filename \u7528\u6807\u7b7e\u9875\u6253\u5f00\u6587\u4ef6 :tab split \u7528\u6807\u7b7e\u9875\u6253\u5f00\u5f53\u671f\u7f16\u8f91\u7684\u6587\u4ef6 :tabf filename* \u7528\u6807\u7b7e\u9875\u6253\u5f00\u4e0e\u901a\u914d\u7b26\u5339\u914d\u7684\u4e00\u4e2a\u6587\u4ef6 :tabs \u663e\u793a\u6240\u6709\u6807\u7b7e\u9875\uff0c> \u6307\u793a\u5f53\u524d\u9875\uff0c+ \u663e\u793a\u4fee\u6539\u672a\u4fdd\u5b58 :tabc \u5173\u95ed\u5f53\u524d\u6807\u7b7e\u9875\uff0c\u529f\u80fd\u7b49\u540c\u4e8e:q :tabo \u5173\u95ed\u6240\u6709\u6807\u7b7e\u9875 :tabn \u8df3\u8f6c\u540e\u4e00\u4e2a\u6807\u7b7e\u9875 :tabp \u8df3\u8f6c\u524d\u4e00\u4e2a\u6807\u7b7e\u9875 :tabfirst \u8df3\u8f6c\u7b2c\u4e00\u4e2a\u6807\u7b7e\u9875 :tabr \u8df3\u8f6c\u7b2c\u4e00\u4e2a\u6807\u7b7e\u9875 :tablast \u8df3\u8f6c\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u9875 :tabm 0/1/2 \u5c06\u5f53\u524d\u6807\u7b7e\u9875\u79fb\u52a8\u5230\u7b2c1/2/3\u4e2a\u9875\u9762\u4f4d\u7f6e :tabdo \u5bf9\u591a\u4e2a\u6807\u7b7e\u9875\u540c\u65f6\u6267\u884c\u547d\u4ee4\uff0c\u5982 :tabdo %s/aaa/bbb/g \u64cd\u4f5c\u547d\u4ee4: gt \u8df3\u8f6c\u540e\u4e00\u4e2a\u6807\u7b7e\u9875 gT \u8df3\u8f6c\u524d\u4e00\u4e2a\u6807\u7b7e\u9875","title":"Tab\u9875"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_15","text":"","title":"\u5206\u5c4f"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#vim","text":"vim -On file1 file2 ...\u4f7f\u7528\u5927\u5199\u7684O\u53c2\u6570\u6765\u5782\u76f4\u5206\u5c4f\u3002 vim -on file1 file2 ...\u4f7f\u7528\u5c0f\u5199\u7684o\u53c2\u6570\u6765\u6c34\u5e73\u5206\u5c4f\u3002 \u6ce8\u91ca: n\u662f\u6570\u5b57\uff0c\u8868\u793a\u5206\u6210\u51e0\u4e2a\u5c4f\u3002","title":"\u5206\u5c4f\u542f\u52a8Vim"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_16","text":"Ctrl+W s\u4e0a\u4e0b\u5206\u5272\u5f53\u524d\u6253\u5f00\u7684\u6587\u4ef6\u3002 :sp filename\u4e0a\u4e0b\u5206\u5272\uff0c\u5e76\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u3002 Ctrl+W v \u5de6\u53f3\u5206\u5272\u5f53\u524d\u6253\u5f00\u7684\u6587\u4ef6\u3002 :vsp filename \u5de6\u53f3\u5206\u5272\uff0c\u5e76\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u3002","title":"\u5206\u5c4f\u64cd\u4f5c"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_17","text":"Ctrl+W c \u5173\u95ed\u5f53\u524d\u7a97\u53e3\u3002 Ctrl+W q \u5173\u95ed\u5f53\u524d\u7a97\u53e3\uff0c\u5982\u679c\u53ea\u5269\u6700\u540e\u4e00\u4e2a\u4e86\uff0c\u5219\u9000\u51faVim\u3002","title":"\u5173\u95ed\u5206\u5c4f"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_18","text":"Vi\u4e2d\u7684\u5149\u6807\u952e\u662fh, j, k, l\uff0c\u8981\u5728\u5404\u4e2a\u5c4f\u95f4\u5207\u6362\uff0c\u53ea\u9700\u8981\u5148\u6309\u4e00\u4e0bCtrl+W Ctrl+W l \u628a\u5149\u6807\u79fb\u5230\u53f3\u8fb9\u7684\u5c4f\u3002 Ctrl+W h \u628a\u5149\u6807\u79fb\u5230\u5de6\u8fb9\u7684\u5c4f\u4e2d\u3002 Ctrl+W k \u628a\u5149\u6807\u79fb\u5230\u4e0a\u8fb9\u7684\u5c4f\u4e2d\u3002 Ctrl+W j \u628a\u5149\u6807\u79fb\u5230\u4e0b\u8fb9\u7684\u5c4f\u4e2d\u3002 Ctrl+W w \u628a\u5149\u6807\u79fb\u5230\u4e0b\u4e00\u4e2a\u7684\u5c4f\u4e2d\u3002","title":"\u5207\u6362\u5206\u5c4f"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_19","text":":[vertical] res[ize] [N]","title":"\u6539\u53d8\u5206\u5c4f\u5927\u5c0f"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_20","text":":e[!] [filename] \u7f16\u8f91filename\u6307\u5b9a\u7684\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u6307\u5b9afilename\uff0c\u7ee7\u7eed\u7f16\u8f91\u5f53\u524d\u6587\u4ef6(load\u6587\u4ef6\u5230\u5f53\u524d\u7f13\u51b2\u533a\u5373\u7f16\u8f91\u533a\uff0c\u53ef\u505a\u5237\u65b0\u6587\u4ef6\u7528) :e# \u5173\u95ed\u5f53\u524d\u6587\u4ef6\uff0c\u6253\u5f00\u4e0a\u6b21\u7f16\u8f91\u7684\u6587\u4ef6 :n filename \u6253\u5f00\u65b0\u6587\u4ef6","title":"\u7f16\u8f91\u6307\u5b9a\u6587\u4ef6"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#vimshell","text":":sh \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c \u6309 CONTROL+D \u6216\u8f93\u5165 exit \u547d\u4ee4\u9000\u51fa\u547d\u4ee4\u6a21\u5f0f :!command ,vim\u4e2d\u6267\u884ccommand\u547d\u4ee4 !!command ,\u6267\u884ccommand\u547d\u4ee4\uff0c\u5e76\u628a\u8f93\u51fa\u7ed3\u679c\u66ff\u6362\u5f53\u524d\u884c !+\u884c\u5730\u5740+ command ,\u5bf9\u6307\u5b9a\u884c\u6267\u884ccommand\u547d\u4ee4\uff0c\u5e76\u7528\u8f93\u51fa\u7ed3\u679c\u66ff\u6362","title":"vim\u4e2d\u6267\u884cshell"},{"location":"Editor/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_21","text":". \u91cd\u590d\u4e0a\u6b21\u64cd\u4f5c \u200b","title":"\u91cd\u590d\u4e0a\u6b21\u547d\u4ee4"},{"location":"GCC/GCC%20Linking/","text":"\u672c\u7ec3\u4e60\u91c7\u7528\u4e0b\u9762\u56db\u4e2aC\u6587\u4ef6\uff0c addvec.c multvec.c \u548c vector.h \u662f\u5e93\u6587\u4ef6\uff0c main.c\u662f\u5f15\u7528\u5e93\u51fd\u6570\u7684\u6587\u4ef6 vector.h /* prototypes for libvector */ void addvec(int *x, int *y, int *z, int n); void multvec(int *x, int *y, int *z, int n); int getcount(); addvec.c int addcnt = 0; void addvec(int *x, int *y, int *z, int n) { int i; addcnt++; for (i = 0; i < n; i++) z[i] = x[i] + y[i]; } multvec.c int multcnt = 0; void multvec(int *x, int *y, int *z, int n) { int i; multcnt++; for (i = 0; i < n; i++) z[i] = x[i] * y[i]; } main.c #include <stdio.h> #include \"vector.h\" int x[2] = {1, 2}; int y[2] = {3, 4}; int z[2]; int main() { addvec(x, y, z, 2); printf(\"z = [%d %d]\\n\", z[0], z[1]); return 0; } Linking with Static Libraries \u7f16\u8bd1\u5e93\u6587\u4ef6\uff0c\u5e76\u6253\u5305\u6210\u9759\u6001\u5e93 # create a static library libvector.a gcc -c addvec.c multvec.c ar rcs libvector.a addvec.o multvec.o \u6784\u5efa\u5f15\u7528\u9759\u6001\u5e93\u7684\u53ef\u6267\u884c\u6587\u4ef6 # build the executable gcc -o prog main.c ./libvector.a \u6216\u8005\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4e5f\u662f\u4e00\u6837\u7684 gcc -o prog main.c -L. -lvector \u53c2\u6570\u2018-lvector\u2019\u662flibvector.a\u7684\u7b80\u7565\u8868\u793a\u65b9\u5f0f\uff0c\u53c2\u6570'-L.' \u544a\u8bc9linker\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u5bfb\u627elibvector.a. \u6267\u884c\u547d\u4ee4 objdump -d prog \u53ef\u4ee5\u53d1\u73b0\u53ea\u6709addvec\u6a21\u5757\u88ab\u5408\u5e76\u5230\u6700\u540e\u7684prog\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u4e86\uff0c\u800cmultvec\u6a21\u5757 \u91cc\u7684\u65b9\u6cd5\u56e0\u4e3a\u6ca1\u6709\u88ab\u5f15\u7528\u5230\u6240\u4ee5\u6ca1\u6709\u88ab\u5408\u5e76\u8fdb\u53bb\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u51cf\u5c0f\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f \u8fd0\u884c $ ./prog z = [4 6] \u5982\u679c\u94fe\u63a5\u7684\u8fc7\u7a0b\u52a0 '-static' \u9009\u9879\u8868\u793a\u9488\u5bf9\u7cfb\u7edf\u5e93\u5f15\u7528\u4e5f\u4ee5\u9759\u6001\u5e93\u7684\u65b9\u5f0f\u5f15\u5165. The '-static' argument tells the compiler driver that the linker should build a fully linked executable object file that can be loaded into memory and run without any further linking at load time. \u5982\u4e0b\u6240\u793a\uff1a gcc -static -o prog main.c -L. -lvector Dynamic Linking with Shared Libraries \u9759\u6001\u5e93\u4e91\u52a8\u6001\u7684\u5e93\u533a\u522b\u662f\u4ec0\u4e48\u5462\uff1f \u5f15\u7528\u9759\u6001\u5e93\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u5b8c\u5168\u94fe\u63a5\u7684\u6267\u884c\u6587\u4ef6\uff0c\u8fd0\u884c\u7684\u65f6\u5019\u52a0\u8f7d\u5668\u53ef\u4ee5\u76f4\u63a5\u62f7\u8d1d\u5230\u5185\u5b58\u8fd0\u884c\uff1b\u800c\u5f15\u7528\u52a8\u6001\u5171\u4eab\u5e93\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u90e8\u5206\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u52a0\u8f7d\u5668\u5728\u52a0\u8f7d\u8be5\u6587\u4ef6\u7684\u65f6\u5019\u9700\u8981\u5148\u4ea4\u7531\u94fe\u63a5\u5668\u8fdb\u884c\u8fdb\u4e00\u6b65\u94fe\u63a5\u5904\u7406\uff08reloacation\uff09\uff0c\u94fe\u63a5\u5904\u7406\u5b8c\u540e\u624d\u53ef\u8fd0\u884c\u3002 \u5f15\u7528\u9759\u6001\u5e93\u7f16\u8bd1\uff0c\u9759\u6001\u5e93\u4e2d\u88ab\u76ee\u6807\u6267\u884c\u6587\u4ef6\u6240\u5f15\u7528\u7684\u6a21\u5757\u90fd\u4f1a\u88ab\u62f7\u8d1d\u5230\u76ee\u6807\u6267\u884c\u6587\u4ef6\u4e2d\u6765\uff1b\u800c\u5f15\u7528\u52a8\u6001\u5e93\u8fdb\u884c\u7f16\u8bd1\u52a8\u6001\u5e93\u91cc\u88ab\u5f15\u7528\u7684\u6a21\u5757\u4e0d\u4f1a\u88ab\u62f7\u8d1d\uff0c\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5e93\u91cc\u9762\u7684\u6a21\u5757\u53ea\u6709\u4e00\u4efd\u5168\u5c40\u62f7\u8d1d\uff0c\u6240\u6709\u6267\u884c\u6587\u4ef6\u5728\u8fd0\u884c\u65f6\u90fd\u5f15\u7528\u540c\u4e00\u4efd\u62f7\u8d1d\u3002 \u4e0b\u9762\u5220\u9664'libvector.a'\uff0c \u7136\u540e\u6d4b\u8bd5\u4e00\u4e0b\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u6784\u5efa\u8fc7\u7a0b\u3002 \u7f16\u8bd1\u53ef\u5171\u4eab\u7684libvector.so \u5e93\u6587\u4ef6 gcc -shared -fpic -o libvector.so addvec.c multvec.c The '-fpic' flag directs the compiler to generate position-independent code. The '-shared' flag directs the linker to create a shared object file. \u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u5b8c\u6210\u4e86so\u5e93\u6587\u4ef6\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u628a\u5b83\u94fe\u63a5\u7684\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u3002 \u6784\u5efa\u5f15\u7528\u52a8\u6001\u5e93\u7684\u53ef\u6267\u884c\u6587\u4ef6 gcc -o prog2 main.c ./libvector.so \u8fd9\u5c31\u6784\u5efa\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u6267\u884c ldd prog2 \u67e5\u770b\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u94fe\u63a5\u72b6\u6001\u3002 $ ldd prog2 linux-vdso.so.1 (0x00007ffc79fa5000) ./libvector.so (0x00007f472cad5000) libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f472c6e4000) /lib64/ld-linux-x86-64.so.2 (0x00007f472ced9000) \u8fd0\u884c\uff0c\u6210\u529f\u3002 $ ./prog2 z = [4 6] \u4f46\u662f\u5047\u5982\u6211\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u5bf9\u7528\u52a8\u6001\u5e93\u8fdb\u884c\u94fe\u63a5\uff0c gcc -o prog3 main.c -L. -lvector \u6216\u8005,\u540c\u6837\u662f\u662f\u524d\u9762\u7684\u90a3\u79cd\u65b9\u5f0f\uff0c\u4f46\u662flibvector.so\u524d\u9762\u7684\u8def\u5f84'./'\u53bb\u6389 gcc -o prog2 main.c libvector.so \u53ef\u4ee5\u7f16\u8bd1\u6210\u529f\uff0c\u4f46\u662f\uff0c\u8fd0\u884c\uff0c\u53d1\u73b0\u62a5\u9519\u4e86\u3002 $ ./prog3 ./prog3: error while loading shared libraries: libvector.so: cannot open shared object file: No such file or directory \u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 ldd prog3 \uff0c\u67e5\u770b\u94fe\u63a5\u72b6\u6001 $ ldd prog3 linux-vdso.so.1 (0x00007ffcf5ba8000) libvector.so => not found libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f15d3199000) /lib64/ld-linux-x86-64.so.2 (0x00007f15d378c000) \u53d1\u73b0\u201c libvector.so \u201d\u90a3\u91cc\u663e\u793a\u201cnot found\u201d\uff0c \u610f\u601d\u662f\u627e\u4e0d\u5230libvector.so \u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff0c\u539f\u6765\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7f16\u8bd1\u751f\u6210\u7684\u76ee\u6807\u6267\u884c\u6587\u4ef6\u6ca1\u6709\u8def\u5f84\u4fe1\u606f\uff0c\u2018-L.\u2019\u4ec5\u4ec5\u662f\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u7528\u5230\u7684\uff0c\u5728\u52a0\u8f7d\u8fd0\u884c\u7684\u65f6\u5019\u94fe\u63a5\u5668\u9996\u5148\u8981\u5230\u7cfb\u7edf\u8bbe\u5b9a\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u4e2d\u67e5\u627e\u5f15\u7528\u5230\u7684so\u6587\u4ef6\u4ee5\u8fdb\u884c\u94fe\u63a5\u5904\u7406\uff08relocation\uff09\uff0c\u800c\u6211\u4eec\u7684libvector.so\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u4e0d\u5728\u7cfb\u7edf\u8bbe\u5b9a\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u4e2d\uff0c\u6240\u4ee5\u627e\u4e0d\u5230\u3002\u9759\u6001\u94fe\u63a5\u5e93\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u5462\uff0c \u56e0\u4e3a\u5f15\u7528\u9759\u6001\u94fe\u63a5\u5e93\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u751f\u6210\u7684\u662f\u4e00\u4e2a\u5b8c\u5168\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u662f\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\uff08\u62f7\u8d1d\uff09\u5230\u5185\u5b58\u8fd0\u884c\u7684\uff1b\u800c\u5f15\u7528\u52a8\u6001\u94fe\u63a5\u5e93\u8fdb\u884c\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u90e8\u5206\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u52a0\u8f7d\u5668\u5728\u52a0\u8f7d\u8fd9\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u8981\u5148\u4ea4\u7ed9\u94fe\u63a5\u5668\u8fdb\u884c\u94fe\u63a5\u5904\u7406\uff08relocation\uff09,\u94fe\u63a5\u5904\u7406\u5b8c\u6210\u540e\u518d\u5f00\u59cb\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u3002 \u5982\u4f55\u89e3\u51b3\u5462\uff0c\u56e0\u4e3a\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u662f\u5728\u201c/etc/ld.so.conf\u201d\u6587\u4ef6\u4e2d\u8bbe\u5b9a\u7684\uff0c\u53ef\u4ee5\u628a\u201c./libvector.so\u201d\u6240\u5728\u76ee\u5f55\u7684\u8def\u5f84\u52a0\u5165\u5230\u7cfb\u7edf\u7684\u201c/etc/ld.so.conf\u201d\u6587\u4ef6\u4e2d\uff0c\u52a0\u5165\u4e4b\u540e\u8fd8\u9700\u8981\u6267\u884c sudo ldconfig \u547d\u4ee4\u8ba9\u65b0\u8def\u5f84\u751f\u6548\u3002 \u6216\u8005\uff0c \u4e5f\u53ef\u4ee5\u7528 export directory_of_library \u7684\u65b9\u5f0f\uff0c\u5982 export LD_LIBRARY_PATH=/home/vagrant/test \u5b8c\u6210\u52a8\u6001\u94fe\u63a5\u5e93\u8def\u5f84\u8bbe\u7f6e\u540e\uff0c\u518d\u6267\u884cldd\u547d\u4ee4\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u53d1\u73b0libvector.so\u5df2\u7ecf\u53ef\u4ee5\u627e\u5230\u4e86\u3002 $ ldd ./prog3 linux-vdso.so.1 (0x00007ffe22fa3000) libvector.so => /home/vagrant/test/libvector.so (0x00007fe25cd03000) libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fe25c912000) /lib64/ld-linux-x86-64.so.2 (0x00007fe25d107000) \u518d\u4e00\u6b21\u8fd0\u884c\uff0c\u6210\u529f\u3002 $ ./prog3 z = [4 6]","title":"GCC Linking"},{"location":"GCC/GCC%20Linking/#linking-with-static-libraries","text":"\u7f16\u8bd1\u5e93\u6587\u4ef6\uff0c\u5e76\u6253\u5305\u6210\u9759\u6001\u5e93 # create a static library libvector.a gcc -c addvec.c multvec.c ar rcs libvector.a addvec.o multvec.o \u6784\u5efa\u5f15\u7528\u9759\u6001\u5e93\u7684\u53ef\u6267\u884c\u6587\u4ef6 # build the executable gcc -o prog main.c ./libvector.a \u6216\u8005\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4e5f\u662f\u4e00\u6837\u7684 gcc -o prog main.c -L. -lvector \u53c2\u6570\u2018-lvector\u2019\u662flibvector.a\u7684\u7b80\u7565\u8868\u793a\u65b9\u5f0f\uff0c\u53c2\u6570'-L.' \u544a\u8bc9linker\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u5bfb\u627elibvector.a. \u6267\u884c\u547d\u4ee4 objdump -d prog \u53ef\u4ee5\u53d1\u73b0\u53ea\u6709addvec\u6a21\u5757\u88ab\u5408\u5e76\u5230\u6700\u540e\u7684prog\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u4e86\uff0c\u800cmultvec\u6a21\u5757 \u91cc\u7684\u65b9\u6cd5\u56e0\u4e3a\u6ca1\u6709\u88ab\u5f15\u7528\u5230\u6240\u4ee5\u6ca1\u6709\u88ab\u5408\u5e76\u8fdb\u53bb\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u51cf\u5c0f\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f \u8fd0\u884c $ ./prog z = [4 6] \u5982\u679c\u94fe\u63a5\u7684\u8fc7\u7a0b\u52a0 '-static' \u9009\u9879\u8868\u793a\u9488\u5bf9\u7cfb\u7edf\u5e93\u5f15\u7528\u4e5f\u4ee5\u9759\u6001\u5e93\u7684\u65b9\u5f0f\u5f15\u5165. The '-static' argument tells the compiler driver that the linker should build a fully linked executable object file that can be loaded into memory and run without any further linking at load time. \u5982\u4e0b\u6240\u793a\uff1a gcc -static -o prog main.c -L. -lvector","title":"Linking with Static Libraries"},{"location":"GCC/GCC%20Linking/#dynamic-linking-with-shared-libraries","text":"\u9759\u6001\u5e93\u4e91\u52a8\u6001\u7684\u5e93\u533a\u522b\u662f\u4ec0\u4e48\u5462\uff1f \u5f15\u7528\u9759\u6001\u5e93\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u5b8c\u5168\u94fe\u63a5\u7684\u6267\u884c\u6587\u4ef6\uff0c\u8fd0\u884c\u7684\u65f6\u5019\u52a0\u8f7d\u5668\u53ef\u4ee5\u76f4\u63a5\u62f7\u8d1d\u5230\u5185\u5b58\u8fd0\u884c\uff1b\u800c\u5f15\u7528\u52a8\u6001\u5171\u4eab\u5e93\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u90e8\u5206\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u52a0\u8f7d\u5668\u5728\u52a0\u8f7d\u8be5\u6587\u4ef6\u7684\u65f6\u5019\u9700\u8981\u5148\u4ea4\u7531\u94fe\u63a5\u5668\u8fdb\u884c\u8fdb\u4e00\u6b65\u94fe\u63a5\u5904\u7406\uff08reloacation\uff09\uff0c\u94fe\u63a5\u5904\u7406\u5b8c\u540e\u624d\u53ef\u8fd0\u884c\u3002 \u5f15\u7528\u9759\u6001\u5e93\u7f16\u8bd1\uff0c\u9759\u6001\u5e93\u4e2d\u88ab\u76ee\u6807\u6267\u884c\u6587\u4ef6\u6240\u5f15\u7528\u7684\u6a21\u5757\u90fd\u4f1a\u88ab\u62f7\u8d1d\u5230\u76ee\u6807\u6267\u884c\u6587\u4ef6\u4e2d\u6765\uff1b\u800c\u5f15\u7528\u52a8\u6001\u5e93\u8fdb\u884c\u7f16\u8bd1\u52a8\u6001\u5e93\u91cc\u88ab\u5f15\u7528\u7684\u6a21\u5757\u4e0d\u4f1a\u88ab\u62f7\u8d1d\uff0c\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5e93\u91cc\u9762\u7684\u6a21\u5757\u53ea\u6709\u4e00\u4efd\u5168\u5c40\u62f7\u8d1d\uff0c\u6240\u6709\u6267\u884c\u6587\u4ef6\u5728\u8fd0\u884c\u65f6\u90fd\u5f15\u7528\u540c\u4e00\u4efd\u62f7\u8d1d\u3002 \u4e0b\u9762\u5220\u9664'libvector.a'\uff0c \u7136\u540e\u6d4b\u8bd5\u4e00\u4e0b\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u6784\u5efa\u8fc7\u7a0b\u3002 \u7f16\u8bd1\u53ef\u5171\u4eab\u7684libvector.so \u5e93\u6587\u4ef6 gcc -shared -fpic -o libvector.so addvec.c multvec.c The '-fpic' flag directs the compiler to generate position-independent code. The '-shared' flag directs the linker to create a shared object file. \u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u5b8c\u6210\u4e86so\u5e93\u6587\u4ef6\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u628a\u5b83\u94fe\u63a5\u7684\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u3002 \u6784\u5efa\u5f15\u7528\u52a8\u6001\u5e93\u7684\u53ef\u6267\u884c\u6587\u4ef6 gcc -o prog2 main.c ./libvector.so \u8fd9\u5c31\u6784\u5efa\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u6267\u884c ldd prog2 \u67e5\u770b\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u94fe\u63a5\u72b6\u6001\u3002 $ ldd prog2 linux-vdso.so.1 (0x00007ffc79fa5000) ./libvector.so (0x00007f472cad5000) libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f472c6e4000) /lib64/ld-linux-x86-64.so.2 (0x00007f472ced9000) \u8fd0\u884c\uff0c\u6210\u529f\u3002 $ ./prog2 z = [4 6] \u4f46\u662f\u5047\u5982\u6211\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u5bf9\u7528\u52a8\u6001\u5e93\u8fdb\u884c\u94fe\u63a5\uff0c gcc -o prog3 main.c -L. -lvector \u6216\u8005,\u540c\u6837\u662f\u662f\u524d\u9762\u7684\u90a3\u79cd\u65b9\u5f0f\uff0c\u4f46\u662flibvector.so\u524d\u9762\u7684\u8def\u5f84'./'\u53bb\u6389 gcc -o prog2 main.c libvector.so \u53ef\u4ee5\u7f16\u8bd1\u6210\u529f\uff0c\u4f46\u662f\uff0c\u8fd0\u884c\uff0c\u53d1\u73b0\u62a5\u9519\u4e86\u3002 $ ./prog3 ./prog3: error while loading shared libraries: libvector.so: cannot open shared object file: No such file or directory \u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 ldd prog3 \uff0c\u67e5\u770b\u94fe\u63a5\u72b6\u6001 $ ldd prog3 linux-vdso.so.1 (0x00007ffcf5ba8000) libvector.so => not found libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f15d3199000) /lib64/ld-linux-x86-64.so.2 (0x00007f15d378c000) \u53d1\u73b0\u201c libvector.so \u201d\u90a3\u91cc\u663e\u793a\u201cnot found\u201d\uff0c \u610f\u601d\u662f\u627e\u4e0d\u5230libvector.so \u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff0c\u539f\u6765\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7f16\u8bd1\u751f\u6210\u7684\u76ee\u6807\u6267\u884c\u6587\u4ef6\u6ca1\u6709\u8def\u5f84\u4fe1\u606f\uff0c\u2018-L.\u2019\u4ec5\u4ec5\u662f\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u7528\u5230\u7684\uff0c\u5728\u52a0\u8f7d\u8fd0\u884c\u7684\u65f6\u5019\u94fe\u63a5\u5668\u9996\u5148\u8981\u5230\u7cfb\u7edf\u8bbe\u5b9a\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u4e2d\u67e5\u627e\u5f15\u7528\u5230\u7684so\u6587\u4ef6\u4ee5\u8fdb\u884c\u94fe\u63a5\u5904\u7406\uff08relocation\uff09\uff0c\u800c\u6211\u4eec\u7684libvector.so\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u4e0d\u5728\u7cfb\u7edf\u8bbe\u5b9a\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u4e2d\uff0c\u6240\u4ee5\u627e\u4e0d\u5230\u3002\u9759\u6001\u94fe\u63a5\u5e93\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u5462\uff0c \u56e0\u4e3a\u5f15\u7528\u9759\u6001\u94fe\u63a5\u5e93\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u751f\u6210\u7684\u662f\u4e00\u4e2a\u5b8c\u5168\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u662f\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\uff08\u62f7\u8d1d\uff09\u5230\u5185\u5b58\u8fd0\u884c\u7684\uff1b\u800c\u5f15\u7528\u52a8\u6001\u94fe\u63a5\u5e93\u8fdb\u884c\u7f16\u8bd1\u751f\u6210\u7684\u662f\u4e00\u4e2a\u90e8\u5206\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u52a0\u8f7d\u5668\u5728\u52a0\u8f7d\u8fd9\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u8981\u5148\u4ea4\u7ed9\u94fe\u63a5\u5668\u8fdb\u884c\u94fe\u63a5\u5904\u7406\uff08relocation\uff09,\u94fe\u63a5\u5904\u7406\u5b8c\u6210\u540e\u518d\u5f00\u59cb\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u3002 \u5982\u4f55\u89e3\u51b3\u5462\uff0c\u56e0\u4e3a\u52a8\u6001\u94fe\u63a5\u5e93\u67e5\u627e\u76ee\u5f55\u662f\u5728\u201c/etc/ld.so.conf\u201d\u6587\u4ef6\u4e2d\u8bbe\u5b9a\u7684\uff0c\u53ef\u4ee5\u628a\u201c./libvector.so\u201d\u6240\u5728\u76ee\u5f55\u7684\u8def\u5f84\u52a0\u5165\u5230\u7cfb\u7edf\u7684\u201c/etc/ld.so.conf\u201d\u6587\u4ef6\u4e2d\uff0c\u52a0\u5165\u4e4b\u540e\u8fd8\u9700\u8981\u6267\u884c sudo ldconfig \u547d\u4ee4\u8ba9\u65b0\u8def\u5f84\u751f\u6548\u3002 \u6216\u8005\uff0c \u4e5f\u53ef\u4ee5\u7528 export directory_of_library \u7684\u65b9\u5f0f\uff0c\u5982 export LD_LIBRARY_PATH=/home/vagrant/test \u5b8c\u6210\u52a8\u6001\u94fe\u63a5\u5e93\u8def\u5f84\u8bbe\u7f6e\u540e\uff0c\u518d\u6267\u884cldd\u547d\u4ee4\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u53d1\u73b0libvector.so\u5df2\u7ecf\u53ef\u4ee5\u627e\u5230\u4e86\u3002 $ ldd ./prog3 linux-vdso.so.1 (0x00007ffe22fa3000) libvector.so => /home/vagrant/test/libvector.so (0x00007fe25cd03000) libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fe25c912000) /lib64/ld-linux-x86-64.so.2 (0x00007fe25d107000) \u518d\u4e00\u6b21\u8fd0\u884c\uff0c\u6210\u529f\u3002 $ ./prog3 z = [4 6]","title":"Dynamic Linking with Shared Libraries"},{"location":"GCC/GCC%20compiling%20processes/","text":"The 4 processes of GCC compiling The 4 processes of GCC compiling were preprocess -> compile -> assemble -> link . Consider the C program in the following. It will serve as a simple running example throughout this chapter that will allow us to make some important points about how linkers work. main.c int sum(int *a, int n); int array[2] = {1, 2}; int main(){ int val = sum(array, 2); return val; } sum.c int sum(int *a, int n){ int i, s=0; for(i=0;i<n;i++){ s += a[i]; } return s; } Most compilation systems provide a compiler driver that invokes the language preprocessor, compiler, assembler, and linker, as needed on behalf of the user. For example, to build the example program using the GNU compilation system, we might invoke the gcc driver by typing the following command to the shell: gcc -Og -o prog main.c sum.c The following figure summarizes the activities of the driver as it translates the example program from an ASCII source file into an executable object file. (If you want to see these steps for yourself, run gcc with the -v option.) 1) preprocess The driver first runs the C preprocessor (cpp), which translates the C source file main.c into an ASCII intermediate file main.i: cpp [other arguments] main.c main.i or gcc -E main.c -o main.i In this stage, the compiler will combin the header files link stdio.h into the targe file. 2) compile Next, the driver runs the C compiler (cc1), which translates main.i into an ASCII assembly-language file main.s: cc1 /tmp/main.i -Og [other arguments] -o main.s or # -Og \u662f\u4e3a\u4e86\u751f\u6210\u672a\u7ecf\u4f18\u5316\u7684\u4e0e\u539f\u4ee3\u7801\u7ed3\u6784\u76f8\u7b26\u7684\u6c47\u7f16\u4ee3\u7801 gcc -Og -S main.i -o main.s You can also generate assmbly-languange from C file directly gcc -Og -S main.c -o main.s 3) assemble Then, the driver runs the assembler (as), which translates main.s into a binary relocatable object file main.o: as [other arguments] -o main.o main.s or gcc -c main.s -o main.o The driver goes through the same process to generate sum.o. 4) link Finally, it runs the linker program ld, which combines main.o and sum.o, along with the necessary system object files, to create the binary executable object file prog: ld -o prog [system object files and args] main.o sum.o or gcc main.o sum.o -o prog 5) run To run the executable prog, we type its name on the Linux shell\u2019s command line: ./prog The shell invokes a function in the operating system called the loader, which copies the code and data in the executable file prog into memory, and then transfers control to the beginning of the program. GCC Options Options Description -c \u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5\uff0c\u751f\u6210*.o\u6587\u4ef6 -S \u751f\u6210\u6c47\u7f16\u4ee3\u7801*.s\u6587\u4ef6 -E \u9884\u7f16\u8bd1 \u751f\u6210*.i\u6587\u4ef6 -g \u5728\u53ef\u6267\u884c\u7a0b\u5e8f\u91cc\u5305\u542b\u4e86\u8c03\u8bd5\u4fe1\u606f\uff0c\u53ef\u7528 gdb \u8c03\u8bd5 -o \u628a\u8f93\u51fa\u6587\u4ef6\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6\u91cc -O \u751f\u6210\u6c47\u7f16\u4ee3\u7801\u7684\u4f18\u5316\u7ea7\u522b, -Og\u4fdd\u6301\u4e0e\u539f\u4ee3\u7801\u7ed3\u6784\u4e00\u6837\uff0c-O1 -O2 \u4f9d\u6b21\u5bf9\u5e94\u66f4\u9ad8\u7684\u4f18\u5316\u7ea7\u522b","title":"GCC compiling processes"},{"location":"GCC/GCC%20compiling%20processes/#the-4-processes-of-gcc-compiling","text":"The 4 processes of GCC compiling were preprocess -> compile -> assemble -> link . Consider the C program in the following. It will serve as a simple running example throughout this chapter that will allow us to make some important points about how linkers work. main.c int sum(int *a, int n); int array[2] = {1, 2}; int main(){ int val = sum(array, 2); return val; } sum.c int sum(int *a, int n){ int i, s=0; for(i=0;i<n;i++){ s += a[i]; } return s; } Most compilation systems provide a compiler driver that invokes the language preprocessor, compiler, assembler, and linker, as needed on behalf of the user. For example, to build the example program using the GNU compilation system, we might invoke the gcc driver by typing the following command to the shell: gcc -Og -o prog main.c sum.c The following figure summarizes the activities of the driver as it translates the example program from an ASCII source file into an executable object file. (If you want to see these steps for yourself, run gcc with the -v option.) 1) preprocess The driver first runs the C preprocessor (cpp), which translates the C source file main.c into an ASCII intermediate file main.i: cpp [other arguments] main.c main.i or gcc -E main.c -o main.i In this stage, the compiler will combin the header files link stdio.h into the targe file. 2) compile Next, the driver runs the C compiler (cc1), which translates main.i into an ASCII assembly-language file main.s: cc1 /tmp/main.i -Og [other arguments] -o main.s or # -Og \u662f\u4e3a\u4e86\u751f\u6210\u672a\u7ecf\u4f18\u5316\u7684\u4e0e\u539f\u4ee3\u7801\u7ed3\u6784\u76f8\u7b26\u7684\u6c47\u7f16\u4ee3\u7801 gcc -Og -S main.i -o main.s You can also generate assmbly-languange from C file directly gcc -Og -S main.c -o main.s 3) assemble Then, the driver runs the assembler (as), which translates main.s into a binary relocatable object file main.o: as [other arguments] -o main.o main.s or gcc -c main.s -o main.o The driver goes through the same process to generate sum.o. 4) link Finally, it runs the linker program ld, which combines main.o and sum.o, along with the necessary system object files, to create the binary executable object file prog: ld -o prog [system object files and args] main.o sum.o or gcc main.o sum.o -o prog 5) run To run the executable prog, we type its name on the Linux shell\u2019s command line: ./prog The shell invokes a function in the operating system called the loader, which copies the code and data in the executable file prog into memory, and then transfers control to the beginning of the program.","title":"The 4 processes of GCC compiling"},{"location":"GCC/GCC%20compiling%20processes/#gcc-options","text":"Options Description -c \u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5\uff0c\u751f\u6210*.o\u6587\u4ef6 -S \u751f\u6210\u6c47\u7f16\u4ee3\u7801*.s\u6587\u4ef6 -E \u9884\u7f16\u8bd1 \u751f\u6210*.i\u6587\u4ef6 -g \u5728\u53ef\u6267\u884c\u7a0b\u5e8f\u91cc\u5305\u542b\u4e86\u8c03\u8bd5\u4fe1\u606f\uff0c\u53ef\u7528 gdb \u8c03\u8bd5 -o \u628a\u8f93\u51fa\u6587\u4ef6\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6\u91cc -O \u751f\u6210\u6c47\u7f16\u4ee3\u7801\u7684\u4f18\u5316\u7ea7\u522b, -Og\u4fdd\u6301\u4e0e\u539f\u4ee3\u7801\u7ed3\u6784\u4e00\u6837\uff0c-O1 -O2 \u4f9d\u6b21\u5bf9\u5e94\u66f4\u9ad8\u7684\u4f18\u5316\u7ea7\u522b","title":"GCC Options"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/","text":"Tools for Manipulating Object Files There are a number of tools available on Linux systems to help you understand and manipulate object files. In particular, the GNU binutils package is especially helpful and runs on every Linux platform. ar Creates static libraries, and inserts, deletes, lists, and extracts members. c Create the archive. t List the files in the archive. r Replace or add the specified files to the archive. d Delete the specified archive files. x Extract the specified archive members into the files named by the command line arguments. If no members are specified, all the members of the archive are extracted into the current directory. s Running ar s on an archive is equivalent to running ranlib on it. arc rcs libvec.a addvec.o multvec.o strings Lists all of the printable strings contained in an object file. $ strings main.o strip Deletes symbol table information from an object file. $ strip main.o nm Lists the symbols defined in the symbol table of an object file. $ nm main.o size Lists the names and sizes of the sections in an object file. $ size multvec.o readelf Displays the complete structure of an object file, including all of the information encoded in the ELF header. Subsumes the functionality of size and nm. Check ELF header by typing: readelf -h kernel Check program headers by typing: readelf -l kernel Check section headers by typing: readelf -S kernel objdump The mother of all binary tools.Can display all of the informationinan object file. Its most useful function is disassembling the binary instructions in the '.text' section. Examine the full list of the names, sizes, and link addresses of all the sections in the kernel executable by typing: objdump -h obj/kern/kernel Inspect the program headers by typing: objdump -x obj/kern/kernel You can see the entry point by typing: objdump -f obj/kern/kernel You can read symbol table by typing: objdump -G obj/kern/kernel Disassemble object file objdump -d obj/kern/kernel ldd Lists the shared libraries that an executable needs at run time. ldd prog addr2line convert addresses into file names and line numbers. $ addr2line -e kernel/kernel 0000000080002de2","title":"Tools for Manipulating Object Files"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/#tools-for-manipulating-object-files","text":"There are a number of tools available on Linux systems to help you understand and manipulate object files. In particular, the GNU binutils package is especially helpful and runs on every Linux platform.","title":"Tools for Manipulating Object Files"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/#ar","text":"Creates static libraries, and inserts, deletes, lists, and extracts members. c Create the archive. t List the files in the archive. r Replace or add the specified files to the archive. d Delete the specified archive files. x Extract the specified archive members into the files named by the command line arguments. If no members are specified, all the members of the archive are extracted into the current directory. s Running ar s on an archive is equivalent to running ranlib on it. arc rcs libvec.a addvec.o multvec.o","title":"ar"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/#strings","text":"Lists all of the printable strings contained in an object file. $ strings main.o","title":"strings"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/#strip","text":"Deletes symbol table information from an object file. $ strip main.o","title":"strip"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/#nm","text":"Lists the symbols defined in the symbol table of an object file. $ nm main.o","title":"nm"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/#size","text":"Lists the names and sizes of the sections in an object file. $ size multvec.o","title":"size"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/#readelf","text":"Displays the complete structure of an object file, including all of the information encoded in the ELF header. Subsumes the functionality of size and nm. Check ELF header by typing: readelf -h kernel Check program headers by typing: readelf -l kernel Check section headers by typing: readelf -S kernel","title":"readelf"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/#objdump","text":"The mother of all binary tools.Can display all of the informationinan object file. Its most useful function is disassembling the binary instructions in the '.text' section. Examine the full list of the names, sizes, and link addresses of all the sections in the kernel executable by typing: objdump -h obj/kern/kernel Inspect the program headers by typing: objdump -x obj/kern/kernel You can see the entry point by typing: objdump -f obj/kern/kernel You can read symbol table by typing: objdump -G obj/kern/kernel Disassemble object file objdump -d obj/kern/kernel","title":"objdump"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/#ldd","text":"Lists the shared libraries that an executable needs at run time. ldd prog","title":"ldd"},{"location":"GCC/Tools%20for%20Manipulating%20Object%20Files/#addr2line","text":"convert addresses into file names and line numbers. $ addr2line -e kernel/kernel 0000000080002de2","title":"addr2line"},{"location":"GCC/Using-Assembly-Language-with-C/","text":"","title":"Using Assembly Language with C"},{"location":"GDB/gdb%20demo/","text":"Source Code map.c #include <stdio.h> #include <stdlib.h> /* A statically allocated variable */ int foo; /* UNCOMMENT THIS LINE for 3.4.3*/ extern int recur(int i); /* A statically allocated, pre-initialized variable */ volatile int stuff = 7; int main(int argc, char *argv[]) { /* A stack allocated variable */ volatile int n = 3; int arr[] = {1, 2, 3, 4, 5}; if(argc=2) n = atoi(argv[1]); /* Dynamically allocate some stuff */ char *buf1 = malloc(100); /* ... and some more stuff */ volatile char *buf2 = malloc(100); sprintf(buf1, \"hello world\"); recur(n); return 0; } recurse.c #include <stdio.h> int recur(int i) { /* A stack allocated variable within a recursive function */ int j = i; printf(\"%i\\n\", i); if (i > 0) { return recur(i - 1); } return 0; } Compiling You have to tell your compiler to compile your code with symbolic debugging information included. Here's how to do it with gcc, with the -g switch: gcc -g -Wall map.c recurse.c -o map # -g: This option adds debugging info in the operating system's native format. e.g. stabs, COFF, XCOFF, or DWARF. # -ggdb: It produces debugging information compatible for use by GDB. i.e. the most expressive format available. e.g. DWARF 2, stabs, or the native format if none is available. # -Wall: It enables all warnings in the code. Starting The Debugger There are two ways you can feed arguments to your program in the GDB debugger. Please follow the steps given in the below code snippet. Method-I: $ gdb --args program arg1 arg2 ... argN (gdb) r Method-II: $ gdb program (gdb) r arg1 arg2 ... argN #Note: Run GDB with <--silent> option to hide the extra output it emits on the console. Fot this demo, we launch a program called map in the debugger and pass argument 5. $ gdb --args map 5 Print Source Code in GDB Console If your program hits a breakpoint, then you may want to look at the source code around it. In such a case, use the l (or list) command which prints ten lines of source code at a time. You can also pass the list command a line number or a function name to tell GDB where to start. list <filename>:<function>/<linenum> # The filename may be omitted. list <first>,<last> # If last is omitted the context starting at start is printed instead of centered around it. Display lines after a line number (gdb) list 12 Display lines after a function (gdb) list CheckValidEmail Note: GDB debugger usually shows a few lines back of the point you requested. Breakpoints Break into a line or a Function. To set a new breakpoint, You use the break or b command, and specify a location, which can be a function name, line number, or source file:line number. break <where> Temporary break point tbreak <where> Where linenum function filename:linenum/function *instruction_addr For this demo, let's set a breakpoint at main(), and start the program: (gdb) break main Breakpoint 1 at 0x6e9: file map.c, line 18. set breakpoint at special instruction address break *0x000000008000215a when you type run command , program will suspend at the first break point it encounter. (gdb) run Starting program: /home/vagrant/code/personal/hw-intro/map 5 Breakpoint 1, main (argc=2, argv=0x7fffffffe3a8) at map.c:18 18 if(argc<2) n= 3; (gdb) Break after a condition. break <where> if <condition> Break at the given location if the condition is met. Conditions may be almost any C expression that evaluate to true or false. (gdb) break recur if i==1 Breakpoint 2 at 0x55555555475e: file recurse.c, line 5. (gdb) continue Continuing. Breakpoint 2, recur (i=1) at recurse.c:5 5 int j = i; (gdb) print i $1 = 1 Set/change the condition condition <breakpoint> <condition> Set/change a condition on anexisting breakpoint. (gdb) condition 2 i==0 Skip/Ignore Breakpoints While you are running through a loop in your code and wouldn\u2019t want to pause for every break, then command can help. Here is how you can skip a breakpoint the number of times you want. First, check the index of the breakpoint which you want to ignore. Use the command. (gdb) break test.cpp:18 Breakpoint 1 at 0x8005cd: file test.cpp, line 18. (gdb) info breakpoints Num Type Disp Enb Address What 1 breakpoint keep y 0x00000000008005cd in main() at test.cpp:18 Then, run the following command in the GDB debugger. Say, we want to ignore the break for 1000 times. (gdb) ignore 1 1000 Will ignore next 1000 crossings of breakpoint 1. (gdb) run Starting program: /home/sample/src/test Program received signal SIGSEGV, Segmentation fault. 0x00000000008005cd in main () at test.cpp:18 18 i = *ptr++; (gdb) info breakpoints Num Type Disp Enb Address What 1 breakpoint keep y 0x00000000008005cd in main() at test.cpp:18 breakpoint already hit 10 times ignore next 990 hits (gdb) In the above example, we set the ignore limit to 1000, but the program crashed after the 10th iteration. So you should revise the ignore limit to 9 and step in to debug the condition which is leading to the crash. That\u2019s how the command helps in isolating issues. Remove Breakpoints & Quit from GDB Deleting a Breakpoint The option is the GDB shortcut for deleting any breakpoint. (gdb) d <breakpoint num> GDB Commands to Print Debug Info Command to execute after the program hits a break-point. With the help of the keyword, you can set multiple commands to run every time a breakpoint occurs. See the below code snippet for clarity. (gdb) b CheckValidEmail Breakpoint 1 at 0x8049d87: file ../../test/testgdb.c, line 107. (gdb) command 1 # Note: #1: 1 is the breakpoint number. #2: Here you can specify set of commands to execute. #3: To close the command block, use the \"end\" keyword. >print port >print IPAddr >print User >print Pwd >end (gdb) Examining the call stack Show call stack. (gdb) backtrace (or bt as shortcut) [full] # OR (gdb) info stack The command backtrace (or bt ) will show you the current function call stack, with the current function at the top, and the callers in order beneath it: Use of the 'full' qualifier also prints the values of the local variables. (gdb) backtrace #0 recur (i=3) at recurse.c:5 #1 0x0000555555554832 in recur (i=4) at recurse.c:9 #2 0x0000555555554832 in recur (i=5) at recurse.c:9 #3 0x00005555555547dd in main (argc=2, argv=0x7fffffffe3a8) at map.c:29 print the current stack of the executing program You can call the command which will return the trace along with the line number. (gdb) where #Tell you the point where the program died. print the line number in GDB while debugging It\u2019s the gdb command that will return the line number. (gdb) frame #0 0x0807826e in main () at test.c:18 18 if(is_exist(list, 10) != 0 ) { (gdb) Examining Variables Print Variables Print content of variable/memory location/register. print/format <what> Format a: Pointer. c: Read as integer, print as character. d Integer, signed decimal. f: Floating point number. o: Integer, print as octal. s: Try to treat as C string. t: Integer, print as binary (t = \"two\u201c). u: Integer, unsigned decimal. x: Integer, print as hexadecimal. What \"expression\" Almost any C expression, including function calls (must be prefixed with a cast to tell GDB the return value type). \"file_name::variable_name\" Content of the variable defined in the named file (static variables). \"function::variable_name\" Content of the variable defined in the named function (if on the stack). \"{type}address\" Content at address, interpreted as being of the C type type. \"$register\" Content of named register. Interesting registers are $esp (stack pointer), $ebp (frame pointer) and $eip (instruction pointer). (gdb) print n $1 = 5 (gdb) print/t n $2 = 101 Print a Macro Printing a macro requires that you first compile your program with an extra option. Use the <-ggdb3> flag. (gdb) p/x DBG_FLAG $1 = 0x00 # Note: The x in the p/x would cause to print output in hex format. Print Array print *array@len Example: If you have defined an integer array as int arr[5] = {1, 2, 3, 4, 5}; (gdb) p arr $1 = {1, 2, 3, 4, 5} But the above method would not help if we have a large array of integers say 100 and the need is to print the integers between (96-100) range. For this purpose, you can use following method which works in all cases but is a little complex in nature. (gdb) p *&arr[96]@5 Print the first 3 elements of the Array (gdb) print *arr@3 $4 = {1, 2, 3} printf (gdb) printf \"%08X\\n\", n 00000005 Add Watchers Adding watchpoints is same as telling the debugger to give a dynamic analysis of changes to the variables. And, it\u2019s easy to add a watchpoint in your code. (gdb) watch <expression> Note that watch takes an expression as an argument, so you can put a variable name in there, or something more complex like *(p+5) or a[15] watchpoints are special breakpoints that will trigger whenever an expression changes. Often you just want to know when a variable changes (is written to), and for that you can use the watch command: (gdb) watch n Hardware watchpoint 2: n (gdb) next Hardware watchpoint 2: n Old value = 21845 New value = 3 main (argc=2, argv=0x7fffffffe3a8) at map.c:18 18 if(argc=2) (gdb) 19 n = atoi(argv[1]); (gdb) Hardware watchpoint 2: n Old value = 3 New value = 5 main (argc=2, argv=0x7fffffffe3a8) at map.c:22 22 char *buf1 = malloc(100); (gdb) Display Variables display/format <what> Like print , but print the information after each stepping instruction. For this demo (gdb) display i 1: i = 5 (gdb) next 6 printf(\"%i\\n\", i); 1: i = 5 (gdb) next 5 8 if (i > 0) { 1: i = 5 Examining Memory x/nfu <address> n: How many units to print (default 1). f: Format character (like \"print\u201c). u: Unit. Unit is one of: b: Byte h: Half-word (two bytes) w: Word (four bytes) g: Giant word (eight bytes)) For example, (gdb) x buf1 0x555555756260: \"hello world\" (gdb) x/11x buf1 0x555555756260: 0x68 0x65 0x6c 0x6c 0x6f 0x20 0x77 0x6f 0x555555756268: 0x72 0x6c 0x64 To examine instructions in memory (besides the immediate next one to be executed, which GDB prints automatically), you use the x/i command. This command has the syntax x/Ni ADDR , where N is the number of consecutive instructions to disassemble and ADDR is the memory address at which to start disassembling. x/10i Stepping Next statement Step N statements, proceeding through subroutine calls. next [N] Unlike \"step\", if the current source line calls a subroutine, this command does not enter the subroutine, but instead steps over the call, in effect treating it as a single source line. (gdb) next 19 else n = atoi(argv[1]); (gdb) Hitting Enter key will repeat the last command, this will save you typing next over and over again. Next instruction Step a single assembly instruction, but proceed through subroutine calls. nexti [N] Step into subroutine step [N] Step statement, if it's a subroutine call it will enter into the subroutine. 27 recur(n); (gdb) step recur (i=5) at recurse.c:5 5 int j = i; (gdb) Step instruction Step a single assembly instruction if it's a subroutine call it will enter into the function. stepi [N] finish Continue until the current function returns. (gdb) finish (or fin as shortcut) continue Continue normal execution until the end of programe or the next breakpoint. continue Advance advance <where> To continue to a specific location, use the advance command, specifying a location like those shown in the \"Breakpoints\" section, above. Here's an example which advances from the current location until the function \"recur()\" is called: (gdb) advance recur recur (i=5) at recurse.c:5 5 int j = i; (gdb) advance is just shorthand for \"continue to this temporary breakpoint.\" directory directory <directory> Add directory to the list of directories that is searched for sources. Load file (gdb) file kernel/kernel Call function call functionName(args...) execute arbitrary function and print the result. (gdb) call recur(3) $1 = 0 Informations info breakpoints : Print informations about the breakpoints and watchpoints. info registers : Print values of all registers. info args : Print the arguments to the function of the current stack frame. info locals : Print the local variables in the currently selected stack frame. info display : Print informations about the \"displays\u201c. info sharedlibrary : List loaded shared libraries. info signals : List all signals and how they are cur- rently handled. info threads : List all threads. info frame : Disassemble Disassemble the current function or given location. disassemble <where> For this demo, I have enter into recur function, then I execute disassemble , gdb print out the assembly code of this \"recur\" function. (gdb) disassemble Dump of assembler code for function recur: 0x00005555555547f8 <+0>: push %rbp 0x00005555555547f9 <+1>: mov %rsp,%rbp 0x00005555555547fc <+4>: sub $0x20,%rsp 0x0000555555554800 <+8>: mov %edi,-0x14(%rbp) => 0x0000555555554803 <+11>: mov -0x14(%rbp),%eax 0x0000555555554806 <+14>: mov %eax,-0x4(%rbp) 0x0000555555554809 <+17>: mov -0x14(%rbp),%eax 0x000055555555480c <+20>: mov %eax,%esi 0x000055555555480e <+22>: lea 0xaf(%rip),%rdi # 0x5555555548c4 0x0000555555554815 <+29>: mov $0x0,%eax 0x000055555555481a <+34>: callq 0x5555555545f0 <printf@plt> 0x000055555555481f <+39>: cmpl $0x0,-0x14(%rbp) 0x0000555555554823 <+43>: jle 0x555555554834 <recur+60> 0x0000555555554825 <+45>: mov -0x14(%rbp),%eax 0x0000555555554828 <+48>: sub $0x1,%eax 0x000055555555482b <+51>: mov %eax,%edi 0x000055555555482d <+53>: callq 0x5555555547f8 <recur> 0x0000555555554832 <+58>: jmp 0x555555554839 <recur+65> 0x0000555555554834 <+60>: mov $0x0,%eax 0x0000555555554839 <+65>: leaveq 0x000055555555483a <+66>: retq End of assembler dump. Layout tui enable show tui window. layout src Standard layout\u2014source on top, command window on the bottom layout asm Just like the \"src\" layout, except it's an assembly window on top layout split Three windows: source on top, assembly in the middle, and command at the bottom layout reg Opens the register window on top of either source or assembly, whichever was opened last tui reg general Show the general registers tui reg float Show the floating point registers tui reg system Show the \"system\" registers tui reg next Show the next page of registers\u2014this is important because there might be pages of registers that aren't in the \"general\", \"float\", or \"system\" sets For this demo, when you type layout asm command ,you will see the interface as following In asm layout , we can use nexti or stepi command to step to the next asm instruction When \"layout\" command split the window into diffrent pieces, we can use 'focus' command to specify which window to focus, for example use focus asm to select asm window, then you can use arrow key to scroll the window. you can also use shortcut key to switch layout. - 'Ctr-x a' or 'Ctr-x 1' Standard layout\u2014source on top, command window on the bottom - 'Ctr-x 2' Three windows: source on top, assembly in the middle, and command at the bottom Note: 'Ctr-x a' means first press and release 'Ctr-x' then click 'a' Help help command Get help on a certain command For example help breakpoint GDB dashboard GDB dashboard is a standalone \".gdbinit\" file. Just place \".gdbinit\" in your home directory or project directory, for example with: wget -P ~ https://git.io/.gdbinit Then debug as usual, the dashboard will appear automatically every time the inferior program stops. Optionally install Pygments to enable syntax highlighting: pip install pygments If it has no effect, execute the following command in the terminal set auto-load local-gdbinit on LLDB In MacOS use LLDB instead. Some other commands https://beej.us/guide/bggdb https://wiki.ubuntu.org.cn/\u7528GDB\u8c03\u8bd5\u7a0b\u5e8f http://www.unknownroad.com/rtfm/gdbtut/gdbtoc.html https://sourceware.org/gdb/current/onlinedocs/gdb GDB Tutorial: Advanced Debugging Tips For C/C++ Programmers Give me 15 minutes & I'll change your view of GDB [VIDEO]","title":"gdb demo"},{"location":"GDB/gdb%20demo/#source-code","text":"map.c #include <stdio.h> #include <stdlib.h> /* A statically allocated variable */ int foo; /* UNCOMMENT THIS LINE for 3.4.3*/ extern int recur(int i); /* A statically allocated, pre-initialized variable */ volatile int stuff = 7; int main(int argc, char *argv[]) { /* A stack allocated variable */ volatile int n = 3; int arr[] = {1, 2, 3, 4, 5}; if(argc=2) n = atoi(argv[1]); /* Dynamically allocate some stuff */ char *buf1 = malloc(100); /* ... and some more stuff */ volatile char *buf2 = malloc(100); sprintf(buf1, \"hello world\"); recur(n); return 0; } recurse.c #include <stdio.h> int recur(int i) { /* A stack allocated variable within a recursive function */ int j = i; printf(\"%i\\n\", i); if (i > 0) { return recur(i - 1); } return 0; }","title":"Source Code"},{"location":"GDB/gdb%20demo/#compiling","text":"You have to tell your compiler to compile your code with symbolic debugging information included. Here's how to do it with gcc, with the -g switch: gcc -g -Wall map.c recurse.c -o map # -g: This option adds debugging info in the operating system's native format. e.g. stabs, COFF, XCOFF, or DWARF. # -ggdb: It produces debugging information compatible for use by GDB. i.e. the most expressive format available. e.g. DWARF 2, stabs, or the native format if none is available. # -Wall: It enables all warnings in the code.","title":"Compiling"},{"location":"GDB/gdb%20demo/#starting-the-debugger","text":"There are two ways you can feed arguments to your program in the GDB debugger. Please follow the steps given in the below code snippet. Method-I: $ gdb --args program arg1 arg2 ... argN (gdb) r Method-II: $ gdb program (gdb) r arg1 arg2 ... argN #Note: Run GDB with <--silent> option to hide the extra output it emits on the console. Fot this demo, we launch a program called map in the debugger and pass argument 5. $ gdb --args map 5","title":"Starting The Debugger"},{"location":"GDB/gdb%20demo/#print-source-code-in-gdb-console","text":"If your program hits a breakpoint, then you may want to look at the source code around it. In such a case, use the l (or list) command which prints ten lines of source code at a time. You can also pass the list command a line number or a function name to tell GDB where to start. list <filename>:<function>/<linenum> # The filename may be omitted. list <first>,<last> # If last is omitted the context starting at start is printed instead of centered around it. Display lines after a line number (gdb) list 12 Display lines after a function (gdb) list CheckValidEmail Note: GDB debugger usually shows a few lines back of the point you requested.","title":"Print Source Code in GDB Console"},{"location":"GDB/gdb%20demo/#breakpoints","text":"","title":"Breakpoints"},{"location":"GDB/gdb%20demo/#break-into-a-line-or-a-function","text":"To set a new breakpoint, You use the break or b command, and specify a location, which can be a function name, line number, or source file:line number. break <where> Temporary break point tbreak <where> Where linenum function filename:linenum/function *instruction_addr For this demo, let's set a breakpoint at main(), and start the program: (gdb) break main Breakpoint 1 at 0x6e9: file map.c, line 18. set breakpoint at special instruction address break *0x000000008000215a when you type run command , program will suspend at the first break point it encounter. (gdb) run Starting program: /home/vagrant/code/personal/hw-intro/map 5 Breakpoint 1, main (argc=2, argv=0x7fffffffe3a8) at map.c:18 18 if(argc<2) n= 3; (gdb)","title":"Break into a line or a Function."},{"location":"GDB/gdb%20demo/#break-after-a-condition","text":"break <where> if <condition> Break at the given location if the condition is met. Conditions may be almost any C expression that evaluate to true or false. (gdb) break recur if i==1 Breakpoint 2 at 0x55555555475e: file recurse.c, line 5. (gdb) continue Continuing. Breakpoint 2, recur (i=1) at recurse.c:5 5 int j = i; (gdb) print i $1 = 1 Set/change the condition condition <breakpoint> <condition> Set/change a condition on anexisting breakpoint. (gdb) condition 2 i==0","title":"Break after a condition."},{"location":"GDB/gdb%20demo/#skipignore-breakpoints","text":"While you are running through a loop in your code and wouldn\u2019t want to pause for every break, then command can help. Here is how you can skip a breakpoint the number of times you want. First, check the index of the breakpoint which you want to ignore. Use the command. (gdb) break test.cpp:18 Breakpoint 1 at 0x8005cd: file test.cpp, line 18. (gdb) info breakpoints Num Type Disp Enb Address What 1 breakpoint keep y 0x00000000008005cd in main() at test.cpp:18 Then, run the following command in the GDB debugger. Say, we want to ignore the break for 1000 times. (gdb) ignore 1 1000 Will ignore next 1000 crossings of breakpoint 1. (gdb) run Starting program: /home/sample/src/test Program received signal SIGSEGV, Segmentation fault. 0x00000000008005cd in main () at test.cpp:18 18 i = *ptr++; (gdb) info breakpoints Num Type Disp Enb Address What 1 breakpoint keep y 0x00000000008005cd in main() at test.cpp:18 breakpoint already hit 10 times ignore next 990 hits (gdb) In the above example, we set the ignore limit to 1000, but the program crashed after the 10th iteration. So you should revise the ignore limit to 9 and step in to debug the condition which is leading to the crash. That\u2019s how the command helps in isolating issues.","title":"Skip/Ignore Breakpoints"},{"location":"GDB/gdb%20demo/#remove-breakpoints-quit-from-gdb","text":"Deleting a Breakpoint The option is the GDB shortcut for deleting any breakpoint. (gdb) d <breakpoint num>","title":"Remove Breakpoints &amp; Quit from GDB"},{"location":"GDB/gdb%20demo/#gdb-commands-to-print-debug-info","text":"","title":"GDB Commands to Print Debug Info"},{"location":"GDB/gdb%20demo/#command-to-execute-after-the-program-hits-a-break-point","text":"With the help of the keyword, you can set multiple commands to run every time a breakpoint occurs. See the below code snippet for clarity. (gdb) b CheckValidEmail Breakpoint 1 at 0x8049d87: file ../../test/testgdb.c, line 107. (gdb) command 1 # Note: #1: 1 is the breakpoint number. #2: Here you can specify set of commands to execute. #3: To close the command block, use the \"end\" keyword. >print port >print IPAddr >print User >print Pwd >end (gdb)","title":"Command to execute after the program hits a break-point."},{"location":"GDB/gdb%20demo/#examining-the-call-stack","text":"Show call stack. (gdb) backtrace (or bt as shortcut) [full] # OR (gdb) info stack The command backtrace (or bt ) will show you the current function call stack, with the current function at the top, and the callers in order beneath it: Use of the 'full' qualifier also prints the values of the local variables. (gdb) backtrace #0 recur (i=3) at recurse.c:5 #1 0x0000555555554832 in recur (i=4) at recurse.c:9 #2 0x0000555555554832 in recur (i=5) at recurse.c:9 #3 0x00005555555547dd in main (argc=2, argv=0x7fffffffe3a8) at map.c:29","title":"Examining the call stack"},{"location":"GDB/gdb%20demo/#print-the-current-stack-of-the-executing-program","text":"You can call the command which will return the trace along with the line number. (gdb) where #Tell you the point where the program died.","title":"print the current stack of the executing program"},{"location":"GDB/gdb%20demo/#print-the-line-number-in-gdb-while-debugging","text":"It\u2019s the gdb command that will return the line number. (gdb) frame #0 0x0807826e in main () at test.c:18 18 if(is_exist(list, 10) != 0 ) { (gdb)","title":"print the line number in GDB while debugging"},{"location":"GDB/gdb%20demo/#examining-variables","text":"","title":"Examining Variables"},{"location":"GDB/gdb%20demo/#print-variables","text":"Print content of variable/memory location/register. print/format <what> Format a: Pointer. c: Read as integer, print as character. d Integer, signed decimal. f: Floating point number. o: Integer, print as octal. s: Try to treat as C string. t: Integer, print as binary (t = \"two\u201c). u: Integer, unsigned decimal. x: Integer, print as hexadecimal. What \"expression\" Almost any C expression, including function calls (must be prefixed with a cast to tell GDB the return value type). \"file_name::variable_name\" Content of the variable defined in the named file (static variables). \"function::variable_name\" Content of the variable defined in the named function (if on the stack). \"{type}address\" Content at address, interpreted as being of the C type type. \"$register\" Content of named register. Interesting registers are $esp (stack pointer), $ebp (frame pointer) and $eip (instruction pointer). (gdb) print n $1 = 5 (gdb) print/t n $2 = 101","title":"Print Variables"},{"location":"GDB/gdb%20demo/#print-a-macro","text":"Printing a macro requires that you first compile your program with an extra option. Use the <-ggdb3> flag. (gdb) p/x DBG_FLAG $1 = 0x00 # Note: The x in the p/x would cause to print output in hex format.","title":"Print a Macro"},{"location":"GDB/gdb%20demo/#print-array","text":"print *array@len Example: If you have defined an integer array as int arr[5] = {1, 2, 3, 4, 5}; (gdb) p arr $1 = {1, 2, 3, 4, 5} But the above method would not help if we have a large array of integers say 100 and the need is to print the integers between (96-100) range. For this purpose, you can use following method which works in all cases but is a little complex in nature. (gdb) p *&arr[96]@5 Print the first 3 elements of the Array (gdb) print *arr@3 $4 = {1, 2, 3}","title":"Print Array"},{"location":"GDB/gdb%20demo/#printf","text":"(gdb) printf \"%08X\\n\", n 00000005","title":"printf"},{"location":"GDB/gdb%20demo/#add-watchers","text":"Adding watchpoints is same as telling the debugger to give a dynamic analysis of changes to the variables. And, it\u2019s easy to add a watchpoint in your code. (gdb) watch <expression> Note that watch takes an expression as an argument, so you can put a variable name in there, or something more complex like *(p+5) or a[15] watchpoints are special breakpoints that will trigger whenever an expression changes. Often you just want to know when a variable changes (is written to), and for that you can use the watch command: (gdb) watch n Hardware watchpoint 2: n (gdb) next Hardware watchpoint 2: n Old value = 21845 New value = 3 main (argc=2, argv=0x7fffffffe3a8) at map.c:18 18 if(argc=2) (gdb) 19 n = atoi(argv[1]); (gdb) Hardware watchpoint 2: n Old value = 3 New value = 5 main (argc=2, argv=0x7fffffffe3a8) at map.c:22 22 char *buf1 = malloc(100); (gdb)","title":"Add Watchers"},{"location":"GDB/gdb%20demo/#display-variables","text":"display/format <what> Like print , but print the information after each stepping instruction. For this demo (gdb) display i 1: i = 5 (gdb) next 6 printf(\"%i\\n\", i); 1: i = 5 (gdb) next 5 8 if (i > 0) { 1: i = 5","title":"Display Variables"},{"location":"GDB/gdb%20demo/#examining-memory","text":"x/nfu <address> n: How many units to print (default 1). f: Format character (like \"print\u201c). u: Unit. Unit is one of: b: Byte h: Half-word (two bytes) w: Word (four bytes) g: Giant word (eight bytes)) For example, (gdb) x buf1 0x555555756260: \"hello world\" (gdb) x/11x buf1 0x555555756260: 0x68 0x65 0x6c 0x6c 0x6f 0x20 0x77 0x6f 0x555555756268: 0x72 0x6c 0x64 To examine instructions in memory (besides the immediate next one to be executed, which GDB prints automatically), you use the x/i command. This command has the syntax x/Ni ADDR , where N is the number of consecutive instructions to disassemble and ADDR is the memory address at which to start disassembling. x/10i","title":"Examining Memory"},{"location":"GDB/gdb%20demo/#stepping","text":"","title":"Stepping"},{"location":"GDB/gdb%20demo/#next-statement","text":"Step N statements, proceeding through subroutine calls. next [N] Unlike \"step\", if the current source line calls a subroutine, this command does not enter the subroutine, but instead steps over the call, in effect treating it as a single source line. (gdb) next 19 else n = atoi(argv[1]); (gdb) Hitting Enter key will repeat the last command, this will save you typing next over and over again.","title":"Next statement"},{"location":"GDB/gdb%20demo/#next-instruction","text":"Step a single assembly instruction, but proceed through subroutine calls. nexti [N]","title":"Next instruction"},{"location":"GDB/gdb%20demo/#step-into-subroutine","text":"step [N] Step statement, if it's a subroutine call it will enter into the subroutine. 27 recur(n); (gdb) step recur (i=5) at recurse.c:5 5 int j = i; (gdb)","title":"Step into subroutine"},{"location":"GDB/gdb%20demo/#step-instruction","text":"Step a single assembly instruction if it's a subroutine call it will enter into the function. stepi [N]","title":"Step instruction"},{"location":"GDB/gdb%20demo/#finish","text":"Continue until the current function returns. (gdb) finish (or fin as shortcut)","title":"finish"},{"location":"GDB/gdb%20demo/#continue","text":"Continue normal execution until the end of programe or the next breakpoint. continue","title":"continue"},{"location":"GDB/gdb%20demo/#advance","text":"advance <where> To continue to a specific location, use the advance command, specifying a location like those shown in the \"Breakpoints\" section, above. Here's an example which advances from the current location until the function \"recur()\" is called: (gdb) advance recur recur (i=5) at recurse.c:5 5 int j = i; (gdb) advance is just shorthand for \"continue to this temporary breakpoint.\"","title":"Advance"},{"location":"GDB/gdb%20demo/#directory","text":"directory <directory> Add directory to the list of directories that is searched for sources.","title":"directory"},{"location":"GDB/gdb%20demo/#load-file","text":"(gdb) file kernel/kernel","title":"Load file"},{"location":"GDB/gdb%20demo/#call-function","text":"call functionName(args...) execute arbitrary function and print the result. (gdb) call recur(3) $1 = 0","title":"Call function"},{"location":"GDB/gdb%20demo/#informations","text":"info breakpoints : Print informations about the breakpoints and watchpoints. info registers : Print values of all registers. info args : Print the arguments to the function of the current stack frame. info locals : Print the local variables in the currently selected stack frame. info display : Print informations about the \"displays\u201c. info sharedlibrary : List loaded shared libraries. info signals : List all signals and how they are cur- rently handled. info threads : List all threads. info frame :","title":"Informations"},{"location":"GDB/gdb%20demo/#disassemble","text":"Disassemble the current function or given location. disassemble <where> For this demo, I have enter into recur function, then I execute disassemble , gdb print out the assembly code of this \"recur\" function. (gdb) disassemble Dump of assembler code for function recur: 0x00005555555547f8 <+0>: push %rbp 0x00005555555547f9 <+1>: mov %rsp,%rbp 0x00005555555547fc <+4>: sub $0x20,%rsp 0x0000555555554800 <+8>: mov %edi,-0x14(%rbp) => 0x0000555555554803 <+11>: mov -0x14(%rbp),%eax 0x0000555555554806 <+14>: mov %eax,-0x4(%rbp) 0x0000555555554809 <+17>: mov -0x14(%rbp),%eax 0x000055555555480c <+20>: mov %eax,%esi 0x000055555555480e <+22>: lea 0xaf(%rip),%rdi # 0x5555555548c4 0x0000555555554815 <+29>: mov $0x0,%eax 0x000055555555481a <+34>: callq 0x5555555545f0 <printf@plt> 0x000055555555481f <+39>: cmpl $0x0,-0x14(%rbp) 0x0000555555554823 <+43>: jle 0x555555554834 <recur+60> 0x0000555555554825 <+45>: mov -0x14(%rbp),%eax 0x0000555555554828 <+48>: sub $0x1,%eax 0x000055555555482b <+51>: mov %eax,%edi 0x000055555555482d <+53>: callq 0x5555555547f8 <recur> 0x0000555555554832 <+58>: jmp 0x555555554839 <recur+65> 0x0000555555554834 <+60>: mov $0x0,%eax 0x0000555555554839 <+65>: leaveq 0x000055555555483a <+66>: retq End of assembler dump.","title":"Disassemble"},{"location":"GDB/gdb%20demo/#layout","text":"tui enable show tui window. layout src Standard layout\u2014source on top, command window on the bottom layout asm Just like the \"src\" layout, except it's an assembly window on top layout split Three windows: source on top, assembly in the middle, and command at the bottom layout reg Opens the register window on top of either source or assembly, whichever was opened last tui reg general Show the general registers tui reg float Show the floating point registers tui reg system Show the \"system\" registers tui reg next Show the next page of registers\u2014this is important because there might be pages of registers that aren't in the \"general\", \"float\", or \"system\" sets For this demo, when you type layout asm command ,you will see the interface as following In asm layout , we can use nexti or stepi command to step to the next asm instruction When \"layout\" command split the window into diffrent pieces, we can use 'focus' command to specify which window to focus, for example use focus asm to select asm window, then you can use arrow key to scroll the window. you can also use shortcut key to switch layout. - 'Ctr-x a' or 'Ctr-x 1' Standard layout\u2014source on top, command window on the bottom - 'Ctr-x 2' Three windows: source on top, assembly in the middle, and command at the bottom Note: 'Ctr-x a' means first press and release 'Ctr-x' then click 'a'","title":"Layout"},{"location":"GDB/gdb%20demo/#help","text":"help command Get help on a certain command For example help breakpoint","title":"Help"},{"location":"GDB/gdb%20demo/#gdb-dashboard","text":"GDB dashboard is a standalone \".gdbinit\" file. Just place \".gdbinit\" in your home directory or project directory, for example with: wget -P ~ https://git.io/.gdbinit Then debug as usual, the dashboard will appear automatically every time the inferior program stops. Optionally install Pygments to enable syntax highlighting: pip install pygments If it has no effect, execute the following command in the terminal set auto-load local-gdbinit on","title":"GDB dashboard"},{"location":"GDB/gdb%20demo/#lldb","text":"In MacOS use LLDB instead.","title":"LLDB"},{"location":"GDB/gdb%20demo/#some-other-commands","text":"https://beej.us/guide/bggdb https://wiki.ubuntu.org.cn/\u7528GDB\u8c03\u8bd5\u7a0b\u5e8f http://www.unknownroad.com/rtfm/gdbtut/gdbtoc.html https://sourceware.org/gdb/current/onlinedocs/gdb GDB Tutorial: Advanced Debugging Tips For C/C++ Programmers Give me 15 minutes & I'll change your view of GDB [VIDEO]","title":"Some other commands"},{"location":"Git/Git%20commands/","text":"New branch ## git checkout -b <new-branch> <start-point> ## same as git switch -c <new-branch> <start-point> \u672c\u5730\u6240\u6709\u5df2\u8ffd\u8e2a\u4e14\u5df2\u4fee\u6539\u7684\u4f46\u6ca1\u6709\u7684\u63d0\u4ea4\u7684\uff0c\u90fd\u8fd4\u56de\u5230\u539f\u6765\u7684\u72b6\u6001 # revert all local uncommitted changes (should be executed in repo root): git checkout . # revert uncommitted changes only to particular file or directory git checkout dir | file \u5220\u9664\u672a\u8ffd\u8e2a\u7684\u6587\u4ef6 git clean -df -n \u4e0d\u5b9e\u9645\u5220\u9664\uff0c\u53ea\u662f\u8fdb\u884c\u6f14\u7ec3\uff0c\u5c55\u793a\u5c06\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u6709\u54ea\u4e9b\u6587\u4ef6\u5c06\u8981\u88ab\u5220\u9664\u3002\uff08\u53ef\u5148\u4f7f\u7528\u8be5\u547d\u4ee4\u53c2\u6570\uff0c\u7136- \u540e\u518d\u51b3\u5b9a\u662f\u5426\u6267\u884c\uff09 -f \u5220\u9664\u6587\u4ef6 -i \u663e\u793a\u5c06\u8981\u5220\u9664\u7684\u6587\u4ef6 -d \u9012\u5f52\u5220\u9664\u76ee\u5f55\u53ca\u6587\u4ef6\uff08\u672a\u8ddf\u8e2a\u7684\uff09 -q \u4ec5\u663e\u793a\u9519\u8bef\uff0c\u6210\u529f\u5220\u9664\u7684\u6587\u4ef6\u4e0d\u663e\u793a \u653e\u5f03\u6240\u6709\u672a\u63d0\u4ea4\u7684\u4fee\u6539 # \u5148\u67e5\u770b\u8981\u653e\u5f03\u7684\u4fee\u6539\u7684\u6587\u4ef6 git clean -ndf # \u786e\u8ba4\u65e0\u8bef\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4 git checkout . && git clean -df commit\u7684\u56de\u9000 # \u8fd4\u56de\u5230\u67d0\u4e2a\u8282\u70b9\u4e14\u4e0d\u4fdd\u7559\u4fee\u6539\uff0c\u5df2\u6709\u7684\u6539\u52a8\u4f1a\u4e22\u5931\u3002 git reset --hard checkpoint # \u8fd4\u56de\u5230\u67d0\u4e2a\u8282\u70b9\u5e76\u4fdd\u7559\u4fee\u6539\u3002 \u5df2\u6709\u7684\u6539\u52a8\u4f1a\u4fdd\u7559\u5728\u672a\u63d0\u4ea4\u4e2d\uff0cgit status\u6216git diff\u53ef\u770b\u3002 git reset --soft checkpoint \u6bd4\u8f83\u4e24\u4e2a\u63d0\u4ea4\u70b9\u7684\u6587\u4ef6 git diff oldcheckpoint:filename newcheckpoint:filename Mmerge specific files from another branch git checkout checkpoint file or git checkout --patch checkpoint file git log git log --graph --decorate --oneline --simplify-by-decoration --all \u8bf4\u660e\uff1a - --decorate \u6807\u8bb0\u4f1a\u8ba9git log\u663e\u793a\u6bcf\u4e2acommit\u7684\u5f15\u7528(\u5982:\u5206\u652f\u3001tag\u7b49) - --oneline \u4e00\u884c\u663e\u793a - --simplify-by-decoration \u53ea\u663e\u793a\u88abbranch\u6216tag\u5f15\u7528\u7684commit - --all \u8868\u793a\u663e\u793a\u6240\u6709\u7684branch\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u9009\u62e9\uff0c\u6bd4\u5982\u6211\u6307\u5411\u663e\u793a\u5206\u652fABC\u7684\u5173\u7cfb\uff0c\u5219\u5c06--all\u66ff\u6362\u4e3abranchA branchB branchC \u67e5\u770b\u8c01\u4fee\u6539\u7684\u4ee3\u7801 git blame controllers/admin/contract.js Tag # Creating tag git tag -a v1.1 9fceb02 -m \"hight performance\uff0chight rpc \" git push origin v1.1 git push origin --tags # Delete tag git tag -d <tagname> git push origin --delete <tagname> References gitignore: https://github.com/github/gitignore/tree/main https://www.atlassian.com/git/tutorials/undoing-changes/git-reset https://www.atlassian.com/git/tutorials/ https://git-scm.com/book/en/v2 https://www.atlassian.com/git/tutorials/atlassian-git-cheatsheet http://goo.gl/cLBs3D http://think-like-a-git.net/ https://eagain.net/articles/git-for-computer-scientists/ https://mirrors.edge.kernel.org/pub/software/scm/git/docs/user-manual.html https://docs.github.com/en/get-started/using-git/about-git","title":"Git commands"},{"location":"Git/Git%20commands/#new-branch","text":"## git checkout -b <new-branch> <start-point> ## same as git switch -c <new-branch> <start-point>","title":"New branch"},{"location":"Git/Git%20commands/#_1","text":"# revert all local uncommitted changes (should be executed in repo root): git checkout . # revert uncommitted changes only to particular file or directory git checkout dir | file","title":"\u672c\u5730\u6240\u6709\u5df2\u8ffd\u8e2a\u4e14\u5df2\u4fee\u6539\u7684\u4f46\u6ca1\u6709\u7684\u63d0\u4ea4\u7684\uff0c\u90fd\u8fd4\u56de\u5230\u539f\u6765\u7684\u72b6\u6001"},{"location":"Git/Git%20commands/#_2","text":"git clean -df -n \u4e0d\u5b9e\u9645\u5220\u9664\uff0c\u53ea\u662f\u8fdb\u884c\u6f14\u7ec3\uff0c\u5c55\u793a\u5c06\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u6709\u54ea\u4e9b\u6587\u4ef6\u5c06\u8981\u88ab\u5220\u9664\u3002\uff08\u53ef\u5148\u4f7f\u7528\u8be5\u547d\u4ee4\u53c2\u6570\uff0c\u7136- \u540e\u518d\u51b3\u5b9a\u662f\u5426\u6267\u884c\uff09 -f \u5220\u9664\u6587\u4ef6 -i \u663e\u793a\u5c06\u8981\u5220\u9664\u7684\u6587\u4ef6 -d \u9012\u5f52\u5220\u9664\u76ee\u5f55\u53ca\u6587\u4ef6\uff08\u672a\u8ddf\u8e2a\u7684\uff09 -q \u4ec5\u663e\u793a\u9519\u8bef\uff0c\u6210\u529f\u5220\u9664\u7684\u6587\u4ef6\u4e0d\u663e\u793a","title":"\u5220\u9664\u672a\u8ffd\u8e2a\u7684\u6587\u4ef6"},{"location":"Git/Git%20commands/#_3","text":"# \u5148\u67e5\u770b\u8981\u653e\u5f03\u7684\u4fee\u6539\u7684\u6587\u4ef6 git clean -ndf # \u786e\u8ba4\u65e0\u8bef\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4 git checkout . && git clean -df","title":"\u653e\u5f03\u6240\u6709\u672a\u63d0\u4ea4\u7684\u4fee\u6539"},{"location":"Git/Git%20commands/#commit","text":"# \u8fd4\u56de\u5230\u67d0\u4e2a\u8282\u70b9\u4e14\u4e0d\u4fdd\u7559\u4fee\u6539\uff0c\u5df2\u6709\u7684\u6539\u52a8\u4f1a\u4e22\u5931\u3002 git reset --hard checkpoint # \u8fd4\u56de\u5230\u67d0\u4e2a\u8282\u70b9\u5e76\u4fdd\u7559\u4fee\u6539\u3002 \u5df2\u6709\u7684\u6539\u52a8\u4f1a\u4fdd\u7559\u5728\u672a\u63d0\u4ea4\u4e2d\uff0cgit status\u6216git diff\u53ef\u770b\u3002 git reset --soft checkpoint","title":"commit\u7684\u56de\u9000"},{"location":"Git/Git%20commands/#_4","text":"git diff oldcheckpoint:filename newcheckpoint:filename","title":"\u6bd4\u8f83\u4e24\u4e2a\u63d0\u4ea4\u70b9\u7684\u6587\u4ef6"},{"location":"Git/Git%20commands/#mmerge-specific-files-from-another-branch","text":"git checkout checkpoint file or git checkout --patch checkpoint file","title":"Mmerge specific files from another branch"},{"location":"Git/Git%20commands/#git-log","text":"git log --graph --decorate --oneline --simplify-by-decoration --all \u8bf4\u660e\uff1a - --decorate \u6807\u8bb0\u4f1a\u8ba9git log\u663e\u793a\u6bcf\u4e2acommit\u7684\u5f15\u7528(\u5982:\u5206\u652f\u3001tag\u7b49) - --oneline \u4e00\u884c\u663e\u793a - --simplify-by-decoration \u53ea\u663e\u793a\u88abbranch\u6216tag\u5f15\u7528\u7684commit - --all \u8868\u793a\u663e\u793a\u6240\u6709\u7684branch\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u9009\u62e9\uff0c\u6bd4\u5982\u6211\u6307\u5411\u663e\u793a\u5206\u652fABC\u7684\u5173\u7cfb\uff0c\u5219\u5c06--all\u66ff\u6362\u4e3abranchA branchB branchC","title":"git log"},{"location":"Git/Git%20commands/#_5","text":"git blame controllers/admin/contract.js","title":"\u67e5\u770b\u8c01\u4fee\u6539\u7684\u4ee3\u7801"},{"location":"Git/Git%20commands/#tag","text":"# Creating tag git tag -a v1.1 9fceb02 -m \"hight performance\uff0chight rpc \" git push origin v1.1 git push origin --tags # Delete tag git tag -d <tagname> git push origin --delete <tagname>","title":"Tag"},{"location":"Git/Git%20commands/#references","text":"gitignore: https://github.com/github/gitignore/tree/main https://www.atlassian.com/git/tutorials/undoing-changes/git-reset https://www.atlassian.com/git/tutorials/ https://git-scm.com/book/en/v2 https://www.atlassian.com/git/tutorials/atlassian-git-cheatsheet http://goo.gl/cLBs3D http://think-like-a-git.net/ https://eagain.net/articles/git-for-computer-scientists/ https://mirrors.edge.kernel.org/pub/software/scm/git/docs/user-manual.html https://docs.github.com/en/get-started/using-git/about-git","title":"References"},{"location":"Git/git-action/","text":"Automatically Deploy React Project to Your Own Server Using GitHub Actions Deploying your React project automatically to your own server using GitHub Actions involves setting up a CI/CD pipeline that will build your project and then transfer the build files to your server. This is often done using SSH for secure file transfer. Here's a step-by-step guide to help you set this up. Prerequisites SSH Access : Make sure you have SSH access to your server. Node.js : Ensure Node.js is installed on your server. Web Server : Ensure a web server (like Nginx or Apache) is configured to serve your React application. Step-by-Step Guide Set Up SSH Keys First, you need to set up SSH keys for passwordless access from GitHub Actions to your server. Generate an SSH key pair on your local machine: ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" Save the key without a passphrase. Copy the public key to your server: ssh-copy-id -i ~/.ssh/id_rsa.pub user@your-server-ip Add the private key to your GitHub repository as a secret: Go to your GitHub repository. Click on Settings > Secrets > New repository secret. Add a new secret named SSH_PRIVATE_KEY and paste the content of your ~/.ssh/id_rsa file. Create a Deployment Script on Your Server Create a script on your server that will handle the deployment. For example, create a file named deploy.sh in your home directory: #!/bin/bash # Navigate to the web directory cd /path/to/your/web/directory # Remove old build rm -rf build # Unzip new build unzip /path/to/uploaded/build.zip -d build # Restart your web server (if necessary) sudo systemctl restart nginx Make sure this script is executable: chmod +x ~/deploy.sh Create GitHub Action Workflow Create a file named deploy.yml in the .github/workflows directory of your React project: name: Deploy to Server on: push: branches: [ main ] jobs: build: runs-on: ubuntu-latest steps: - name: Checkout repository uses: actions/checkout@v2 - name: Set up Node.js uses: actions/setup-node@v2 with: node-version: '14' - name: Install dependencies run: npm install - name: Build project run: npm run build - name: Archive build files run: zip -r build.zip build - name: Copy files via SSH uses: appleboy/scp-action@v0.1.0 with: host: ${{ secrets.SERVER_IP }} username: ${{ secrets.SERVER_USER }} key: ${{ secrets.SSH_PRIVATE_KEY }} source: \"build.zip\" target: \"/path/to/uploaded/build.zip\" - name: Execute deployment script uses: appleboy/ssh-action@v0.1.0 with: host: ${{ secrets.SERVER_IP }} username: ${{ secrets.SERVER_USER }} key: ${{ secrets.SSH_PRIVATE_KEY }} script: \"~/deploy.sh\" Add GitHub Secrets Add the following secrets to your GitHub repository: - SERVER_IP: The IP address of your server. - SERVER_USER: The username to log in to your server. - SSH_PRIVATE_KEY: The private SSH key you generated earlier. Push Workflow File Commit and push the deploy.yml file to your GitHub repository: git add .github/workflows/deploy.yml git commit -m \"Add deployment workflow\" git push Conclusion With this setup, every time you push changes to the main branch, GitHub Actions will automatically build your React project, transfer the build files to your server, and run a deployment script to update your application. This ensures that your latest changes are always live on your server.","title":"Automatically Deploy React Project to Your Own Server Using GitHub Actions"},{"location":"Git/git-action/#automatically-deploy-react-project-to-your-own-server-using-github-actions","text":"Deploying your React project automatically to your own server using GitHub Actions involves setting up a CI/CD pipeline that will build your project and then transfer the build files to your server. This is often done using SSH for secure file transfer. Here's a step-by-step guide to help you set this up.","title":"Automatically Deploy React Project to Your Own Server Using GitHub Actions"},{"location":"Git/git-action/#prerequisites","text":"SSH Access : Make sure you have SSH access to your server. Node.js : Ensure Node.js is installed on your server. Web Server : Ensure a web server (like Nginx or Apache) is configured to serve your React application.","title":"Prerequisites"},{"location":"Git/git-action/#step-by-step-guide","text":"Set Up SSH Keys First, you need to set up SSH keys for passwordless access from GitHub Actions to your server. Generate an SSH key pair on your local machine: ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" Save the key without a passphrase. Copy the public key to your server: ssh-copy-id -i ~/.ssh/id_rsa.pub user@your-server-ip Add the private key to your GitHub repository as a secret: Go to your GitHub repository. Click on Settings > Secrets > New repository secret. Add a new secret named SSH_PRIVATE_KEY and paste the content of your ~/.ssh/id_rsa file. Create a Deployment Script on Your Server Create a script on your server that will handle the deployment. For example, create a file named deploy.sh in your home directory: #!/bin/bash # Navigate to the web directory cd /path/to/your/web/directory # Remove old build rm -rf build # Unzip new build unzip /path/to/uploaded/build.zip -d build # Restart your web server (if necessary) sudo systemctl restart nginx Make sure this script is executable: chmod +x ~/deploy.sh Create GitHub Action Workflow Create a file named deploy.yml in the .github/workflows directory of your React project: name: Deploy to Server on: push: branches: [ main ] jobs: build: runs-on: ubuntu-latest steps: - name: Checkout repository uses: actions/checkout@v2 - name: Set up Node.js uses: actions/setup-node@v2 with: node-version: '14' - name: Install dependencies run: npm install - name: Build project run: npm run build - name: Archive build files run: zip -r build.zip build - name: Copy files via SSH uses: appleboy/scp-action@v0.1.0 with: host: ${{ secrets.SERVER_IP }} username: ${{ secrets.SERVER_USER }} key: ${{ secrets.SSH_PRIVATE_KEY }} source: \"build.zip\" target: \"/path/to/uploaded/build.zip\" - name: Execute deployment script uses: appleboy/ssh-action@v0.1.0 with: host: ${{ secrets.SERVER_IP }} username: ${{ secrets.SERVER_USER }} key: ${{ secrets.SSH_PRIVATE_KEY }} script: \"~/deploy.sh\" Add GitHub Secrets Add the following secrets to your GitHub repository: - SERVER_IP: The IP address of your server. - SERVER_USER: The username to log in to your server. - SSH_PRIVATE_KEY: The private SSH key you generated earlier. Push Workflow File Commit and push the deploy.yml file to your GitHub repository: git add .github/workflows/deploy.yml git commit -m \"Add deployment workflow\" git push","title":"Step-by-Step Guide"},{"location":"Git/git-action/#conclusion","text":"With this setup, every time you push changes to the main branch, GitHub Actions will automatically build your React project, transfer the build files to your server, and run a deployment script to update your application. This ensures that your latest changes are always live on your server.","title":"Conclusion"},{"location":"MacOS/Launching%20Custom%20Daemons%20Using%20launchd/","text":"In OSX I needed a shell script to execute at login. There are a few different ways to perform this so I thought it might be helpful to document what your options are. This is the shell script I will execute: #!/bin/bash function start() { echo ${PATH} echo \"start mkdocs\" # It should not append a & symbol to the end as urual to run the command in the background, cause we will let launch to take over the task. /Library/Frameworks/Python.framework/Versions/3.10/bin/mkdocs serve } function stop() { echo \"stop mkdocs client...\" ps -ef | grep \"mkdocs\" | awk '{ print $2 }' | xargs kill } case ${1} in \"start\") start ;; \"stop\") stop ;; \"restart\") stop sleep 3 start ;; \"\") start ;; *) echo \"error arguents\" exit 1 ;; esac This script was named \" blogserver.sh \" locating in my blog diractory \"\\~/wk/blog/\". It start my blogserver, so that I can browse my blogs located in my own cumputer in the browser. It should be noted that the services programe you are going to excute should not append a & symbol to the end as urual to daemonize , cause we will let launchd to take over the task. If you do this way, launchd will lose track of it and attempt to relaunch it. The interface to launchd is a tool called launchctl which allows for loading and unloading daemons into launchd. XML formatted plist files are used to describe operations loaded into launchctl. <?xml version=\"1.0\" encoding=\"utf-8\"?> <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"> <plist version=\"1.0\"> <dict> <key>Label</key> <string>mkdocs.blogs</string> <key>ProgramArguments</key> <array> <string>./blogserver.sh</string> <string>start</string> </array> <key>WorkingDirectory</key> <string>/Users/wzq/wk/blog</string> <key>RunAtLoad</key> <true /> <key>StandardErrorPath</key> <string>/Users/wzq/Library/Logs/myblogs.log</string> <key>StandardOutPath</key> <string>/Users/wzq/Library/Logs/myblogs.log</string> </dict> </plist> The above file mkdocs.blogs.plist needs to be saved in the ~/Library/LaunchAgents directory. As you can see the xml dictates that the \" blogserver.sh \" file should be executed at load, note we no longer need a \".command\" file extension. We will now use launchctl to load our plist file. launchctl load ~/Library/LaunchAgents/mkdocs.blogs.plist To verify that your script executed correctly lets ask launchctl to show us what is running. launchctl list | grep \"mkdocs.blogs\" You will likely see an entries with three columns. Mine looks like this: 758 0 mkdocs.blogs The first column is the process id. The second column displays the last exit status of the job, zero represent success. Property list A list of often used keys follows below. All keys are optional unless otherwise noted. For a full list, see Apple's manpage for launchd.plist. Key Type Description Label String The name of the job. By convention, the job label is the same as the plist file name, without the .plist extension. Required. Program String A path to an executable. Useful for simple launches. At least one of Program or ProgramArguments is required. ProgramArguments Array of strings An array of strings representing a UNIX command. The first string is generally a path to an executable, while latter strings contain options or parameters. At least one of Program or ProgramArguments is required. UserName String (defaults to root or current user) The job will be run as the given user, who may (or may not) be the user who submitted it to launchd. RunAtLoad Boolean (defaults to NO) A boolean flag that defines if a task is launched immediately when the job is loaded into launchd. StartOnMount Boolean (defaults to NO) A boolean flag that defines if a task is launched when a new filesystem is mounted. QueueDirectories Array of strings Watch a directory for new files. The directory must be empty to begin with, and must be returned to an empty state before QueueDirectories will launch its task again. WatchPaths Array of strings Watch a filesystem path for changes. Can be a file or folder. StartInterval Integer Schedules job to run on a repeating schedule. Indicates number of seconds to wait between runs. StartCalendarInterval Dictionary of integers or Array of dictionaries of integers Job scheduling. The syntax is similar to cron . RootDirectory String The job will be chrooted into this directory before execution. WorkingDirectory String The job will be chdired into this directory before execution. StandardInPath, StandardOutPath, StandardErrorPath String Keys to determine files for input and output for the launched process. LowPriorityIO Boolean Tells the kernel that this task is of a low priority when doing filesystem I/O. AbandonProcessGroup Boolean (defaults to NO) A boolean flag that defines whether subprocesses launched from a task launched by launchd will be killed when the task ends. Useful where a short-lived task starts a long-lived subtask, but may result in zombie processes. SessionCreate Boolean (defaults to NO) A boolean flag that defines whether a security session will be created for the task and its subprocesses. Reference https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html##//apple_ref/doc/uid/10000172i-SW7-BCIEDDBJ https://en.wikipedia.org/wiki/Launchd \\","title":"Launching Custom Daemons Using launchd"},{"location":"MacOS/Launching%20Custom%20Daemons%20Using%20launchd/#property-list","text":"A list of often used keys follows below. All keys are optional unless otherwise noted. For a full list, see Apple's manpage for launchd.plist. Key Type Description Label String The name of the job. By convention, the job label is the same as the plist file name, without the .plist extension. Required. Program String A path to an executable. Useful for simple launches. At least one of Program or ProgramArguments is required. ProgramArguments Array of strings An array of strings representing a UNIX command. The first string is generally a path to an executable, while latter strings contain options or parameters. At least one of Program or ProgramArguments is required. UserName String (defaults to root or current user) The job will be run as the given user, who may (or may not) be the user who submitted it to launchd. RunAtLoad Boolean (defaults to NO) A boolean flag that defines if a task is launched immediately when the job is loaded into launchd. StartOnMount Boolean (defaults to NO) A boolean flag that defines if a task is launched when a new filesystem is mounted. QueueDirectories Array of strings Watch a directory for new files. The directory must be empty to begin with, and must be returned to an empty state before QueueDirectories will launch its task again. WatchPaths Array of strings Watch a filesystem path for changes. Can be a file or folder. StartInterval Integer Schedules job to run on a repeating schedule. Indicates number of seconds to wait between runs. StartCalendarInterval Dictionary of integers or Array of dictionaries of integers Job scheduling. The syntax is similar to cron . RootDirectory String The job will be chrooted into this directory before execution. WorkingDirectory String The job will be chdired into this directory before execution. StandardInPath, StandardOutPath, StandardErrorPath String Keys to determine files for input and output for the launched process. LowPriorityIO Boolean Tells the kernel that this task is of a low priority when doing filesystem I/O. AbandonProcessGroup Boolean (defaults to NO) A boolean flag that defines whether subprocesses launched from a task launched by launchd will be killed when the task ends. Useful where a short-lived task starts a long-lived subtask, but may result in zombie processes. SessionCreate Boolean (defaults to NO) A boolean flag that defines whether a security session will be created for the task and its subprocesses.","title":"Property list"},{"location":"MacOS/Launching%20Custom%20Daemons%20Using%20launchd/#reference","text":"https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html##//apple_ref/doc/uid/10000172i-SW7-BCIEDDBJ https://en.wikipedia.org/wiki/Launchd \\","title":"Reference"},{"location":"MacOS/MacOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","text":"\u7f51\u7edc netstat -f inet -n -p TCP UD \u67e5\u770b\u7aef\u53e3\u5360\u7528 lsof -i:8080 kill $(lsof -t -i:8080) # \u67e5\u627e\u5e76\u5173\u95ed\u6307\u5b9a\u7aef\u53e3\u53f7\u7684\u8fdb\u7a0b lsof -i:8000 -i:5000 | awk '{if(NR>1)print $2}' | uniq | xargs kill netstat -anvp tcp | grep 8000 | awk '{print $9}' \u8f93\u51fa\u5230\u526a\u5207\u7248 echo hello | pbcopy Empty Terminal on Mac using keyboard shortcut \u2318 + K \u9759\u97f3 \"Fn + F10\" \u663e\u793a\u9690\u85cf\u6587\u4ef6 cmd + shift + .","title":"MacOS\u5e38\u7528\u547d\u4ee4"},{"location":"MacOS/MacOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","text":"netstat -f inet -n -p TCP UD","title":"\u7f51\u7edc"},{"location":"MacOS/MacOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","text":"lsof -i:8080 kill $(lsof -t -i:8080) # \u67e5\u627e\u5e76\u5173\u95ed\u6307\u5b9a\u7aef\u53e3\u53f7\u7684\u8fdb\u7a0b lsof -i:8000 -i:5000 | awk '{if(NR>1)print $2}' | uniq | xargs kill netstat -anvp tcp | grep 8000 | awk '{print $9}'","title":"\u67e5\u770b\u7aef\u53e3\u5360\u7528"},{"location":"MacOS/MacOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","text":"echo hello | pbcopy","title":"\u8f93\u51fa\u5230\u526a\u5207\u7248"},{"location":"MacOS/MacOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#empty-terminal-on-mac-using-keyboard-shortcut","text":"\u2318 + K","title":"Empty Terminal on Mac using keyboard shortcut"},{"location":"MacOS/MacOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_4","text":"\"Fn + F10\"","title":"\u9759\u97f3"},{"location":"MacOS/MacOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_5","text":"cmd + shift + .","title":"\u663e\u793a\u9690\u85cf\u6587\u4ef6"},{"location":"MacOS/MacOS%E5%BF%85%E5%A4%87/","text":"xcode xcode-select --install Homebrew /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" java brew cask install java","title":"MacOS\u5fc5\u5907"},{"location":"MacOS/MacOS%E5%BF%85%E5%A4%87/#xcode","text":"xcode-select --install","title":"xcode"},{"location":"MacOS/MacOS%E5%BF%85%E5%A4%87/#homebrew","text":"/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"","title":"Homebrew"},{"location":"MacOS/MacOS%E5%BF%85%E5%A4%87/#java","text":"brew cask install java","title":"java"},{"location":"Markdown/Markdown%20Syntax/","text":"MacDown Hello there! I\u2019m MacDown , the open source Markdown editor for OS X. Let me introduce myself. Markdown and I Markdown is a plain text formatting syntax created by John Gruber, aiming to provide a easy-to-read and feasible markup. The original Markdown syntax specification can be found here . MacDown is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel. I support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the Markdown preference pane . You can specify extra HTML rendering options through the Rendering preference pane . You can customize the editor window to you liking in the Editor preferences pane : You can configure various application (that's me!) behaviors in the General preference pane . The Basics Before I tell you about all the extra syntaxes and capabilities I have, I'll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the Markdown preference pane . Lets jump right in. Line Breaks To force a line break, put two spaces and a newline (return) at the end of the line. These lines won't break These lines will break Strong and Emphasize Strong : **Strong** or __Strong__ (Command-B) Emphasize : *Emphasize* or _Emphasize_ [^emphasize] (Command-I) Headers (like this one!) Header 1 ======== Header 2 -------- or # Header 1 ## Header 2 ### Header 3 #### Header 4 ##### Header 5 ###### Header 6 Links and Email Inline Just put angle brackets around an email and it becomes clickable: uranusjr@gmail.com <uranusjr@gmail.com> Same thing with urls: http://macdown.uranusjr.com <http://macdown.uranusjr.com> Perhaps you want to some link text like this: Macdown Website [Macdown Website](http://macdown.uranusjr.com \"Title\") (The title is optional) Reference style Sometimes it looks too messy to include big long urls inline, or you want to keep all your urls together. Make a link [a link][arbitrary_id] then on it's own line anywhere else in the file: [arbitrary_id]: http://macdown.uranusjr.com \"Title\" If the link text itself would make a good id, you can link like this [like this][] , then on it's own line anywhere else in the file: [like this]: http://macdown.uranusjr.com Images Inline ![Alt Image Text](path/or/url/to.jpg \"Optional Title\") Reference style ![Alt Image Text][image-id] on it's own line elsewhere: [image-id]: path/or/url/to.jpg \"Optional Title\" Lists Lists must be preceded by a blank line (or block element) Unordered lists start each item with a * - works too Indent a level to make a nested list Ordered lists are supported. Start each item (number-period-space) like 1. It doesn't matter what number you use, I will render them sequentially So you might want to start each line with 1. and let me sort it out Here is the code: * Lists must be preceded by a blank line (or block element) * Unordered lists start each item with a `*` - `-` works too * Indent a level to make a nested list 1. Ordered lists are supported. 2. Start each item (number-period-space) like `1. ` 42. It doesn't matter what number you use, I will render them sequentially 1. So you might want to start each line with `1.` and let me sort it out Block Quote Angle brackets > are used for block quotes. Technically not every line needs to start with a > as long as there are no empty lines between paragraphs. Looks kinda ugly though. Block quotes can be nested. Multiple Levels Most markdown syntaxes work inside block quotes. Lists Links Etc. Here is the code: > Angle brackets `>` are used for block quotes. Technically not every line needs to start with a `>` as long as there are no empty lines between paragraphs. > Looks kinda ugly though. > > Block quotes can be nested. > > > Multiple Levels > > Most markdown syntaxes work inside block quotes. > > * Lists > * [Links][arbitrary_id] > * Etc. Inline Code Inline code is indicated by surrounding it with backticks: `Inline code` If your code has `backticks` that need to be displayed, you can use double backticks: ``Code with `backticks` `` (mind the spaces preceding the final set of backticks) Block Code If you indent at least four spaces or one tab, I'll display a code block. print('This is a code block') print('The block must be preceded by a blank line') print('Then indent at least 4 spaces or 1 tab') print('Nesting does nothing. Your code is displayed Literally') I also know how to do something called Fenced Code Blocks which I will tell you about later. Horizontal Rules If you type three asterisks *** or three dashes --- on a line, I'll display a horizontal rule: The Markdown Preference Pane This is where I keep all preferences related to how I parse markdown into html. Document Formatting The Smartypants extension automatically transforms straight quotes ( \" and ' ) in your text into typographer\u2019s quotes ( \u201c , \u201d , \u2018 , and \u2019 ) according to the context. Very useful if you\u2019re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence. Block Formatting Table This is a table: First Header Second Header Content Cell Content Cell Content Cell Content Cell You can align cell contents with syntax like this: Left Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 The left- and right-most pipes ( | ) are only aesthetic, and can be omitted. The spaces don\u2019t matter, either. Alignment depends solely on : marks. Fenced Code Block This is a fenced code block: print ('Hello world!)' You can also use waves ( ~ ) instead of back ticks ( ` ): print('Hello world!') You can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the Enable highlighting in code blocks option. This is what happens if you enable it: I support many popular languages as well as some generic syntax descriptions that can be used if your language of choice is not supported. See relevant sections on the official site for a full list of supported syntaxes. Inline Formatting The following is a list of optional inline markups supported: Option name Markup Result if enabled Intra-word emphasis So A*maz*ing So A maz ing Strikethrough \\~~Much wow\\~~ Much wow Underline [^under] _So doge_ So doge Quote [^quote] \\\"Such editor\\\" Such editor Highlight \\==So good\\== So good Superscript hoge\\^(fuga) hoge fuga Autolink http://t.co http://t.co Footnotes [\\^4] and [\\^4]: [^4] and footnote 4 [^4]: You don't have to use a number. Arbitrary things like [^footy note4] and [^footy note4]: will also work. But they will render as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes. The Rendering Preference Pane This is where I keep preferences relating to how I render and style the parsed markdown in the preview window. CSS You can choose different css files for me to use to render your html. You can even customize or add your own custom css files. Syntax Highlighting You have already seen how I can syntax highlight your fenced code blocks. See the Fenced Code Block section if you haven\u2019t! You can also choose different themes for syntax highlighting. TeX-like Math Syntax I can also render TeX-like math syntaxes, if you allow me to.[^math] I can do inline math like this: \\( 1 + 1 \\) or this (in MathML): 1 + 1 , and block math: \\[ A^T_S = B \\] or (in MathML) A S T = B Task List Syntax [x] I can render checkbox list syntax [x] I support nesting [x] I support ordered and unordered lists [ ] I don't support clicking checkboxes directly in the html window Jekyll front-matter If you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with --- . For example: --- title: \"Macdown is my friend\" date: 2014-06-06 20:00:00 --- Render newline literally Normally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some other program render it. The General Preferences Pane This is where I keep preferences related to application behavior. The General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit command-R instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases. The Editor Preference Pane This is where I keep preferences related to the behavior and styling of the editing window. Styling My editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of Mou \u2019s creator, Chen Luo) if you don\u2019t know where to start. You can also edit, or even add new themes if you want to! Just click the Reveal button, and start moving things around. Remember to use the correct file extension ( .styles ), though. I\u2019m picky about that. I offer auto-completion and other functions to ease your editing experience. If you don\u2019t like it, however, you can turn them off. Hack On That\u2019s about it. Thanks for listening. I\u2019ll be quiet from now on (unless there\u2019s an update about the app\u2014I\u2019ll remind you for that!). Happy writing! [^emphasize]: If Underlines is turned on, _this notation_ will render as underlined instead of emphasized [^under]: If Underline is disabled _this_ will be rendered as emphasized instead of being underlined. [^quote]: Quote replaces literal \" characters with html <q> tags. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence. Note that Quote is different from blockquote , which is part of standard Markdown. [^math]: Internet connection required. https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax","title":"Markdown Syntax"},{"location":"Markdown/Markdown%20Syntax/#macdown","text":"Hello there! I\u2019m MacDown , the open source Markdown editor for OS X. Let me introduce myself.","title":"MacDown"},{"location":"Markdown/Markdown%20Syntax/#markdown-and-i","text":"Markdown is a plain text formatting syntax created by John Gruber, aiming to provide a easy-to-read and feasible markup. The original Markdown syntax specification can be found here . MacDown is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel. I support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the Markdown preference pane . You can specify extra HTML rendering options through the Rendering preference pane . You can customize the editor window to you liking in the Editor preferences pane : You can configure various application (that's me!) behaviors in the General preference pane .","title":"Markdown and I"},{"location":"Markdown/Markdown%20Syntax/#the-basics","text":"Before I tell you about all the extra syntaxes and capabilities I have, I'll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the Markdown preference pane . Lets jump right in.","title":"The Basics"},{"location":"Markdown/Markdown%20Syntax/#line-breaks","text":"To force a line break, put two spaces and a newline (return) at the end of the line. These lines won't break These lines will break","title":"Line Breaks"},{"location":"Markdown/Markdown%20Syntax/#strong-and-emphasize","text":"Strong : **Strong** or __Strong__ (Command-B) Emphasize : *Emphasize* or _Emphasize_ [^emphasize] (Command-I)","title":"Strong and Emphasize"},{"location":"Markdown/Markdown%20Syntax/#headers-like-this-one","text":"Header 1 ======== Header 2 -------- or # Header 1 ## Header 2 ### Header 3 #### Header 4 ##### Header 5 ###### Header 6","title":"Headers (like this one!)"},{"location":"Markdown/Markdown%20Syntax/#links-and-email","text":"","title":"Links and Email"},{"location":"Markdown/Markdown%20Syntax/#inline","text":"Just put angle brackets around an email and it becomes clickable: uranusjr@gmail.com <uranusjr@gmail.com> Same thing with urls: http://macdown.uranusjr.com <http://macdown.uranusjr.com> Perhaps you want to some link text like this: Macdown Website [Macdown Website](http://macdown.uranusjr.com \"Title\") (The title is optional)","title":"Inline"},{"location":"Markdown/Markdown%20Syntax/#reference-style","text":"Sometimes it looks too messy to include big long urls inline, or you want to keep all your urls together. Make a link [a link][arbitrary_id] then on it's own line anywhere else in the file: [arbitrary_id]: http://macdown.uranusjr.com \"Title\" If the link text itself would make a good id, you can link like this [like this][] , then on it's own line anywhere else in the file: [like this]: http://macdown.uranusjr.com","title":"Reference style"},{"location":"Markdown/Markdown%20Syntax/#images","text":"","title":"Images"},{"location":"Markdown/Markdown%20Syntax/#inline_1","text":"![Alt Image Text](path/or/url/to.jpg \"Optional Title\")","title":"Inline"},{"location":"Markdown/Markdown%20Syntax/#reference-style_1","text":"![Alt Image Text][image-id] on it's own line elsewhere: [image-id]: path/or/url/to.jpg \"Optional Title\"","title":"Reference style"},{"location":"Markdown/Markdown%20Syntax/#lists","text":"Lists must be preceded by a blank line (or block element) Unordered lists start each item with a * - works too Indent a level to make a nested list Ordered lists are supported. Start each item (number-period-space) like 1. It doesn't matter what number you use, I will render them sequentially So you might want to start each line with 1. and let me sort it out Here is the code: * Lists must be preceded by a blank line (or block element) * Unordered lists start each item with a `*` - `-` works too * Indent a level to make a nested list 1. Ordered lists are supported. 2. Start each item (number-period-space) like `1. ` 42. It doesn't matter what number you use, I will render them sequentially 1. So you might want to start each line with `1.` and let me sort it out","title":"Lists"},{"location":"Markdown/Markdown%20Syntax/#block-quote","text":"Angle brackets > are used for block quotes. Technically not every line needs to start with a > as long as there are no empty lines between paragraphs. Looks kinda ugly though. Block quotes can be nested. Multiple Levels Most markdown syntaxes work inside block quotes. Lists Links Etc. Here is the code: > Angle brackets `>` are used for block quotes. Technically not every line needs to start with a `>` as long as there are no empty lines between paragraphs. > Looks kinda ugly though. > > Block quotes can be nested. > > > Multiple Levels > > Most markdown syntaxes work inside block quotes. > > * Lists > * [Links][arbitrary_id] > * Etc.","title":"Block Quote"},{"location":"Markdown/Markdown%20Syntax/#inline-code","text":"Inline code is indicated by surrounding it with backticks: `Inline code` If your code has `backticks` that need to be displayed, you can use double backticks: ``Code with `backticks` `` (mind the spaces preceding the final set of backticks)","title":"Inline Code"},{"location":"Markdown/Markdown%20Syntax/#block-code","text":"If you indent at least four spaces or one tab, I'll display a code block. print('This is a code block') print('The block must be preceded by a blank line') print('Then indent at least 4 spaces or 1 tab') print('Nesting does nothing. Your code is displayed Literally') I also know how to do something called Fenced Code Blocks which I will tell you about later.","title":"Block Code"},{"location":"Markdown/Markdown%20Syntax/#horizontal-rules","text":"If you type three asterisks *** or three dashes --- on a line, I'll display a horizontal rule:","title":"Horizontal Rules"},{"location":"Markdown/Markdown%20Syntax/#the-markdown-preference-pane","text":"This is where I keep all preferences related to how I parse markdown into html.","title":"The Markdown Preference Pane"},{"location":"Markdown/Markdown%20Syntax/#document-formatting","text":"The Smartypants extension automatically transforms straight quotes ( \" and ' ) in your text into typographer\u2019s quotes ( \u201c , \u201d , \u2018 , and \u2019 ) according to the context. Very useful if you\u2019re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence.","title":"Document Formatting"},{"location":"Markdown/Markdown%20Syntax/#block-formatting","text":"","title":"Block Formatting"},{"location":"Markdown/Markdown%20Syntax/#table","text":"This is a table: First Header Second Header Content Cell Content Cell Content Cell Content Cell You can align cell contents with syntax like this: Left Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 The left- and right-most pipes ( | ) are only aesthetic, and can be omitted. The spaces don\u2019t matter, either. Alignment depends solely on : marks.","title":"Table"},{"location":"Markdown/Markdown%20Syntax/#fenced-code-block","text":"This is a fenced code block: print ('Hello world!)' You can also use waves ( ~ ) instead of back ticks ( ` ): print('Hello world!') You can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the Enable highlighting in code blocks option. This is what happens if you enable it: I support many popular languages as well as some generic syntax descriptions that can be used if your language of choice is not supported. See relevant sections on the official site for a full list of supported syntaxes.","title":"Fenced Code Block"},{"location":"Markdown/Markdown%20Syntax/#inline-formatting","text":"The following is a list of optional inline markups supported: Option name Markup Result if enabled Intra-word emphasis So A*maz*ing So A maz ing Strikethrough \\~~Much wow\\~~ Much wow Underline [^under] _So doge_ So doge Quote [^quote] \\\"Such editor\\\" Such editor Highlight \\==So good\\== So good Superscript hoge\\^(fuga) hoge fuga Autolink http://t.co http://t.co Footnotes [\\^4] and [\\^4]: [^4] and footnote 4 [^4]: You don't have to use a number. Arbitrary things like [^footy note4] and [^footy note4]: will also work. But they will render as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes.","title":"Inline Formatting"},{"location":"Markdown/Markdown%20Syntax/#the-rendering-preference-pane","text":"This is where I keep preferences relating to how I render and style the parsed markdown in the preview window.","title":"The Rendering Preference Pane"},{"location":"Markdown/Markdown%20Syntax/#css","text":"You can choose different css files for me to use to render your html. You can even customize or add your own custom css files.","title":"CSS"},{"location":"Markdown/Markdown%20Syntax/#syntax-highlighting","text":"You have already seen how I can syntax highlight your fenced code blocks. See the Fenced Code Block section if you haven\u2019t! You can also choose different themes for syntax highlighting.","title":"Syntax Highlighting"},{"location":"Markdown/Markdown%20Syntax/#tex-like-math-syntax","text":"I can also render TeX-like math syntaxes, if you allow me to.[^math] I can do inline math like this: \\( 1 + 1 \\) or this (in MathML): 1 + 1 , and block math: \\[ A^T_S = B \\] or (in MathML) A S T = B","title":"TeX-like Math Syntax"},{"location":"Markdown/Markdown%20Syntax/#task-list-syntax","text":"[x] I can render checkbox list syntax [x] I support nesting [x] I support ordered and unordered lists [ ] I don't support clicking checkboxes directly in the html window","title":"Task List Syntax"},{"location":"Markdown/Markdown%20Syntax/#jekyll-front-matter","text":"If you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with --- . For example: --- title: \"Macdown is my friend\" date: 2014-06-06 20:00:00 ---","title":"Jekyll front-matter"},{"location":"Markdown/Markdown%20Syntax/#render-newline-literally","text":"Normally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some other program render it.","title":"Render newline literally"},{"location":"Markdown/Markdown%20Syntax/#the-general-preferences-pane","text":"This is where I keep preferences related to application behavior. The General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit command-R instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases.","title":"The General Preferences Pane"},{"location":"Markdown/Markdown%20Syntax/#the-editor-preference-pane","text":"This is where I keep preferences related to the behavior and styling of the editing window.","title":"The Editor Preference Pane"},{"location":"Markdown/Markdown%20Syntax/#styling","text":"My editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of Mou \u2019s creator, Chen Luo) if you don\u2019t know where to start. You can also edit, or even add new themes if you want to! Just click the Reveal button, and start moving things around. Remember to use the correct file extension ( .styles ), though. I\u2019m picky about that. I offer auto-completion and other functions to ease your editing experience. If you don\u2019t like it, however, you can turn them off.","title":"Styling"},{"location":"Markdown/Markdown%20Syntax/#hack-on","text":"That\u2019s about it. Thanks for listening. I\u2019ll be quiet from now on (unless there\u2019s an update about the app\u2014I\u2019ll remind you for that!). Happy writing! [^emphasize]: If Underlines is turned on, _this notation_ will render as underlined instead of emphasized [^under]: If Underline is disabled _this_ will be rendered as emphasized instead of being underlined. [^quote]: Quote replaces literal \" characters with html <q> tags. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence. Note that Quote is different from blockquote , which is part of standard Markdown. [^math]: Internet connection required. https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax","title":"Hack On"},{"location":"Markdown/Markdown%E6%A8%A1%E7%89%88/","text":"\u6b22\u8fce\u4f7f\u7528Markdown\u7f16\u8f91\u5668 KaTeX\u6570\u5b66\u516c\u5f0f \u60a8\u53ef\u4ee5\u4f7f\u7528\u6e32\u67d3LaTeX\u6570\u5b66\u8868\u8fbe\u5f0f KaTeX : Gamma\u516c\u5f0f\u5c55\u793a $$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$$ \u662f\u901a\u8fc7\u6b27\u62c9\u79ef\u5206 $$ \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. $$","title":"Markdown\u6a21\u7248"},{"location":"Markdown/Markdown%E6%A8%A1%E7%89%88/#markdown","text":"","title":"\u6b22\u8fce\u4f7f\u7528Markdown\u7f16\u8f91\u5668"},{"location":"Markdown/Markdown%E6%A8%A1%E7%89%88/#katex","text":"\u60a8\u53ef\u4ee5\u4f7f\u7528\u6e32\u67d3LaTeX\u6570\u5b66\u8868\u8fbe\u5f0f KaTeX : Gamma\u516c\u5f0f\u5c55\u793a $$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$$ \u662f\u901a\u8fc7\u6b27\u62c9\u79ef\u5206 $$ \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. $$","title":"KaTeX\u6570\u5b66\u516c\u5f0f"},{"location":"Markdown/%E6%B5%81%E7%A8%8B%E5%9B%BE/","text":"","title":"\u6d41\u7a0b\u56fe"},{"location":"ProgramingLanguage/C/C_takeaway/","text":"Variable And Pointer \u4ec0\u4e48\u662f\u53d8\u91cf\uff1f \u53d8\u91cf\u5982 int i = 2 ,\u5305\u542b\u7c7b\u578bint, \u540d\u79f0i, \u503c2\uff0c\u5176\u4e2d\u7c7b\u578b\u8868\u793a\u53d8\u91cf\u7684\u957f\u5ea6\uff0c\u540d\u79f0\u8868\u793a\u53d8\u91cf\u7684RAM\u5730\u5740,\u503c\u8868\u793aRAM\u4e0a\u5b58\u50a8\u7684\u6570\u636e\u3002 \u4ec0\u4e48\u662f\u6307\u9488\uff1f \u6307\u9488\u4e5f\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u4e0e\u666e\u901a\u53d8\u91cf\u7684\u533a\u522b\u662f\uff0c\u5b58\u50a8\u5728\u6307\u9488\u53d8\u91cf\u91cc\u7684\u503c\u662f\u53e6\u5916\u4e00\u4e2a\u53d8\u91cf\u7684RAM\u5730\u5740\u3002 Const Pointer \u53ea\u9700\u8981\u8bb0\u4f4f\uff0c \u53ea\u6709 * const \u624d\u8868\u793aconstant pointer // constant pointer to a non-constant int int * const p; // non-constant pointer to a constant int const int * p; int const * p; // constant pointer to a constant int const int * const p; int const * const p; The Clockwise/Spiral Rule keyword volatile Declare global variables with volatile. Consider a handler and main routine that share a global variable g. The handler updates g, and main periodically reads g. To an optimizing compiler, it would appear that the value of g never changes in main, and thus it would be safe to use a copy of g that is cached in a register to satisfy every reference to g. In this case, the main function would never see the updated values from the handler. You can tell the compiler not to cache a variable by declaring it with the volatile type qualifier. For example: volatile int g; The volatile qualifier forces the compiler to read the value of g from memory each time it is referenced in the code. In general, as with any shared data structure, each access to a global variable should be protected by temporarily blocking signals.","title":"C\u8bed\u8a00\u8981\u70b9"},{"location":"ProgramingLanguage/C/C_takeaway/#variable-and-pointer","text":"\u4ec0\u4e48\u662f\u53d8\u91cf\uff1f \u53d8\u91cf\u5982 int i = 2 ,\u5305\u542b\u7c7b\u578bint, \u540d\u79f0i, \u503c2\uff0c\u5176\u4e2d\u7c7b\u578b\u8868\u793a\u53d8\u91cf\u7684\u957f\u5ea6\uff0c\u540d\u79f0\u8868\u793a\u53d8\u91cf\u7684RAM\u5730\u5740,\u503c\u8868\u793aRAM\u4e0a\u5b58\u50a8\u7684\u6570\u636e\u3002 \u4ec0\u4e48\u662f\u6307\u9488\uff1f \u6307\u9488\u4e5f\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u4e0e\u666e\u901a\u53d8\u91cf\u7684\u533a\u522b\u662f\uff0c\u5b58\u50a8\u5728\u6307\u9488\u53d8\u91cf\u91cc\u7684\u503c\u662f\u53e6\u5916\u4e00\u4e2a\u53d8\u91cf\u7684RAM\u5730\u5740\u3002","title":"Variable And Pointer"},{"location":"ProgramingLanguage/C/C_takeaway/#const-pointer","text":"\u53ea\u9700\u8981\u8bb0\u4f4f\uff0c \u53ea\u6709 * const \u624d\u8868\u793aconstant pointer // constant pointer to a non-constant int int * const p; // non-constant pointer to a constant int const int * p; int const * p; // constant pointer to a constant int const int * const p; int const * const p; The Clockwise/Spiral Rule","title":"Const Pointer"},{"location":"ProgramingLanguage/C/C_takeaway/#keyword-volatile","text":"Declare global variables with volatile. Consider a handler and main routine that share a global variable g. The handler updates g, and main periodically reads g. To an optimizing compiler, it would appear that the value of g never changes in main, and thus it would be safe to use a copy of g that is cached in a register to satisfy every reference to g. In this case, the main function would never see the updated values from the handler. You can tell the compiler not to cache a variable by declaring it with the volatile type qualifier. For example: volatile int g; The volatile qualifier forces the compiler to read the value of g from memory each time it is referenced in the code. In general, as with any shared data structure, each access to a global variable should be protected by temporarily blocking signals.","title":"keyword volatile"},{"location":"ProgramingLanguage/C%2B%2B/C%2B%2B%20API/","text":"API https://en.cppreference.com https://cplusplus.com/reference C++ \u7f16\u7a0b\u6307\u5357 C++ Super-FAQ \uff1athe C++ Super-FAQ is a great resource that explains things in a way that's detailed yet easy to understand (unlike a lot of C++ resources), and was co-written by Bjarne Stroustrup, the creator of C++! C++ Core Guidelines a short tutorial","title":"C++ API"},{"location":"ProgramingLanguage/C%2B%2B/C%2B%2B%20API/#api","text":"https://en.cppreference.com https://cplusplus.com/reference","title":"API"},{"location":"ProgramingLanguage/C%2B%2B/C%2B%2B%20API/#c","text":"C++ Super-FAQ \uff1athe C++ Super-FAQ is a great resource that explains things in a way that's detailed yet easy to understand (unlike a lot of C++ resources), and was co-written by Bjarne Stroustrup, the creator of C++! C++ Core Guidelines a short tutorial","title":"C++ \u7f16\u7a0b\u6307\u5357"},{"location":"ProgramingLanguage/C%2B%2B/friend/","text":"Description Designates a class or a function as friends of this class: class Z { int data; // private member friend class Y; // friend class forward declaration (elaborated class specifier) // the non-member function operator<< will have access to Z's private members friend std::ostream& operator<<(std::ostream& out, const Z& o); friend void X::set_chan(Z & t, int c); // members of other classes can be friends too friend X::X(char), X::~X(); // constructors and destructors can be friends }; // this operator<< needs to be defined as a non-member std::ostream& operator<<(std::ostream& out, const Z& z) { return out << z.data; // can access private member Z::data } Template friend class template<typename T> struct foo { template<typename U> friend class bar; }; This means that bar is a friend of foo regardless of bar's template arguments. bar<char> , bar<int> , bar<float> , and any other bar would be friends of foo<char> . template<typename T> struct foo { friend class bar<T>; }; This means that bar is a friend of foo when bar's template argument matches foo's. Only bar<char> would be a friend of foo<char> . Template friend non-member function A common use case for template friends is declaration of a non-member operator overload that acts on a class template, e.g. operator<<(std::ostream&, const Foo<T>&) for some user-defined Foo<T> . Such operator can be defined in the class body, which has the effect of generating a separate non-template operator<< for each T and makes that non-template operator<< a friend of its Foo<T> : #include <iostream> template<typename T> class Foo { public: Foo(const T& val) : data(val) {} private: T data; // generates a non-template operator<< for this T friend std::ostream& operator<<(std::ostream& os, const Foo& obj) { return os << obj.data; } }; int main() { Foo<double> obj(1.23); std::cout << obj << '\\n'; } or the function template has to be declared as a template before the class body, in which case the friend declaration within Foo<T> can refer to the full specialization of operator<< for its T: #include <iostream> template<typename T> class Foo; // forward declare to make function declaration possible template<typename T> // declaration std::ostream& operator<<(std::ostream&, const Foo<T>&); template<typename T> class Foo { public: Foo(const T& val) : data(val) {} private: T data; // refers to a full specialization for this particular T friend std::ostream& operator<< <> (std::ostream&, const Foo&); // note: this relies on template argument deduction in declarations // can also specify the template argument with operator<< <T>\" }; // definition template<typename T> std::ostream& operator<<(std::ostream& os, const Foo<T>& obj) { return os << obj.data; } int main() { Foo<double> obj(1.23); std::cout << obj << '\\n'; } https://en.cppreference.com/w/cpp/language/friend","title":"friend"},{"location":"ProgramingLanguage/C%2B%2B/friend/#description","text":"Designates a class or a function as friends of this class: class Z { int data; // private member friend class Y; // friend class forward declaration (elaborated class specifier) // the non-member function operator<< will have access to Z's private members friend std::ostream& operator<<(std::ostream& out, const Z& o); friend void X::set_chan(Z & t, int c); // members of other classes can be friends too friend X::X(char), X::~X(); // constructors and destructors can be friends }; // this operator<< needs to be defined as a non-member std::ostream& operator<<(std::ostream& out, const Z& z) { return out << z.data; // can access private member Z::data }","title":"Description"},{"location":"ProgramingLanguage/C%2B%2B/friend/#template-friend-class","text":"template<typename T> struct foo { template<typename U> friend class bar; }; This means that bar is a friend of foo regardless of bar's template arguments. bar<char> , bar<int> , bar<float> , and any other bar would be friends of foo<char> . template<typename T> struct foo { friend class bar<T>; }; This means that bar is a friend of foo when bar's template argument matches foo's. Only bar<char> would be a friend of foo<char> .","title":"Template friend class"},{"location":"ProgramingLanguage/C%2B%2B/friend/#template-friend-non-member-function","text":"A common use case for template friends is declaration of a non-member operator overload that acts on a class template, e.g. operator<<(std::ostream&, const Foo<T>&) for some user-defined Foo<T> . Such operator can be defined in the class body, which has the effect of generating a separate non-template operator<< for each T and makes that non-template operator<< a friend of its Foo<T> : #include <iostream> template<typename T> class Foo { public: Foo(const T& val) : data(val) {} private: T data; // generates a non-template operator<< for this T friend std::ostream& operator<<(std::ostream& os, const Foo& obj) { return os << obj.data; } }; int main() { Foo<double> obj(1.23); std::cout << obj << '\\n'; } or the function template has to be declared as a template before the class body, in which case the friend declaration within Foo<T> can refer to the full specialization of operator<< for its T: #include <iostream> template<typename T> class Foo; // forward declare to make function declaration possible template<typename T> // declaration std::ostream& operator<<(std::ostream&, const Foo<T>&); template<typename T> class Foo { public: Foo(const T& val) : data(val) {} private: T data; // refers to a full specialization for this particular T friend std::ostream& operator<< <> (std::ostream&, const Foo&); // note: this relies on template argument deduction in declarations // can also specify the template argument with operator<< <T>\" }; // definition template<typename T> std::ostream& operator<<(std::ostream& os, const Foo<T>& obj) { return os << obj.data; } int main() { Foo<double> obj(1.23); std::cout << obj << '\\n'; } https://en.cppreference.com/w/cpp/language/friend","title":"Template friend non-member function"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/","text":"Most of the work in overloading operators is boiler-plate code. That is little wonder, since operators are merely syntactic sugar, their actual work could be done by (and often is forwarded to) plain functions. But it is important that you get this boiler-plate code right. If you fail, either your operator\u2019s code won\u2019t compile or your users\u2019 code won\u2019t compile or your users\u2019 code will behave surprisingly. Assignment Operator There's a lot to be said about assignment. However, most of it has already been said in GMan's famous Copy-And-Swap FAQ , only listing the operator for reference: person(const person &) ; // 1/5: Copy Ctor person(person &&) noexcept ; // 4/5: Move Ctor person& operator=(const person &) ; // 2/5: Copy Assignment person& operator=(person &&) noexcept ; // 5/5: Move Assignment ~person() noexcept ; // 3/5: Dtor Bitshift Operators (used for Stream I/O) The bitshift operators << and >>, although still used in hardware interfacing for the bit-manipulation functions they inherit from C, have become more prevalent as overloaded stream input and output operators in most applications. For guidance overloading as bit-manipulation operators, see the section below on Binary Arithmetic Operators. For implementing your own custom format and parsing logic when your object is used with iostreams, continue. The stream operators, among the most commonly overloaded operators, are binary infix operators for which the syntax specifies no restriction on whether they should be members or non-members. Since they change their left argument (they alter the stream\u2019s state), they should, according to the rules of thumb, be implemented as members of their left operand\u2019s type. However, their left operands are streams from the standard library, and while most of the stream output and input operators defined by the standard library are indeed defined as members of the stream classes, when you implement output and input operations for your own types, you cannot change the standard library\u2019s stream types. That\u2019s why you need to implement these operators for your own types as non-member functions. The canonical forms of the two are these: std::ostream& operator<<(std::ostream& os, const T& obj) { // write obj to stream return os; } std::istream& operator>>(std::istream& is, T& obj) { // read obj from stream if( /* no valid object of T found in stream */ ) is.setstate(std::ios::failbit); return is; } When implementing operator>> , manually setting the stream\u2019s state is only necessary when the reading itself succeeded, but the result is not what would be expected. Function call operator The function call operator, used to create function objects, also known as functors, must be defined as a member function, so it always has the implicit this argument of member functions. Other than this, it can be overloaded to take any number of additional arguments, including zero. Here's an example of the syntax: class foo { public: // Overloaded call operator int operator()(const std::string& y) { // ... } }; Usage: foo f; int a = f(\"hello\"); Throughout the C++ standard library, function objects are always copied. Your own function objects should therefore be cheap to copy. If a function object absolutely needs to use data which is expensive to copy, it is better to store that data elsewhere and have the function object refer to it. Comparison operators The binary infix comparison operators should, according to the rules of thumb, be implemented as non-member functions1. The unary prefix negation ! should (according to the same rules) be implemented as a member function. (but it is usually not a good idea to overload it.) The standard library\u2019s algorithms (e.g. std::sort()) and types (e.g. std::map) will always only expect operator< to be present. However, the users of your type will expect all the other operators to be present, too, so if you define operator< , be sure to follow the third fundamental rule of operator overloading and also define all the other boolean comparison operators. The canonical way to implement them is this: inline bool operator==(const X& lhs, const X& rhs){ /* do actual comparison */ } inline bool operator!=(const X& lhs, const X& rhs){return !operator==(lhs,rhs);} inline bool operator< (const X& lhs, const X& rhs){ /* do actual comparison */ } inline bool operator> (const X& lhs, const X& rhs){return operator< (rhs,lhs);} inline bool operator<=(const X& lhs, const X& rhs){return !operator> (lhs,rhs);} inline bool operator>=(const X& lhs, const X& rhs){return !operator< (lhs,rhs);} The important thing to note here is that only two of these operators actually do anything, the others are just forwarding their arguments to either of these two to do the actual work. As with all rules of thumb, sometimes there might be reasons to break this one, too. If so, do not forget that the left-hand operand of the binary comparison operators, which for member functions will be *this, needs to be const, too. So a comparison operator implemented as a member function would have to have this signature: bool operator<(const X& rhs) const { /* do actual comparison with *this */ } (Note the const at the end.) Arithmetic Operators Unary arithmetic operators The unary increment and decrement operators come in both prefix and postfix flavor. To tell one from the other, the postfix variants take an additional dummy int argument. If you overload increment or decrement, be sure to always implement both prefix and postfix versions. Here is the canonical implementation of increment, decrement follows the same rules: class X { X& operator++() { // do actual increment return *this; } X operator++(int) { X tmp(*this); operator++(); return tmp; } }; Note that the postfix variant is implemented in terms of prefix. Also note that postfix does an extra copy.2 Overloading unary minus and plus is not very common and probably best avoided. If needed, they should probably be overloaded as member functions. Also note that the postfix variant does more work and is therefore less efficient to use than the prefix variant. This is a good reason to generally prefer prefix increment over postfix increment. While compilers can usually optimize away the additional work of postfix increment for built-in types, they might not be able to do the same for user-defined types (which could be something as innocently looking as a list iterator). Once you got used to do i++, it becomes very hard to remember to do ++i instead when i is not of a built-in type (plus you'd have to change code when changing a type), so it is better to make a habit of always using prefix increment, unless postfix is explicitly needed. Binary arithmetic operators For the binary arithmetic operators, do not forget to obey the third basic rule operator overloading: If you provide +, also provide +=, if you provide -, do not omit -=, etc. Andrew Koenig is said to have been the first to observe that the compound assignment operators can be used as a base for their non-compound counterparts. That is, operator + is implemented in terms of +=, - is implemented in terms of -= etc. According to our rules of thumb, + and its companions should be non-members, while their compound assignment counterparts (+= etc.), changing their left argument, should be a member. Here is the exemplary code for += and +; the other binary arithmetic operators should be implemented in the same way: class X { X& operator+=(const X& rhs) { // actual addition of rhs to *this return *this; } }; inline X operator+(X lhs, const X& rhs) { lhs += rhs; return lhs; } operator+= returns its result per reference, while operator+ returns a copy of its result. Of course, returning a reference is usually more efficient than returning a copy, but in the case of operator+ , there is no way around the copying. When you write a + b , you expect the result to be a new value, which is why operator+ has to return a new value.3 Also note that operator+ takes its left operand by copy rather than by const reference. The reason for this is the same as the reason giving for operator= taking its argument per copy. The bit manipulation operators ~ & | ^ << >> should be implemented in the same way as the arithmetic operators. However, (except for overloading << and >> for output and input) there are very few reasonable use cases for overloading these. Again, the lesson to be taken from this is that a += b is, in general, more efficient than a + b and should be preferred if possible. Array Subscripting The array subscript operator is a binary operator which must be implemented as a class member. It is used for container-like types that allow access to their data elements by a key. The canonical form of providing these is this: class X { value_type& operator[](index_type idx); const value_type& operator[](index_type idx) const; // ... }; Unless you do not want users of your class to be able to change data elements returned by operator[] (in which case you can omit the non-const variant), you should always provide both variants of the operator. If value_type is known to refer to a built-in type, the const variant of the operator should better return a copy instead of a const reference: class X { value_type& operator[](index_type idx); value_type operator[](index_type idx) const; // ... }; Operators for Pointer-like Types For defining your own iterators or smart pointers, you have to overload the unary prefix dereference operator * and the binary infix pointer member access operator -> : class my_ptr { value_type& operator*(); const value_type& operator*() const; value_type* operator->(); const value_type* operator->() const; }; Conversion Operators (also known as User Defined Conversions) In C++ you can create conversion operators, operators that allow the compiler to convert between your types and other defined types. There are two types of conversion operators, implicit and explicit ones. Implicit Conversion Operators An implicit conversion operator allows the compiler to implicitly convert (like the conversion between int and long) the value of a user-defined type to some other type. The following is a simple class with an implicit conversion operator: class my_string { public: operator const char*() const {return data_;} // This is the conversion operator private: const char* data_; }; Implicit conversion operators, like one-argument constructors, are user-defined conversions. Compilers will grant one user-defined conversion when trying to match a call to an overloaded function. void f(const char*); my_string str; f(str); // same as f( str.operator const char*() ) At first this seems very helpful, but the problem with this is that the implicit conversion even kicks in when it isn\u2019t expected to. In the following code, void f(const char*) will be called because my_string() is not an lvalue , so the first does not match: void f(my_string&); void f(const char*); f(my_string()); Beginners easily get this wrong and even experienced C++ programmers are sometimes surprised because the compiler picks an overload they didn\u2019t suspect. These problems can be mitigated by explicit conversion operators. Explicit Conversion Operators Unlike implicit conversion operators, explicit conversion operators will never kick in when you don't expect them to. The following is a simple class with an explicit conversion operator: class my_string { public: explicit operator const char*() const {return data_;} private: const char* data_; }; Notice the explicit . Now when you try to execute the unexpected code from the implicit conversion operators, you get a compiler error. To invoke the explicit cast operator, you have to use static_cast , a C-style cast, or a constructor style cast ( i.e. T(value) ). However, there is one exception to this: The compiler is allowed to implicitly convert to bool. In addition, the compiler is not allowed to do another implicit conversion after it converts to bool (a compiler is allowed to do 2 implicit conversions at a time, but only 1 user-defined conversion at max). Because the compiler will not cast \"past\" bool, explicit conversion operators now remove the need for the Safe Bool idiom. For example, smart pointers before C++11 used the Safe Bool idiom to prevent conversions to integral types. In C++11, the smart pointers use an explicit operator instead because the compiler is not allowed to implicitly convert to an integral type after it explicitly converted a type to bool. Overloading new and delete operators Basics In C++, when you write a new expression like new T(arg) two things happen when this expression is evaluated: First operator new is invoked to obtain raw memory, and then the appropriate constructor of T is invoked to turn this raw memory into a valid object. Likewise, when you delete an object, first its destructor is called, and then the memory is returned to operator delete. C++ allows you to tune both of these operations: memory management and the construction/destruction of the object at the allocated memory. The latter is done by writing constructors and destructors for a class. Fine-tuning memory management is done by writing your own operator new and operator delete. The first of the basic rules of operator overloading \u2013 don\u2019t do it \u2013 applies especially to overloading new and delete. Almost the only reasons to overload these operators are performance problems and memory constraints, and in many cases, other actions, like changes to the algorithms used, will provide a much higher cost/gain ratio than attempting to tweak memory management. The C++ standard library comes with a set of predefined new and delete operators. The most important ones are these: void* operator new(std::size_t) throw(std::bad_alloc); void operator delete(void*) throw(); void* operator new[](std::size_t) throw(std::bad_alloc); void operator delete[](void*) throw(); The first two allocate/deallocate memory for an object, the latter two for an array of objects. If you provide your own versions of these, they will not overload, but replace the ones from the standard library. If you overload operator new, you should always also overload the matching operator delete, even if you never intend to call it. The reason is that, if a constructor throws during the evaluation of a new expression, the run-time system will return the memory to the operator delete matching the operator new that was called to allocate the memory to create the object in. If you do not provide a matching operator delete, the default one is called, which is almost always wrong. If you overload new and delete, you should consider overloading the array variants, too. Class-specific new and delete Most commonly you will want to fine-tune memory management because measurement has shown that instances of a specific class, or of a group of related classes, are created and destroyed often and that the default memory management of the run-time system, tuned for general performance, deals inefficiently in this specific case. To improve this, you can overload new and delete for a specific class: class my_class { public: // ... void* operator new(std::size_t); void operator delete(void*); void* operator new[](std::size_t); void operator delete[](void*); // ... }; Overloaded thus, new and delete behave like static member functions. For objects of my_class, the std::size_t argument will always be sizeof(my_class). However, these operators are also called for dynamically allocated objects of derived classes, in which case it might be greater than that. Placement new C++ allows new and delete operators to take additional arguments. So-called placement new allows you to create an object at a certain address which is passed to: class X { /* ... */ }; char buffer[ sizeof(X) ]; void f() { X* p = new(buffer) X(/*...*/); // ... p->~X(); // call destructor } The standard library comes with the appropriate overloads of the new and delete operators for this: void* operator new(std::size_t,void* p) throw(std::bad_alloc); void operator delete(void* p,void*) throw(); void* operator new[](std::size_t,void* p) throw(std::bad_alloc); void operator delete[](void* p,void*) throw(); Note that, in the example code for placement new given above, operator delete is never called, unless the constructor of X throws an exception. You can also overload new and delete with other arguments. As with the additional argument for placement new, these arguments are also listed within parentheses after the keyword new. Merely for historical reasons, such variants are often also called placement new, even if their arguments are not for placing an object at a specific address. https://stackoverflow.com/questions/4421706/what-are-the-basic-rules-and-idioms-for-operator-overloading/ https://stackoverflow.com/questions/3279543/what-is-the-copy-and-swap-idiom https://stackoverflow.com/questions/4172722/what-is-the-rule-of-three","title":"operator overload"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#assignment-operator","text":"There's a lot to be said about assignment. However, most of it has already been said in GMan's famous Copy-And-Swap FAQ , only listing the operator for reference: person(const person &) ; // 1/5: Copy Ctor person(person &&) noexcept ; // 4/5: Move Ctor person& operator=(const person &) ; // 2/5: Copy Assignment person& operator=(person &&) noexcept ; // 5/5: Move Assignment ~person() noexcept ; // 3/5: Dtor","title":"Assignment Operator"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#bitshift-operators-used-for-stream-io","text":"The bitshift operators << and >>, although still used in hardware interfacing for the bit-manipulation functions they inherit from C, have become more prevalent as overloaded stream input and output operators in most applications. For guidance overloading as bit-manipulation operators, see the section below on Binary Arithmetic Operators. For implementing your own custom format and parsing logic when your object is used with iostreams, continue. The stream operators, among the most commonly overloaded operators, are binary infix operators for which the syntax specifies no restriction on whether they should be members or non-members. Since they change their left argument (they alter the stream\u2019s state), they should, according to the rules of thumb, be implemented as members of their left operand\u2019s type. However, their left operands are streams from the standard library, and while most of the stream output and input operators defined by the standard library are indeed defined as members of the stream classes, when you implement output and input operations for your own types, you cannot change the standard library\u2019s stream types. That\u2019s why you need to implement these operators for your own types as non-member functions. The canonical forms of the two are these: std::ostream& operator<<(std::ostream& os, const T& obj) { // write obj to stream return os; } std::istream& operator>>(std::istream& is, T& obj) { // read obj from stream if( /* no valid object of T found in stream */ ) is.setstate(std::ios::failbit); return is; } When implementing operator>> , manually setting the stream\u2019s state is only necessary when the reading itself succeeded, but the result is not what would be expected.","title":"Bitshift Operators (used for Stream I/O)"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#function-call-operator","text":"The function call operator, used to create function objects, also known as functors, must be defined as a member function, so it always has the implicit this argument of member functions. Other than this, it can be overloaded to take any number of additional arguments, including zero. Here's an example of the syntax: class foo { public: // Overloaded call operator int operator()(const std::string& y) { // ... } }; Usage: foo f; int a = f(\"hello\"); Throughout the C++ standard library, function objects are always copied. Your own function objects should therefore be cheap to copy. If a function object absolutely needs to use data which is expensive to copy, it is better to store that data elsewhere and have the function object refer to it.","title":"Function call operator"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#comparison-operators","text":"The binary infix comparison operators should, according to the rules of thumb, be implemented as non-member functions1. The unary prefix negation ! should (according to the same rules) be implemented as a member function. (but it is usually not a good idea to overload it.) The standard library\u2019s algorithms (e.g. std::sort()) and types (e.g. std::map) will always only expect operator< to be present. However, the users of your type will expect all the other operators to be present, too, so if you define operator< , be sure to follow the third fundamental rule of operator overloading and also define all the other boolean comparison operators. The canonical way to implement them is this: inline bool operator==(const X& lhs, const X& rhs){ /* do actual comparison */ } inline bool operator!=(const X& lhs, const X& rhs){return !operator==(lhs,rhs);} inline bool operator< (const X& lhs, const X& rhs){ /* do actual comparison */ } inline bool operator> (const X& lhs, const X& rhs){return operator< (rhs,lhs);} inline bool operator<=(const X& lhs, const X& rhs){return !operator> (lhs,rhs);} inline bool operator>=(const X& lhs, const X& rhs){return !operator< (lhs,rhs);} The important thing to note here is that only two of these operators actually do anything, the others are just forwarding their arguments to either of these two to do the actual work. As with all rules of thumb, sometimes there might be reasons to break this one, too. If so, do not forget that the left-hand operand of the binary comparison operators, which for member functions will be *this, needs to be const, too. So a comparison operator implemented as a member function would have to have this signature: bool operator<(const X& rhs) const { /* do actual comparison with *this */ } (Note the const at the end.)","title":"Comparison operators"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#arithmetic-operators","text":"","title":"Arithmetic Operators"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#unary-arithmetic-operators","text":"The unary increment and decrement operators come in both prefix and postfix flavor. To tell one from the other, the postfix variants take an additional dummy int argument. If you overload increment or decrement, be sure to always implement both prefix and postfix versions. Here is the canonical implementation of increment, decrement follows the same rules: class X { X& operator++() { // do actual increment return *this; } X operator++(int) { X tmp(*this); operator++(); return tmp; } }; Note that the postfix variant is implemented in terms of prefix. Also note that postfix does an extra copy.2 Overloading unary minus and plus is not very common and probably best avoided. If needed, they should probably be overloaded as member functions. Also note that the postfix variant does more work and is therefore less efficient to use than the prefix variant. This is a good reason to generally prefer prefix increment over postfix increment. While compilers can usually optimize away the additional work of postfix increment for built-in types, they might not be able to do the same for user-defined types (which could be something as innocently looking as a list iterator). Once you got used to do i++, it becomes very hard to remember to do ++i instead when i is not of a built-in type (plus you'd have to change code when changing a type), so it is better to make a habit of always using prefix increment, unless postfix is explicitly needed.","title":"Unary arithmetic operators"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#binary-arithmetic-operators","text":"For the binary arithmetic operators, do not forget to obey the third basic rule operator overloading: If you provide +, also provide +=, if you provide -, do not omit -=, etc. Andrew Koenig is said to have been the first to observe that the compound assignment operators can be used as a base for their non-compound counterparts. That is, operator + is implemented in terms of +=, - is implemented in terms of -= etc. According to our rules of thumb, + and its companions should be non-members, while their compound assignment counterparts (+= etc.), changing their left argument, should be a member. Here is the exemplary code for += and +; the other binary arithmetic operators should be implemented in the same way: class X { X& operator+=(const X& rhs) { // actual addition of rhs to *this return *this; } }; inline X operator+(X lhs, const X& rhs) { lhs += rhs; return lhs; } operator+= returns its result per reference, while operator+ returns a copy of its result. Of course, returning a reference is usually more efficient than returning a copy, but in the case of operator+ , there is no way around the copying. When you write a + b , you expect the result to be a new value, which is why operator+ has to return a new value.3 Also note that operator+ takes its left operand by copy rather than by const reference. The reason for this is the same as the reason giving for operator= taking its argument per copy. The bit manipulation operators ~ & | ^ << >> should be implemented in the same way as the arithmetic operators. However, (except for overloading << and >> for output and input) there are very few reasonable use cases for overloading these. Again, the lesson to be taken from this is that a += b is, in general, more efficient than a + b and should be preferred if possible.","title":"Binary arithmetic operators"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#array-subscripting","text":"The array subscript operator is a binary operator which must be implemented as a class member. It is used for container-like types that allow access to their data elements by a key. The canonical form of providing these is this: class X { value_type& operator[](index_type idx); const value_type& operator[](index_type idx) const; // ... }; Unless you do not want users of your class to be able to change data elements returned by operator[] (in which case you can omit the non-const variant), you should always provide both variants of the operator. If value_type is known to refer to a built-in type, the const variant of the operator should better return a copy instead of a const reference: class X { value_type& operator[](index_type idx); value_type operator[](index_type idx) const; // ... };","title":"Array Subscripting"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#operators-for-pointer-like-types","text":"For defining your own iterators or smart pointers, you have to overload the unary prefix dereference operator * and the binary infix pointer member access operator -> : class my_ptr { value_type& operator*(); const value_type& operator*() const; value_type* operator->(); const value_type* operator->() const; };","title":"Operators for Pointer-like Types"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#conversion-operators-also-known-as-user-defined-conversions","text":"In C++ you can create conversion operators, operators that allow the compiler to convert between your types and other defined types. There are two types of conversion operators, implicit and explicit ones.","title":"Conversion Operators (also known as User Defined Conversions)"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#implicit-conversion-operators","text":"An implicit conversion operator allows the compiler to implicitly convert (like the conversion between int and long) the value of a user-defined type to some other type. The following is a simple class with an implicit conversion operator: class my_string { public: operator const char*() const {return data_;} // This is the conversion operator private: const char* data_; }; Implicit conversion operators, like one-argument constructors, are user-defined conversions. Compilers will grant one user-defined conversion when trying to match a call to an overloaded function. void f(const char*); my_string str; f(str); // same as f( str.operator const char*() ) At first this seems very helpful, but the problem with this is that the implicit conversion even kicks in when it isn\u2019t expected to. In the following code, void f(const char*) will be called because my_string() is not an lvalue , so the first does not match: void f(my_string&); void f(const char*); f(my_string()); Beginners easily get this wrong and even experienced C++ programmers are sometimes surprised because the compiler picks an overload they didn\u2019t suspect. These problems can be mitigated by explicit conversion operators.","title":"Implicit Conversion Operators"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#explicit-conversion-operators","text":"Unlike implicit conversion operators, explicit conversion operators will never kick in when you don't expect them to. The following is a simple class with an explicit conversion operator: class my_string { public: explicit operator const char*() const {return data_;} private: const char* data_; }; Notice the explicit . Now when you try to execute the unexpected code from the implicit conversion operators, you get a compiler error. To invoke the explicit cast operator, you have to use static_cast , a C-style cast, or a constructor style cast ( i.e. T(value) ). However, there is one exception to this: The compiler is allowed to implicitly convert to bool. In addition, the compiler is not allowed to do another implicit conversion after it converts to bool (a compiler is allowed to do 2 implicit conversions at a time, but only 1 user-defined conversion at max). Because the compiler will not cast \"past\" bool, explicit conversion operators now remove the need for the Safe Bool idiom. For example, smart pointers before C++11 used the Safe Bool idiom to prevent conversions to integral types. In C++11, the smart pointers use an explicit operator instead because the compiler is not allowed to implicitly convert to an integral type after it explicitly converted a type to bool.","title":"Explicit Conversion Operators"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#overloading-new-and-delete-operators","text":"","title":"Overloading new and delete operators"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#basics","text":"In C++, when you write a new expression like new T(arg) two things happen when this expression is evaluated: First operator new is invoked to obtain raw memory, and then the appropriate constructor of T is invoked to turn this raw memory into a valid object. Likewise, when you delete an object, first its destructor is called, and then the memory is returned to operator delete. C++ allows you to tune both of these operations: memory management and the construction/destruction of the object at the allocated memory. The latter is done by writing constructors and destructors for a class. Fine-tuning memory management is done by writing your own operator new and operator delete. The first of the basic rules of operator overloading \u2013 don\u2019t do it \u2013 applies especially to overloading new and delete. Almost the only reasons to overload these operators are performance problems and memory constraints, and in many cases, other actions, like changes to the algorithms used, will provide a much higher cost/gain ratio than attempting to tweak memory management. The C++ standard library comes with a set of predefined new and delete operators. The most important ones are these: void* operator new(std::size_t) throw(std::bad_alloc); void operator delete(void*) throw(); void* operator new[](std::size_t) throw(std::bad_alloc); void operator delete[](void*) throw(); The first two allocate/deallocate memory for an object, the latter two for an array of objects. If you provide your own versions of these, they will not overload, but replace the ones from the standard library. If you overload operator new, you should always also overload the matching operator delete, even if you never intend to call it. The reason is that, if a constructor throws during the evaluation of a new expression, the run-time system will return the memory to the operator delete matching the operator new that was called to allocate the memory to create the object in. If you do not provide a matching operator delete, the default one is called, which is almost always wrong. If you overload new and delete, you should consider overloading the array variants, too.","title":"Basics"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#class-specific-new-and-delete","text":"Most commonly you will want to fine-tune memory management because measurement has shown that instances of a specific class, or of a group of related classes, are created and destroyed often and that the default memory management of the run-time system, tuned for general performance, deals inefficiently in this specific case. To improve this, you can overload new and delete for a specific class: class my_class { public: // ... void* operator new(std::size_t); void operator delete(void*); void* operator new[](std::size_t); void operator delete[](void*); // ... }; Overloaded thus, new and delete behave like static member functions. For objects of my_class, the std::size_t argument will always be sizeof(my_class). However, these operators are also called for dynamically allocated objects of derived classes, in which case it might be greater than that.","title":"Class-specific new and delete"},{"location":"ProgramingLanguage/C%2B%2B/operator%20overload/#placement-new","text":"C++ allows new and delete operators to take additional arguments. So-called placement new allows you to create an object at a certain address which is passed to: class X { /* ... */ }; char buffer[ sizeof(X) ]; void f() { X* p = new(buffer) X(/*...*/); // ... p->~X(); // call destructor } The standard library comes with the appropriate overloads of the new and delete operators for this: void* operator new(std::size_t,void* p) throw(std::bad_alloc); void operator delete(void* p,void*) throw(); void* operator new[](std::size_t,void* p) throw(std::bad_alloc); void operator delete[](void* p,void*) throw(); Note that, in the example code for placement new given above, operator delete is never called, unless the constructor of X throws an exception. You can also overload new and delete with other arguments. As with the additional argument for placement new, these arguments are also listed within parentheses after the keyword new. Merely for historical reasons, such variants are often also called placement new, even if their arguments are not for placing an object at a specific address. https://stackoverflow.com/questions/4421706/what-are-the-basic-rules-and-idioms-for-operator-overloading/ https://stackoverflow.com/questions/3279543/what-is-the-copy-and-swap-idiom https://stackoverflow.com/questions/4172722/what-is-the-rule-of-three","title":"Placement new"},{"location":"ProgramingLanguage/assembly/Inline%20assembly%20for%20x86/","text":"\u6c47\u7f16\u8bed\u8a00\u8bed\u6cd5\u7b80\u4ecb \u8ba9\u6211\u4eec\u9996\u5148\u770b\u4e00\u4e0b\u5728Linux\u4e2d\u4f7f\u7528\u7684\u57fa\u672c\u6c47\u7f16\u8bed\u8a00\u8bed\u6cd5\u3002GCC \u5373 GNU C Compiler \u4f7f\u7528\u7684\u662fAT&\u6c47\u7f16\u8bed\u8a00\u7684\u8bed\u6cd5\u3002\u4e00\u4e9b\u57fa\u672c\u7684\u89c4\u5219\u4ecb\u7ecd\u5982\u4e0b\uff1a\uff08\u8fd9\u91cc\u5217\u51fa\u7684\u5f53\u7136\u4e0d\u662f\u6c47\u7f16\u8bed\u6cd5\u7684\u5168\u90e8\uff0c\u6211\u4eec\u53ea\u6d89\u53ca\u4e0e\u672c\u6b21\u4e3b\u9898\u76f8\u5173\u7684\u89c4\u5219\uff09 \u5bc4\u5b58\u5668\u547d\u540d \u5bc4\u5b58\u5668\u7684\u540d\u5b57\u90fd\u4f1a\u52a0\u4e00\u4e2a\u524d\u7f00 % \u3002 \u4e5f\u5c31\u662f\u8bf4\u5f53eax\u5bc4\u5b58\u5668\u88ab\u4f7f\u7528\u5230\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u5199\u4f5c%eax\u3002 Source \u548c destination \u7684\u987a\u5e8f \u5728\u4efb\u4f55\u547d\u4ee4\u4e2dsource\u662f\u7b2c\u4e00\u4e2a\uff0cdestination\u8ddf\u5728\u540e\u9762\u3002 \u8fd9\u548cIntel\u8bed\u6cd5\u662f\u4e0d\u540c\u7684\uff0cIntel\u7684\u8bed\u6cd5source\u8ddf\u5728destination\u7684\u540e\u9762\u3002 mov %eax, %ebx, transfers the contents of eax to ebx. \u64cd\u4f5c\u7b26\uff08operand\uff09\u7684\u5927\u5c0f \u6839\u636eoperand\u662fbyte, word \u8fd8\u662f long \u7c7b\u578b\uff0c\u8fd9\u4e9b\u547d\u4ee4\u4f1a\u52a0\u4e00\u4e2ab, w \u6216\u8005 l \u7684\u540e\u7f00\u3002\u8fd9\u540e\u7f00\u5e76\u4e0d\u662f\u89c4\u5b9a\u5fc5\u987b\u7684\uff0cGCC\u4f1a\u5c1d\u8bd5\u7ed9\u5206\u6790\u64cd\u4f5c\u7b26\u5e76\u81ea\u52a8\u63d0\u4f9b\u5408\u9002\u7684\u540e\u7f00\u3002\u4f46\u662f\u660e\u786e\u7684\u52a0\u4e0a\u540e\u7f00\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u6d88\u9664\u7f16\u8bd1\u5668\u731c\u9519\u8bef\u7684\u53ef\u80fd\u6027\u3002 movb %al, %bl -- Byte move movw %ax, %bx -- Word move movl %eax, %ebx -- Longword move Immediate operand \u4e00\u4e2aimmediate operand \u524d\u9762\u52a0\u4e00\u4e2a$\u7b26\u53f7\u7279\u6b8a\u8bf4\u660e movl $0xffff, %eax -- will move the value of 0xffff into eax register. \u95f4\u63a5\u5185\u5b58\u5f15\u7528 \u95f4\u63a5\u5185\u5b58\u5f15\u7528\u662f\u901a\u8fc7\u4f7f\u7528 ( ) \u5b9e\u73b0 movb (%esi), %al -- will transfer the byte in the memory pointed by esi into al register Inline assembly GCC \u4e3ainline assembly \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u7ed3\u6784\u4f53\"asm\"\uff0c\u5b83\u7684\u683c\u5f0f\u5982\u4e0b\uff1a asm ( assembler template : list of output varialble (optional) : list of input varialble (optional) : list of clobbered registers (optional) ); \u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u4f5c\u7528\u662f\u628aC\u4ee3\u7801\u7684\u8868\u8fbe\u5f0f(expression)\u4e0e\u6c47\u7f16\u4ee3\u7801\u4e2d\u7684\u64cd\u4f5c\u7b26\uff08operand\uff09\u5173\u8054\u8d77\u6765\uff0c\u53ef\u4ee5\u5427\u6bcf\u4e2a\u5173\u8054\u770b\u4f5c\u4e00\u4e2a\u53d8\u91cf\uff0c\u8fd9\u4e9b\u5173\u8054\u53d8\u91cf\u5728asm\u7ed3\u6784\u4f53\u4e2d\u7684\u201clist of output varialble\u201d\u548c \u201clist of input varialble \u9017\u53f7\u5206\u9694\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u7528\"0\", \"1\", \"2\"...\u8868\u793a\u8fd9\u4e9b\u53d8\u91cf\u7684\u7d22\u5f15\uff0c\u5173\u8054\u53d8\u91cf\u5b9a\u4e49\u7684\u683c\u5f0f\u5982\u4e0b\uff1a \"constraint\" (expr) \u5176\u4e2d\u5de6\u8fb9\u7684constraint\u662f\u5bf9\u5e94\u53d8\u91cf\u5728\u6c47\u7f16\u4ee3\u7801\u4e2d\u7684\u64cd\u4f5c\u7b26\uff0c\u8f93\u51fa\u53d8\u91cf\u7684constraint\u5de6\u8fb9\u8fd8\u4f1a\u591a\u52a0\u4e00\u4e2a\u201c=\u201d\u8868\u793a\u5b83\u662f\u8f93\u51fa\u53d8\u91cf\uff0c \u53f3\u8fb9\u7684 expr \u662f\u5bf9\u5e94\u53d8\u91cf\u5728C\u4ee3\u7801\u4e2d\u7684\u8868\u8fbe\u5f0f\u3002constraint\u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u4e5f\u53ef\u4ee5\u662f\u5185\u5b58\u3002\u5982\u679c\u4e00\u4e2a\u8f93\u51fa\u53d8\u91cf\u7684constraint\u662f\u4e00\u4e2a\u5bc4\u5b58\u5668\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u751f\u6210 mov register, expr \u7684\u4ee3\u7801\uff0c\u628a\u5bc4\u5b58\u5668\u7684\u503c\u8d4b\u4e88\u7ed9expr\u6240\u4ee3\u8868\u7684C\u53d8\u91cf\u4e0a\u3002\u5982\u679c\u4e00\u4e2a\u8f93\u5165\u53d8\u91cf\u7684constraint\u662f\u4e00\u4e2a\u5bc4\u5b58\u5668\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u751f\u6210 mov expr\uff0c register \u7684\u4ee3\u7801\uff0c\u628aexpr\u6240\u4ee3\u8868\u7684C\u8bed\u8a00\u7684\u503c\u8d4b\u503c\u7ed9\u5bc4\u5b58\u5668\u3002\u5982\u679c\u4e00\u4e2a\u8f93\u51fa\u53d8\u91cf\u7684constraint\u662f\u4e00\u4e2a\u5bc4\u5b58\u5668\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u751f\u6210 mov register, expr \u7684\u4ee3\u7801\uff0c\u628a\u5bc4\u5b58\u5668\u7684\u503c\u8d4b\u7ed9expr\u7684C\u8bed\u8a00\u53d8\u91cf\u3002 constraint\u4e2d\u5e38\u7528\u7684\u9009\u9879\u53ca\u5176\u6240\u4ee3\u8868\u7684\u542b\u4e49\u8bf4\u660e\u5982\u4e0b\uff1a a eax b ebx c ecx d edx S esi D edi I constant value (0 to 31) q dynamically allocated register from eax, ebx, ecx, edx r dynamically allocated register from eax, ebx, ecx, edx, esi, edi g eax, ebx, ecx, edx or variable in memory A eax and edx combined into a 64-bit integer (use long longs) m memory refrence Example the register constraint \"r\" int cr3val; asm (\"movl %%cr3, %0\\n\" :\"=r\"(cr3val)); \u628acr3\u63a7\u5236\u5668\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u4efb\u610f\u5206\u914d\u7684\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e0a\uff08\"=r\"\uff09\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u8d4b\u503c\u7ed9cr3val\u3002 \u518d\u770b\u4e00\u4e2a\u4f8b\u5b50 int main(void) { int x = 10, y; asm (\"movl %1, %%eax; \"movl %%eax, %0;\" :\"=r\"(y) /* y is output operand */ :\"r\"(x) /* x is input operand */ :\"%eax\"); /* %eax is clobbered register */ } In this example, the value of x is copied to y inside \"asm\". x and y are passed to \"asm\" by being stored in registers. The assembly code generated for this example looks like this: main: pushl %ebp movl %esp,%ebp subl $8,%esp movl $10,-4(%ebp) movl -4(%ebp),%edx /* x=10 is stored in %edx */ #APP /* asm starts here */ movl %edx, %eax /* x is moved to %eax */ movl %eax, %edx /* y is allocated in edx and updated */ #NO_APP /* asm ends here */ movl %edx,-8(%ebp) /* value of y in stack is updated with the value in %edx */ GCC is free here to allocate any register when the \"r\" constraint is used. In our example it chose %edx for storing x. After reading the value of x in %edx, it allocated the same register for y. Since y is specified in the output operand section, the updated value in %edx is stored in -8(%ebp), the location of y on stack. If y were specified in the input section, the value of y on stack would not be updated, even though it does get updated in the temporary register storage of y(%edx). And since %eax is specified in the clobbered list, GCC doesn't use it anywhere else to store data. Both input x and output y were allocated in the same %edx register, assuming that inputs are consumed before outputs are produced. Note that if you have a lot of instructions, this may not be the case. To make sure that input and output are allocated in different registers, we can specify the & constraint modifier. Here is our example with the constraint modifier added. int main(void) { int x = 10, y; asm (\"movl %1, %%eax; \"movl %%eax, %0;\" :\"=&r\"(y) /* y is output operand, note the & constraint modifier. */ :\"r\"(x) /* x is input operand */ :\"%eax\"); /* %eax is clobbered register */ } And here is the assembly code generated for this example, from which it is evident that x and y have been stored in different registers across \"asm\". main: pushl %ebp movl %esp,%ebp subl $8,%esp movl $10,-4(%ebp) movl -4(%ebp),%ecx /* x, the input is in %ecx */ #APP movl %ecx, %eax movl %eax, %edx /* y, the output is in %edx */ #NO_APP movl %edx,-8(%ebp) Use of specific register constraints Now let's take a look at how to specify individual registers as constraints for the operands. In the following example, the cpuid instruction takes the input in the %eax register and gives output in four registers: %eax, %ebx, %ecx, %edx. The input to cpuid (the variable \"op\") is passed to \"asm\" in the eax register, as cpuid expects it to. The a, b, c, and d constraints are used in the output to collect the values in the four registers, respectively. asm (\"cpuid\" : \"=a\" (_eax), \"=b\" (_ebx), \"=c\" (_ecx), \"=d\" (_edx) : \"a\" (op)); And below you can see the generated assembly code for this (assuming the _eax, _ebx, etc.... variables are stored on stack): movl -20(%ebp),%eax /* store 'op' in %eax -- input */ #APP cpuid #NO_APP movl %eax,-4(%ebp) /* store %eax in _eax -- output */ movl %ebx,-8(%ebp) /* store other registers in movl %ecx,-12(%ebp) respective output variables */ movl %edx,-16(%ebp) The strcpy function can be implemented using the \"S\" and \"D\" constraints in the following manner: asm (\"cld\\n rep\\n movsb\" : /* no input */ :\"S\"(src), \"D\"(dst), \"c\"(count)); The source pointer src is put into %esi by using the \"S\" constraint, and the destination pointer dst is put into %edi using the \"D\" constraint. The count value is put into %ecx as it is needed by rep prefix. And here you can see another constraint that uses the two registers %eax and %edx to combine two 32-bit values and generate a 64-bit value: #define rdtscll(val) \\ __asm__ __volatile__ (\"rdtsc\" : \"=A\" (val)) The generated assembly looks like this (if val has a 64 bit memory space). #APP rdtsc #NO_APP movl %eax,-8(%ebp) /* As a result of A constraint movl %edx,-4(%ebp) %eax and %edx serve as outputs */ Note here that the values in %edx:%eax serve as 64 bit output. Matching constraints In some cases, a single variable may serve as both the input and the output operand. Such cases may be specified in \"asm\" by using matching constraints. asm (\"incl %0\" :\"=a\"(var):\"0\"(var)); In our example for matching constraints, the register %eax is used as both the input and the output variable. var input is read to %eax and updated %eax is stored in var again after increment. \"0\" here specifies the same constraint as the 0th output variable. That is, it specifies that the output instance of var should be stored in %eax only. This constraint can be used: In cases where input is read from a variable or the variable is modified and modification is written back to the same variable In cases where separate instances of input and output operands are not necessary The most important effect of using matching restraints is that they lead to the efficient use of available registers. Here you can see another example for the system call, with four parameters: #define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \\ type name (type1 arg1, type2 arg2, type3 arg3, type4 arg4) \\ { \\ long __res; \\ __asm__ volatile (\"int $0x80\" \\ : \"=a\" (__res) \\ : \"0\" (__NR_##name),\"b\" ((long)(arg1)),\"c\" ((long)(arg2)), \\ \"d\" ((long)(arg3)),\"S\" ((long)(arg4))); \\ __syscall_return(type,__res); \\ } In the above example, four arguments to the system call are put into %ebx, %ecx, %edx, and %esi by using the constraints b, c, d, and S. Note that the \"=a\" constraint is used in the output so that the return value of the system call, which is in %eax, is put into the variable __res. By using the matching constraint \"0\" as the first operand constraint in the input section, the syscall number __NR_##name is put into %eax and serves as the input to the system call. Thus %eax serves here as both input and output register. No separate registers are used for this purpose. Note also that the input (syscall number) is consumed (used) before the output (the return value of syscall) is produced. Use of memory operand constraint When the operands are in the memory, any operations performed on them will occur directly in the memory location, as opposed to register constraints, which first store the value in a register to be modified and then write it back to the memory location. But register constraints are usually used only when they are absolutely necessary for an instruction or they significantly speed up the process. Memory constraints can be used most efficiently in cases where a C variable needs to be updated inside \"asm\" and you really don't want to use a register to hold its value. For example, the value of idtr is stored in the memory location loc: asm (\"sidt %0\\n\" : :\"m\"(loc)); Another example,Consider the following atomic decrement operation: __asm__ __volatile__( \"lock; decl %0\" :\"=m\" (counter) :\"m\" (counter)); The generated assembly for this would look something like this: #APP lock decl -24(%ebp) /* counter is modified on its memory location */ #NO_APP. You might think of using the register constraint here for the counter. If you do, the value of the counter must first be copied on to a register, decremented, and then updated to its memory. But then you lose the whole purpose of locking and atomicity, which clearly shows the necessity of using the memory constraint. Using clobbered registers Consider an elementary implementation of memory copy. asm (\"movl $count, %%ecx; up: lodsl; stosl; loop up;\" : /* no output */ :\"S\"(src), \"D\"(dst) /* input */ :\"%ecx\", \"%eax\" ); /* clobbered list */ While lodsl modifies %eax, the lodsl and stosl instructions use it implicitly. And the %ecx register explicitly loads the count. But GCC won't know this unless we inform it, which is exactly what we do by including %eax and %ecx in the clobbered register set. Unless this is done, GCC assumes that %eax and %ecx are free, and it may decide to use them for storing other data. Note here that %esi and %edi are used by \"asm\", and are not in the clobbered list. This is because it has been declared that \"asm\" will use them in the input operand list. The bottom line here is that if a register is used inside \"asm\" (implicitly or explicitly), and it is not present in either the input or output operand list, you must list it as a clobbered register. If you write to a variable, you must include \"memory\" as one of The Clobbered. This is in case you wrote to a variable that GCC thought it had in a register. This is the same as clobbering all registers. While I've never run into a problem with it, you might also want to add \"cc\" as a clobber if you change the condition codes (the bits in the flags register the jnz, je, etc. operators look at.) Conclusion On the whole, inline assembly is huge and provides a lot of features that we did not even touch on here. But with a basic grasp of the material in this article, you should be able to start coding inline assembly on your own. Reference: https://www.cristal.univ-lille.fr/~marquet/ens/ctx/doc/l-ia.html http://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html","title":"Inline assembly for x86"},{"location":"ProgramingLanguage/assembly/Inline%20assembly%20for%20x86/#_1","text":"\u8ba9\u6211\u4eec\u9996\u5148\u770b\u4e00\u4e0b\u5728Linux\u4e2d\u4f7f\u7528\u7684\u57fa\u672c\u6c47\u7f16\u8bed\u8a00\u8bed\u6cd5\u3002GCC \u5373 GNU C Compiler \u4f7f\u7528\u7684\u662fAT&\u6c47\u7f16\u8bed\u8a00\u7684\u8bed\u6cd5\u3002\u4e00\u4e9b\u57fa\u672c\u7684\u89c4\u5219\u4ecb\u7ecd\u5982\u4e0b\uff1a\uff08\u8fd9\u91cc\u5217\u51fa\u7684\u5f53\u7136\u4e0d\u662f\u6c47\u7f16\u8bed\u6cd5\u7684\u5168\u90e8\uff0c\u6211\u4eec\u53ea\u6d89\u53ca\u4e0e\u672c\u6b21\u4e3b\u9898\u76f8\u5173\u7684\u89c4\u5219\uff09 \u5bc4\u5b58\u5668\u547d\u540d \u5bc4\u5b58\u5668\u7684\u540d\u5b57\u90fd\u4f1a\u52a0\u4e00\u4e2a\u524d\u7f00 % \u3002 \u4e5f\u5c31\u662f\u8bf4\u5f53eax\u5bc4\u5b58\u5668\u88ab\u4f7f\u7528\u5230\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u5199\u4f5c%eax\u3002 Source \u548c destination \u7684\u987a\u5e8f \u5728\u4efb\u4f55\u547d\u4ee4\u4e2dsource\u662f\u7b2c\u4e00\u4e2a\uff0cdestination\u8ddf\u5728\u540e\u9762\u3002 \u8fd9\u548cIntel\u8bed\u6cd5\u662f\u4e0d\u540c\u7684\uff0cIntel\u7684\u8bed\u6cd5source\u8ddf\u5728destination\u7684\u540e\u9762\u3002 mov %eax, %ebx, transfers the contents of eax to ebx. \u64cd\u4f5c\u7b26\uff08operand\uff09\u7684\u5927\u5c0f \u6839\u636eoperand\u662fbyte, word \u8fd8\u662f long \u7c7b\u578b\uff0c\u8fd9\u4e9b\u547d\u4ee4\u4f1a\u52a0\u4e00\u4e2ab, w \u6216\u8005 l \u7684\u540e\u7f00\u3002\u8fd9\u540e\u7f00\u5e76\u4e0d\u662f\u89c4\u5b9a\u5fc5\u987b\u7684\uff0cGCC\u4f1a\u5c1d\u8bd5\u7ed9\u5206\u6790\u64cd\u4f5c\u7b26\u5e76\u81ea\u52a8\u63d0\u4f9b\u5408\u9002\u7684\u540e\u7f00\u3002\u4f46\u662f\u660e\u786e\u7684\u52a0\u4e0a\u540e\u7f00\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u6d88\u9664\u7f16\u8bd1\u5668\u731c\u9519\u8bef\u7684\u53ef\u80fd\u6027\u3002 movb %al, %bl -- Byte move movw %ax, %bx -- Word move movl %eax, %ebx -- Longword move Immediate operand \u4e00\u4e2aimmediate operand \u524d\u9762\u52a0\u4e00\u4e2a$\u7b26\u53f7\u7279\u6b8a\u8bf4\u660e movl $0xffff, %eax -- will move the value of 0xffff into eax register. \u95f4\u63a5\u5185\u5b58\u5f15\u7528 \u95f4\u63a5\u5185\u5b58\u5f15\u7528\u662f\u901a\u8fc7\u4f7f\u7528 ( ) \u5b9e\u73b0 movb (%esi), %al -- will transfer the byte in the memory pointed by esi into al register","title":"\u6c47\u7f16\u8bed\u8a00\u8bed\u6cd5\u7b80\u4ecb"},{"location":"ProgramingLanguage/assembly/Inline%20assembly%20for%20x86/#inline-assembly","text":"GCC \u4e3ainline assembly \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u7ed3\u6784\u4f53\"asm\"\uff0c\u5b83\u7684\u683c\u5f0f\u5982\u4e0b\uff1a asm ( assembler template : list of output varialble (optional) : list of input varialble (optional) : list of clobbered registers (optional) ); \u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u4f5c\u7528\u662f\u628aC\u4ee3\u7801\u7684\u8868\u8fbe\u5f0f(expression)\u4e0e\u6c47\u7f16\u4ee3\u7801\u4e2d\u7684\u64cd\u4f5c\u7b26\uff08operand\uff09\u5173\u8054\u8d77\u6765\uff0c\u53ef\u4ee5\u5427\u6bcf\u4e2a\u5173\u8054\u770b\u4f5c\u4e00\u4e2a\u53d8\u91cf\uff0c\u8fd9\u4e9b\u5173\u8054\u53d8\u91cf\u5728asm\u7ed3\u6784\u4f53\u4e2d\u7684\u201clist of output varialble\u201d\u548c \u201clist of input varialble \u9017\u53f7\u5206\u9694\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u7528\"0\", \"1\", \"2\"...\u8868\u793a\u8fd9\u4e9b\u53d8\u91cf\u7684\u7d22\u5f15\uff0c\u5173\u8054\u53d8\u91cf\u5b9a\u4e49\u7684\u683c\u5f0f\u5982\u4e0b\uff1a \"constraint\" (expr) \u5176\u4e2d\u5de6\u8fb9\u7684constraint\u662f\u5bf9\u5e94\u53d8\u91cf\u5728\u6c47\u7f16\u4ee3\u7801\u4e2d\u7684\u64cd\u4f5c\u7b26\uff0c\u8f93\u51fa\u53d8\u91cf\u7684constraint\u5de6\u8fb9\u8fd8\u4f1a\u591a\u52a0\u4e00\u4e2a\u201c=\u201d\u8868\u793a\u5b83\u662f\u8f93\u51fa\u53d8\u91cf\uff0c \u53f3\u8fb9\u7684 expr \u662f\u5bf9\u5e94\u53d8\u91cf\u5728C\u4ee3\u7801\u4e2d\u7684\u8868\u8fbe\u5f0f\u3002constraint\u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u4e5f\u53ef\u4ee5\u662f\u5185\u5b58\u3002\u5982\u679c\u4e00\u4e2a\u8f93\u51fa\u53d8\u91cf\u7684constraint\u662f\u4e00\u4e2a\u5bc4\u5b58\u5668\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u751f\u6210 mov register, expr \u7684\u4ee3\u7801\uff0c\u628a\u5bc4\u5b58\u5668\u7684\u503c\u8d4b\u4e88\u7ed9expr\u6240\u4ee3\u8868\u7684C\u53d8\u91cf\u4e0a\u3002\u5982\u679c\u4e00\u4e2a\u8f93\u5165\u53d8\u91cf\u7684constraint\u662f\u4e00\u4e2a\u5bc4\u5b58\u5668\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u751f\u6210 mov expr\uff0c register \u7684\u4ee3\u7801\uff0c\u628aexpr\u6240\u4ee3\u8868\u7684C\u8bed\u8a00\u7684\u503c\u8d4b\u503c\u7ed9\u5bc4\u5b58\u5668\u3002\u5982\u679c\u4e00\u4e2a\u8f93\u51fa\u53d8\u91cf\u7684constraint\u662f\u4e00\u4e2a\u5bc4\u5b58\u5668\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u751f\u6210 mov register, expr \u7684\u4ee3\u7801\uff0c\u628a\u5bc4\u5b58\u5668\u7684\u503c\u8d4b\u7ed9expr\u7684C\u8bed\u8a00\u53d8\u91cf\u3002 constraint\u4e2d\u5e38\u7528\u7684\u9009\u9879\u53ca\u5176\u6240\u4ee3\u8868\u7684\u542b\u4e49\u8bf4\u660e\u5982\u4e0b\uff1a a eax b ebx c ecx d edx S esi D edi I constant value (0 to 31) q dynamically allocated register from eax, ebx, ecx, edx r dynamically allocated register from eax, ebx, ecx, edx, esi, edi g eax, ebx, ecx, edx or variable in memory A eax and edx combined into a 64-bit integer (use long longs) m memory refrence","title":"Inline assembly"},{"location":"ProgramingLanguage/assembly/Inline%20assembly%20for%20x86/#example","text":"","title":"Example"},{"location":"ProgramingLanguage/assembly/Inline%20assembly%20for%20x86/#the-register-constraint-r","text":"int cr3val; asm (\"movl %%cr3, %0\\n\" :\"=r\"(cr3val)); \u628acr3\u63a7\u5236\u5668\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u4efb\u610f\u5206\u914d\u7684\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e0a\uff08\"=r\"\uff09\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u8d4b\u503c\u7ed9cr3val\u3002 \u518d\u770b\u4e00\u4e2a\u4f8b\u5b50 int main(void) { int x = 10, y; asm (\"movl %1, %%eax; \"movl %%eax, %0;\" :\"=r\"(y) /* y is output operand */ :\"r\"(x) /* x is input operand */ :\"%eax\"); /* %eax is clobbered register */ } In this example, the value of x is copied to y inside \"asm\". x and y are passed to \"asm\" by being stored in registers. The assembly code generated for this example looks like this: main: pushl %ebp movl %esp,%ebp subl $8,%esp movl $10,-4(%ebp) movl -4(%ebp),%edx /* x=10 is stored in %edx */ #APP /* asm starts here */ movl %edx, %eax /* x is moved to %eax */ movl %eax, %edx /* y is allocated in edx and updated */ #NO_APP /* asm ends here */ movl %edx,-8(%ebp) /* value of y in stack is updated with the value in %edx */ GCC is free here to allocate any register when the \"r\" constraint is used. In our example it chose %edx for storing x. After reading the value of x in %edx, it allocated the same register for y. Since y is specified in the output operand section, the updated value in %edx is stored in -8(%ebp), the location of y on stack. If y were specified in the input section, the value of y on stack would not be updated, even though it does get updated in the temporary register storage of y(%edx). And since %eax is specified in the clobbered list, GCC doesn't use it anywhere else to store data. Both input x and output y were allocated in the same %edx register, assuming that inputs are consumed before outputs are produced. Note that if you have a lot of instructions, this may not be the case. To make sure that input and output are allocated in different registers, we can specify the & constraint modifier. Here is our example with the constraint modifier added. int main(void) { int x = 10, y; asm (\"movl %1, %%eax; \"movl %%eax, %0;\" :\"=&r\"(y) /* y is output operand, note the & constraint modifier. */ :\"r\"(x) /* x is input operand */ :\"%eax\"); /* %eax is clobbered register */ } And here is the assembly code generated for this example, from which it is evident that x and y have been stored in different registers across \"asm\". main: pushl %ebp movl %esp,%ebp subl $8,%esp movl $10,-4(%ebp) movl -4(%ebp),%ecx /* x, the input is in %ecx */ #APP movl %ecx, %eax movl %eax, %edx /* y, the output is in %edx */ #NO_APP movl %edx,-8(%ebp)","title":"the register constraint \"r\""},{"location":"ProgramingLanguage/assembly/Inline%20assembly%20for%20x86/#use-of-specific-register-constraints","text":"Now let's take a look at how to specify individual registers as constraints for the operands. In the following example, the cpuid instruction takes the input in the %eax register and gives output in four registers: %eax, %ebx, %ecx, %edx. The input to cpuid (the variable \"op\") is passed to \"asm\" in the eax register, as cpuid expects it to. The a, b, c, and d constraints are used in the output to collect the values in the four registers, respectively. asm (\"cpuid\" : \"=a\" (_eax), \"=b\" (_ebx), \"=c\" (_ecx), \"=d\" (_edx) : \"a\" (op)); And below you can see the generated assembly code for this (assuming the _eax, _ebx, etc.... variables are stored on stack): movl -20(%ebp),%eax /* store 'op' in %eax -- input */ #APP cpuid #NO_APP movl %eax,-4(%ebp) /* store %eax in _eax -- output */ movl %ebx,-8(%ebp) /* store other registers in movl %ecx,-12(%ebp) respective output variables */ movl %edx,-16(%ebp) The strcpy function can be implemented using the \"S\" and \"D\" constraints in the following manner: asm (\"cld\\n rep\\n movsb\" : /* no input */ :\"S\"(src), \"D\"(dst), \"c\"(count)); The source pointer src is put into %esi by using the \"S\" constraint, and the destination pointer dst is put into %edi using the \"D\" constraint. The count value is put into %ecx as it is needed by rep prefix. And here you can see another constraint that uses the two registers %eax and %edx to combine two 32-bit values and generate a 64-bit value: #define rdtscll(val) \\ __asm__ __volatile__ (\"rdtsc\" : \"=A\" (val)) The generated assembly looks like this (if val has a 64 bit memory space). #APP rdtsc #NO_APP movl %eax,-8(%ebp) /* As a result of A constraint movl %edx,-4(%ebp) %eax and %edx serve as outputs */ Note here that the values in %edx:%eax serve as 64 bit output.","title":"Use of specific register constraints"},{"location":"ProgramingLanguage/assembly/Inline%20assembly%20for%20x86/#matching-constraints","text":"In some cases, a single variable may serve as both the input and the output operand. Such cases may be specified in \"asm\" by using matching constraints. asm (\"incl %0\" :\"=a\"(var):\"0\"(var)); In our example for matching constraints, the register %eax is used as both the input and the output variable. var input is read to %eax and updated %eax is stored in var again after increment. \"0\" here specifies the same constraint as the 0th output variable. That is, it specifies that the output instance of var should be stored in %eax only. This constraint can be used: In cases where input is read from a variable or the variable is modified and modification is written back to the same variable In cases where separate instances of input and output operands are not necessary The most important effect of using matching restraints is that they lead to the efficient use of available registers. Here you can see another example for the system call, with four parameters: #define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \\ type name (type1 arg1, type2 arg2, type3 arg3, type4 arg4) \\ { \\ long __res; \\ __asm__ volatile (\"int $0x80\" \\ : \"=a\" (__res) \\ : \"0\" (__NR_##name),\"b\" ((long)(arg1)),\"c\" ((long)(arg2)), \\ \"d\" ((long)(arg3)),\"S\" ((long)(arg4))); \\ __syscall_return(type,__res); \\ } In the above example, four arguments to the system call are put into %ebx, %ecx, %edx, and %esi by using the constraints b, c, d, and S. Note that the \"=a\" constraint is used in the output so that the return value of the system call, which is in %eax, is put into the variable __res. By using the matching constraint \"0\" as the first operand constraint in the input section, the syscall number __NR_##name is put into %eax and serves as the input to the system call. Thus %eax serves here as both input and output register. No separate registers are used for this purpose. Note also that the input (syscall number) is consumed (used) before the output (the return value of syscall) is produced.","title":"Matching constraints"},{"location":"ProgramingLanguage/assembly/Inline%20assembly%20for%20x86/#use-of-memory-operand-constraint","text":"When the operands are in the memory, any operations performed on them will occur directly in the memory location, as opposed to register constraints, which first store the value in a register to be modified and then write it back to the memory location. But register constraints are usually used only when they are absolutely necessary for an instruction or they significantly speed up the process. Memory constraints can be used most efficiently in cases where a C variable needs to be updated inside \"asm\" and you really don't want to use a register to hold its value. For example, the value of idtr is stored in the memory location loc: asm (\"sidt %0\\n\" : :\"m\"(loc)); Another example,Consider the following atomic decrement operation: __asm__ __volatile__( \"lock; decl %0\" :\"=m\" (counter) :\"m\" (counter)); The generated assembly for this would look something like this: #APP lock decl -24(%ebp) /* counter is modified on its memory location */ #NO_APP. You might think of using the register constraint here for the counter. If you do, the value of the counter must first be copied on to a register, decremented, and then updated to its memory. But then you lose the whole purpose of locking and atomicity, which clearly shows the necessity of using the memory constraint.","title":"Use of memory operand constraint"},{"location":"ProgramingLanguage/assembly/Inline%20assembly%20for%20x86/#using-clobbered-registers","text":"Consider an elementary implementation of memory copy. asm (\"movl $count, %%ecx; up: lodsl; stosl; loop up;\" : /* no output */ :\"S\"(src), \"D\"(dst) /* input */ :\"%ecx\", \"%eax\" ); /* clobbered list */ While lodsl modifies %eax, the lodsl and stosl instructions use it implicitly. And the %ecx register explicitly loads the count. But GCC won't know this unless we inform it, which is exactly what we do by including %eax and %ecx in the clobbered register set. Unless this is done, GCC assumes that %eax and %ecx are free, and it may decide to use them for storing other data. Note here that %esi and %edi are used by \"asm\", and are not in the clobbered list. This is because it has been declared that \"asm\" will use them in the input operand list. The bottom line here is that if a register is used inside \"asm\" (implicitly or explicitly), and it is not present in either the input or output operand list, you must list it as a clobbered register. If you write to a variable, you must include \"memory\" as one of The Clobbered. This is in case you wrote to a variable that GCC thought it had in a register. This is the same as clobbering all registers. While I've never run into a problem with it, you might also want to add \"cc\" as a clobber if you change the condition codes (the bits in the flags register the jnz, je, etc. operators look at.)","title":"Using clobbered registers"},{"location":"ProgramingLanguage/assembly/Inline%20assembly%20for%20x86/#conclusion","text":"On the whole, inline assembly is huge and provides a lot of features that we did not even touch on here. But with a basic grasp of the material in this article, you should be able to start coding inline assembly on your own. Reference: https://www.cristal.univ-lille.fr/~marquet/ens/ctx/doc/l-ia.html http://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html","title":"Conclusion"},{"location":"ProgramingLanguage/go/go-command/","text":"build & install run the go build command to compile the code into an executable go build run the go install command to compile and install the package go install run your code go run . go run -race . module choose a module path (we'll use example.com/greetings) and create a go.mod file that declares it, Run the go mod init command go mod init example.com/greetings The go mod tidy command adds missing module requirements for imported packages and removes requirements on modules that aren't used anymore. go mod tidy Module dependencies are automatically downloaded to the pkg/mod subdirectory of the directory indicated by the GOPATH environment variable. The downloaded contents for a given version of a module are shared among all other modules that require that version, so the go command marks those files and directories as read-only. Use the go mod edit command to edit the example.com/hello module to redirect Go tools from its module path (where the module isn't) to the local directory (where it is). go mod edit -replace example.com/greetings=../greetings To remove all downloaded modules, you can pass the -modcache flag to go clean: go clean -modcache build .so go build -buildmode=plugin plugin_name.go The install directory is controlled by the GOPATH and GOBIN environment variables. You can use the go env command to portably set the default value for an environment variable for future go commands: go env -w GOBIN=/somewhere/else/bin To unset a variable previously set by go env -w, use go env -u: go env -u GOBIN add the install directory to our PATH to make running binaries easy: export PATH=$PATH:$(dirname $(go list -f '{{.Target}}' .)) Reference https://pkg.go.dev/cmd/go","title":"Go command"},{"location":"ProgramingLanguage/go/go-command/#build-install","text":"run the go build command to compile the code into an executable go build run the go install command to compile and install the package go install","title":"build &amp; install"},{"location":"ProgramingLanguage/go/go-command/#run-your-code","text":"go run . go run -race .","title":"run your code"},{"location":"ProgramingLanguage/go/go-command/#module","text":"choose a module path (we'll use example.com/greetings) and create a go.mod file that declares it, Run the go mod init command go mod init example.com/greetings The go mod tidy command adds missing module requirements for imported packages and removes requirements on modules that aren't used anymore. go mod tidy Module dependencies are automatically downloaded to the pkg/mod subdirectory of the directory indicated by the GOPATH environment variable. The downloaded contents for a given version of a module are shared among all other modules that require that version, so the go command marks those files and directories as read-only. Use the go mod edit command to edit the example.com/hello module to redirect Go tools from its module path (where the module isn't) to the local directory (where it is). go mod edit -replace example.com/greetings=../greetings To remove all downloaded modules, you can pass the -modcache flag to go clean: go clean -modcache","title":"module"},{"location":"ProgramingLanguage/go/go-command/#build-so","text":"go build -buildmode=plugin plugin_name.go","title":"build .so"},{"location":"ProgramingLanguage/go/go-command/#the-install-directory-is-controlled-by-the-gopath-and-gobin-environment-variables","text":"You can use the go env command to portably set the default value for an environment variable for future go commands: go env -w GOBIN=/somewhere/else/bin To unset a variable previously set by go env -w, use go env -u: go env -u GOBIN add the install directory to our PATH to make running binaries easy: export PATH=$PATH:$(dirname $(go list -f '{{.Target}}' .))","title":"The install directory is controlled by the GOPATH and GOBIN environment variables."},{"location":"ProgramingLanguage/go/go-command/#reference","text":"https://pkg.go.dev/cmd/go","title":"Reference"},{"location":"ProgramingLanguage/go/go-syntax/","text":"Go Go Documentation : https://go.dev/doc https://pkg.go.dev/ How to Write Go Code: https://go.dev/doc/code effective_go : https://go.dev/doc/effective_go#names package reference. : https://pkg.go.dev/std language specification: https://go.dev/ref/spec Tour : https://go.dev/tour/list The Go Programming Language and Environment https://cacm.acm.org/magazines/2022/5/260357-the-go-programming-language-and-environment/fulltext Blog slices-intro: https://go.dev/blog/slices-intro Go maps in action : https://go.dev/blog/maps using-go-modules: https://go.dev/blog/using-go-modules race-detector : https://go.dev/blog/race-detector module https://go.dev/doc/modules/developing https://go.dev/doc/modules/managing-dependencies#naming_module Module release and versioning workflow: https://go.dev/doc/modules/release-workflow","title":"Go syntax"},{"location":"ProgramingLanguage/python/python/","text":"Python Interpreter python3 execute # execute doctest python3 -m doctest -v exe.py # execute interactively python3 -i exe.py Exit python interpreter You can type exit() or Ctrl-D to return to your command line access that history To access that history, press <Control>-P (previous) and <Control>-N (next). show the location for package pip show <package name> Reference Python command-line options: https://docs.python.org/3.4/using/cmdline.html https://docs.python.org/3/library/index.html","title":"Python"},{"location":"ProgramingLanguage/python/python/#python-interpreter","text":"python3","title":"Python Interpreter"},{"location":"ProgramingLanguage/python/python/#execute","text":"# execute doctest python3 -m doctest -v exe.py # execute interactively python3 -i exe.py","title":"execute"},{"location":"ProgramingLanguage/python/python/#exit-python-interpreter","text":"You can type exit() or Ctrl-D to return to your command line","title":"Exit python interpreter"},{"location":"ProgramingLanguage/python/python/#access-that-history","text":"To access that history, press <Control>-P (previous) and <Control>-N (next).","title":"access that history"},{"location":"ProgramingLanguage/python/python/#show-the-location-for-package","text":"pip show <package name>","title":"show the location for package"},{"location":"ProgramingLanguage/python/python/#reference","text":"Python command-line options: https://docs.python.org/3.4/using/cmdline.html https://docs.python.org/3/library/index.html","title":"Reference"},{"location":"SSH/SSH%20command/","text":"SSH Login ssh wzq@192.168.1.5 scp - \u201cSecure Copy\u201d Sometimes, you may want to get individual files or entire folders from the Hive machines onto your local system, or vice versa. You can do this by using scp: scp <source> <destination> For example, If I wanted to copy from my local machine to a Remote machine, I would use: scp ~/Downloads/example.txt wzq@192.168.1.5:~/some_folder/ scp by default only works with files. To copy folders, you need to tell scp to \u201crecursively\u201d copy the folder and all its contents, which you can do with the -r flag: scp -rp ~/Downloads wzq@192.168.1.5:~/some_folder/ local port forwarding (also known as SSH tunneling) ssh -L 5000:localhost:5000 <ssh-user>@<CLOUD_INSTANCE_IP_ADDRESS> This command is used to create a local port forwarding (also known as SSH tunneling) between your local machine and a remote server (cloud instance) using the SSH protocol.","title":"SSH command"},{"location":"SSH/SSH%20command/#ssh-login","text":"ssh wzq@192.168.1.5","title":"SSH Login"},{"location":"SSH/SSH%20command/#scp-secure-copy","text":"Sometimes, you may want to get individual files or entire folders from the Hive machines onto your local system, or vice versa. You can do this by using scp: scp <source> <destination> For example, If I wanted to copy from my local machine to a Remote machine, I would use: scp ~/Downloads/example.txt wzq@192.168.1.5:~/some_folder/ scp by default only works with files. To copy folders, you need to tell scp to \u201crecursively\u201d copy the folder and all its contents, which you can do with the -r flag: scp -rp ~/Downloads wzq@192.168.1.5:~/some_folder/","title":"scp - \u201cSecure Copy\u201d"},{"location":"SSH/SSH%20command/#local-port-forwarding-also-known-as-ssh-tunneling","text":"ssh -L 5000:localhost:5000 <ssh-user>@<CLOUD_INSTANCE_IP_ADDRESS> This command is used to create a local port forwarding (also known as SSH tunneling) between your local machine and a remote server (cloud instance) using the SSH protocol.","title":"local port forwarding (also known as SSH tunneling)"},{"location":"SSH/SSH%20config/","text":"\u5bf9 ssh \u8bbe\u7f6e\u505a\u4e00\u4e9b\u5c0f\u4f18\u5316\u53ef\u80fd\u662f\u5f88\u6709\u7528\u7684\uff0c\u4f8b\u5982\u8fd9\u4e2a \"~/.ssh/config\" \u6587\u4ef6\u5305\u542b\u4e86\u9632\u6b62\u7279\u5b9a\u7f51\u7edc\u73af\u5883\u4e0b\u8fde\u63a5\u65ad\u5f00\u3001\u538b\u7f29\u6570\u636e\u3001\u591a\u901a\u9053\u7b49\u9009\u9879 TCPKeepAlive=yes ServerAliveInterval=15 ServerAliveCountMax=6 Compression=yes ControlMaster auto ControlPath /tmp/%r@%h:%p ControlPersist yes","title":"SSH config"},{"location":"SSH/SSH%20install/","text":"Intall in ubuntu install opensshservice sudo apt install -y openssh-server install openssh-client sudo apt install -y openssh-client check ps -aux | grep ssh startup sudo service ssh start","title":"SSH install"},{"location":"SSH/SSH%20install/#intall-in-ubuntu","text":"install opensshservice sudo apt install -y openssh-server install openssh-client sudo apt install -y openssh-client check ps -aux | grep ssh startup sudo service ssh start","title":"Intall in ubuntu"},{"location":"SSH/SSH%20login%20without%20password/","text":"\u5047\u8bbe\u8fdc\u7a0b\u7ec8\u7aef\u7684IP\u5730\u5740\u4e3a \u201c192.168.83.11\u201d 1. \u751f\u6210\u79c1\u94a5\u6587\u4ef6 \u5ba2\u6237\u7aef\u7ec8\u7aef\u4e0b\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4 ssh-keygen -N \"\" -t rsa -f ~/.ssh/id_rsa \u6bcf\u6b21\u6267\u884c ssh-keygen -t rsa \u4ea7\u751f\u7684\u79c1\u94a5\u6587\u4ef6\u90fd\u4f1a\u4e0d\u540c \u5982\u679c\u6587\u4ef6 \"~/.ssh/id_rsa\" \u5b58\u5728\uff0c\u4f1a\u63d0\u793a\u662f\u5426\u8986\u76d6\u8be5\u6587\u4ef6\uff0c\u6b64\u65f6\u53ef\u9009\u62e9\"n\"\u4e0d\u8986\u76d6\u8be5\u6587\u4ef6\u800c\u4f7f\u7528\u5df2\u6709\u7684id_rsa\u6587\u4ef6\u3002\u5982\u679c\u9009\u62e9\"y\"\u5219\u4f1a\u91cd\u65b0\u751f\u6210 \"~/.ssh/id_rsa\" \u6587\u4ef6\u3002\u63a5\u4e0b\u6765\u4f1a\u63d0\u793a\u8f93\u5165passphrase\uff0c\u56de\u8f66\u786e\u5b9a\u4f7f\u7528\u7a7a\u7684passphrase\uff0c\u518d\u6b21\u56de\u8f66\u786e\u8ba4\uff08\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u8f93\u51fapassphrase\uff0c\u76f8\u5f53\u4e8essh\u65f6\u767b\u5f55\u7684\u5bc6\u7801\uff09\u3002\u7136\u540e\u4f1a\u91cd\u65b0\u751f\u6210id_rsa\u6587\u4ef6\u548cid_rsa.pub\u6587\u4ef6. 2.\u5c06\u672c\u5730\u7684public key \u62f7\u8d1d\u5230\u8fdc\u7a0b\u7ec8\u7aef\u4e0a scp ~/.ssh/id_rsa.pub wzq@192.168.83.11:~/Downloads 3.\u5c06\u672c\u5730\u7684public key\u8ffd\u52a0\u5230\u8fdc\u7a0b\u7ec8\u7aefauthorized_keys\u6587\u4ef6\u4e2d cat ~/Downloads/id_rsa.pub >> ~/.ssh/authorized_keys Alternatively, Step 2 and 3 can be replaced with one step as following. ssh-copy-id -i ~/.ssh/id_rsa.pub wzq@192.168.83.11 4.\u6d4b\u8bd5\u662f\u5426\u914d\u7f6e\u751f\u6548 ssh wzq@192.168.83.11","title":"SSH login without password"},{"location":"SSH/SSH%20login%20without%20password/#1","text":"\u5ba2\u6237\u7aef\u7ec8\u7aef\u4e0b\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4 ssh-keygen -N \"\" -t rsa -f ~/.ssh/id_rsa \u6bcf\u6b21\u6267\u884c ssh-keygen -t rsa \u4ea7\u751f\u7684\u79c1\u94a5\u6587\u4ef6\u90fd\u4f1a\u4e0d\u540c \u5982\u679c\u6587\u4ef6 \"~/.ssh/id_rsa\" \u5b58\u5728\uff0c\u4f1a\u63d0\u793a\u662f\u5426\u8986\u76d6\u8be5\u6587\u4ef6\uff0c\u6b64\u65f6\u53ef\u9009\u62e9\"n\"\u4e0d\u8986\u76d6\u8be5\u6587\u4ef6\u800c\u4f7f\u7528\u5df2\u6709\u7684id_rsa\u6587\u4ef6\u3002\u5982\u679c\u9009\u62e9\"y\"\u5219\u4f1a\u91cd\u65b0\u751f\u6210 \"~/.ssh/id_rsa\" \u6587\u4ef6\u3002\u63a5\u4e0b\u6765\u4f1a\u63d0\u793a\u8f93\u5165passphrase\uff0c\u56de\u8f66\u786e\u5b9a\u4f7f\u7528\u7a7a\u7684passphrase\uff0c\u518d\u6b21\u56de\u8f66\u786e\u8ba4\uff08\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u8f93\u51fapassphrase\uff0c\u76f8\u5f53\u4e8essh\u65f6\u767b\u5f55\u7684\u5bc6\u7801\uff09\u3002\u7136\u540e\u4f1a\u91cd\u65b0\u751f\u6210id_rsa\u6587\u4ef6\u548cid_rsa.pub\u6587\u4ef6.","title":"1. \u751f\u6210\u79c1\u94a5\u6587\u4ef6"},{"location":"SSH/SSH%20login%20without%20password/#2public-key","text":"scp ~/.ssh/id_rsa.pub wzq@192.168.83.11:~/Downloads","title":"2.\u5c06\u672c\u5730\u7684public key \u62f7\u8d1d\u5230\u8fdc\u7a0b\u7ec8\u7aef\u4e0a"},{"location":"SSH/SSH%20login%20without%20password/#3public-keyauthorized_keys","text":"cat ~/Downloads/id_rsa.pub >> ~/.ssh/authorized_keys Alternatively, Step 2 and 3 can be replaced with one step as following. ssh-copy-id -i ~/.ssh/id_rsa.pub wzq@192.168.83.11","title":"3.\u5c06\u672c\u5730\u7684public key\u8ffd\u52a0\u5230\u8fdc\u7a0b\u7ec8\u7aefauthorized_keys\u6587\u4ef6\u4e2d"},{"location":"SSH/SSH%20login%20without%20password/#4","text":"ssh wzq@192.168.83.11","title":"4.\u6d4b\u8bd5\u662f\u5426\u914d\u7f6e\u751f\u6548"},{"location":"Shell/Shell%20Command/","text":"Linux \u5b89\u88c5\u5305\u67e5\u627e https://pkgs.org \u7cfb\u7edf\u786c\u4ef6\u5de5\u5177 \u67e5\u770b\u5404\u786c\u4ef6\u7684\u578b\u53f7 lspci CPU # \u67e5\u770bcup\u4fe1\u606f cat /proc/cpuinfo # \u67e5\u770b\u5404\u7ea7cache\u5927\u5c0f getconf -a | grep CACHE sudo dmidecode -t 4 # get thread or cpu core count nproc \u78c1\u76d8 \u53c2\u8003\uff1a \u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc-\u7b2c\u4e03\u7ae0 \u5217\u51fa\u7cfb\u7edf\u6240\u6709\u7684\u88c5\u7f6e\uff0c\u5305\u62ec\u672a\u6302\u8f7d\u7684 lsblk -p lsblk -o NAME,PARTTYPE,MOUNTPOINT \u67e5\u770b\u76ee\u524d\u5df2\u6302\u8f7d\u7684\u88c5\u7f6e/\u78c1\u76d8\u7684\u5269\u4f59\u7a7a\u95f4 # \u67e5\u770b\u76ee\u524d\u6302\u8f7d\u7684\u88c5\u7f6e/\u78c1\u76d8\u5269\u4f59\u7a7a\u95f4 df -Th # \u67e5\u770b /etc \u6240\u5728\u78c1\u76d8\u7684\u5269\u4f59\u7a7a\u95f4 df -h /etc \u67e5\u770b\u6587\u4ef6\u5360\u7528\u5927\u5c0f # \u67e5\u770b/home\u76ee\u5f55\u4e0b\u5404\u6587\u4ef6\u5360\u7528\u5927\u5c0f du -sh /home/* # \u67e5\u770b /home\u76ee\u5f55\u5360\u7528\u5927\u5c0f du -sh /home \u67e5\u770b\u78c1\u76d8\u5206\u533a\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b sudo parted /dev/sda print \u65e7\u6709\u7684MBR\u5206\u533a\u4f7f\u7528\u7684\u201c\u78c1\u76d8\u5206\u533a\u201d\u547d\u4ee4 # \u786c\u76d8\u5206\u533a\u5de5\u5177 fdisk, cfdisk, sfdisk, GParted # \u67e5\u770b\u78c1\u76d8\u5206\u533a fdisk -l # \u78c1\u76d8\u5206\u533a fdisk /dev/sda Create file system # ext4 file system mkfs -v -t ext4 /dev/<xxx> # create swap partition file system mkswap /dev/<yyy> # enabled /sbin/swapon -v /dev/<yyy> \u68c0\u67e5\u548c\u4fee\u590d\u635f\u574f\u7684\u786c\u76d8 fsck -C -f -t ext3 /dev/sda1 \u68c0\u67e5\u786c\u76d8\u6247\u533a\u6709\u6ca1\u6709\u574f\u8f68 badblocks -sv /dev/sda \u89c2\u5bdf\u6587\u4ef6\u7cfb\u7edf dumpe2fs \u67e5\u770b\u786c\u76d8\u4fe1\u606f \u5236\u9020\u5546\u5e8f\u5217\u53f7\u7b49 sudo hdparm -i /dev/sda # or sudo smartctl -a /dev/sda \u5236\u4f5c\u542f\u52a8\u786c\u76d8 \u5982\u679c\u5728linux\u4e0a\u7528 lsblk -p \u67e5\u770bUSB\u8bbe\u5907\uff0c\u5982\u679c\u662fmacos\u8981\u7528 diskutil list \u67e5\u770b, \u67e5\u627e\u5230\u6211\u7684USB\u8bbe\u5907\u662f/dev/disk3\uff0c \u7136\u540e\u7528dd\u547d\u4ee4\u628a\u7cfb\u7edf\u5b89\u88c5\u955c\u50cf\u70e7\u5f55\u5230USB\u4e0a dd if=ubuntu-16.04.5-desktop-amd64.iso of=/dev/disk3 \u5982\u679c\u63d0\u793a \u201c Resource busy\u201d, \u5728linux\u4e0a\u7528 umount /dev/disk3 , \u5728macos\u4e0a\u7528 diskutil umount /dev/disk3 \u53d6\u6d88\u6302\u8f7d\u3002 loop dev dd if=/dev/zero of=./rootfs.ext3 bs=1M count=32 mkfs.ext3 rootfs.ext3 sudo mount -o loop rootfs.ext3 /test/ \u67e5\u770binitramfs #\u770b\u4e00\u4e0b initramfs \u88e1\u9762\u7684\u5167\u5bb9\u6709\u4e9b\u5565\u8cc7\u6599\uff1f $ lsinitrd /boot/initramfs-4.18.0-193.el8.x86_64.img $ mkdir /dev/shm/initramfs $ cd /dev/shm/initramfs # \u53d6\u5f97 initramfs \u524d\u9762\u61c9\u8a72\u8981\u53bb\u9664\u7684\u5bb9\u91cf $ cpio -i -d --no-absolute-filenames -I /boot/initramfs-4.18.0-193.el8.x86_64.img 198 blocks # \u9019\u500b\u91cd\u9ede\u5c31\u662f\u5728\u524d\u9762\u7684\u5b57\u5143\u4f54\u4e86\u5e7e\u500b block \u5bb9\u91cf\uff0c\u6bcf\u500b block \u5bb9\u91cf\u70ba 512bytes\uff0c # \u6bcf\u4e00\u500b initramfs \u6a94\u6848\u7684\u524d\u7f6e\u5b57\u5143\u5bb9\u91cf\u90fd\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u9700\u8981\u5148\u627e\u51fa\u4f86\u53bb\u9664\u624d\u884c\uff01 $ dd if=/boot/initramfs-4.18.0-193.el8.x86_64.img of=initramfs.gz bs=512 skip=198 $ file initramfs.gz initramfs.gz: gzip compressed data, from Unix, last modified: Mon May 4 17:56:47 2015,max compression # 3. \u5f9e\u4e0a\u9762\u770b\u5230\u6a94\u6848\u662f gzip \u58d3\u7e2e\u6a94\uff0c\u6240\u4ee5\u5c07\u5b83\u89e3\u58d3\u7e2e\u5f8c\uff0c\u518d\u67e5\u95b1\u4e00\u4e0b\u6a94\u6848\u7684\u985e\u578b\uff01 $ gzip -d initramfs.gz $ file initramfs initramfs: ASCII cpio archive (SVR4 with no CRC) # \u89e3\u958b\u5f8c\u53c8\u7522\u751f\u4e00\u500b cpio \u6a94\u6848\uff0c\u5f97\u8981\u5c07\u5b83\u7528 cpio \u7684\u65b9\u6cd5\u89e3\u958b\uff01\u52a0\u4e0a\u4e0d\u8981\u7d55\u5c0d\u8def\u5f91\u7684\u53c3\u6578\u8f03\u4fdd\u96aa\uff01 $ cpio -i -d -H newc --no-absolute-filenames < initramfs \u7cfb\u7edf\u4fe1\u606f \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f Type any one of the following command to find os name and version in Linux: cat /etc/os-release lsb_release -a hostnamectl Type the following command to find Linux kernel version uname -r # \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f cat /proc/version # \u7cfb\u7edf\u67b6\u6784 arch file /bin/ls # \u4f9d\u636elong\u7c7b\u578b\u7684\u4f4d\u6570\u5224\u65ad\u5b89\u88c5\u7cfb\u7edf\u7684\u4f4d\u6570\uff0c \u4e00\u822c64\u4f4d\u64cd\u4f5c\u7cfb\u7edflong\u7c7b\u578b\u662f64\u4f4d get_conf LONG_BIT \u7cfb\u7edf\u8fdb\u7a0b ps -f -o pid,ppid,tty,stat,wchan,args # \u67e5\u770b7979 \u548c 29825 \u8fdb\u7a0b ps -p 7979 -p 29825 -o \"pid ppid sid tty cmd\" # \u6740\u6389kucker\u540d\u5b57\u7684\u8fdb\u7a0b ps -ef | grep \"kucker\" | awk '{print $2}' | xargs -i sudo kill -9 {} \u7f51\u7edc \u67e5\u8be2\u57df\u540dIP dig +norecurse @a.root-servers.net any yahoo.com dig +norecurse @e.gtld-servers.net any yahoo.com dig +norecurse @ns1.yahoo.com any yahoo.com nslookup yahoo.com nslookup -type=NS yahoo.com nslookup yahoo.com ns2.yahoo.com netstat netstat -a --inet netstat -tlunp # The -tlnp options specify that netstat should display TCP connections (-t), show the local address and port numbers in numeric form (-n), and display the PID and name of the process that is occupying each port (-p). # \u67e5\u627e\u5e76\u5173\u95ed\u6307\u5b9a\u7aef\u53e3\u7684\u8fdb\u7a0b netstat -tulnp | grep :${PORT} | awk '{print $7}' | awk -F/ '{print $1}' | xargs -i kill {} netstat -tlnp | grep :${PORT} | awk '{print $7}' | cut -d'/' -f1 | xargs -i kill {} tcpdump tcpdump -t -N 'port 80' \u6587\u4ef6 \u6587\u4ef6\u6743\u9650 # \u6539\u53d8\u6240\u5c5e\u7fa4\u7ec4 change group chgrp [-R] \u7fa4\u7ec4\u540d dirname/filename ... # \u6539\u53d8\u6863\u6848\u62e5\u6709\u8005 change owner chown [-R] \u8d26\u53f7\u540d \u6863\u6848\u6212\u76ee\u5f54 chown [-R] \u8d26\u53f7\u540d:\u7ec4\u540d \u6863\u6848\u6212\u76ee\u5f54 # \u6539\u53d8\u6743\u9650 # \u6570\u5b57\u7c7b\u578b\u6539\u53d8\u6863\u6848\u6743\u9650 chmod [-R] 740 \u6863\u6848\u76ee\u5f54 # \u7b26\u53f7\u7c7b\u578b\u6539\u53d8\u6863\u6848\u6743\u9650 # | u | +(\u52a0\u5165) | r | # chmod | g | -(\u9664\u53bb) | w | \u6863\u6848\u6212\u76ee\u5f54 # | o | =(\u8bbe\u5b9a) | x | # | a | | | chmod u=rwx,go=rx .bashrc chmod a-x .bashrc \u6587\u4ef6\u7ba1\u7406 # \u5c55\u793a\u76ee\u5f55\u5217\u8868 ls -ld \u76ee\u5f55 # \u56de\u5230\u4e0a\u6b21\u8bbf\u95ee\u7684\u76ee\u5f55 cd - # \u8fdb\u5165wzq\u7528\u6237\u5bb6\u76ee\u5f55 cd wzq~ grep \u66ff\u6362\u6216\u5220\u9664\u8de8\u8d8a\u591a\u4e2a\u76ee\u5f55\u7684\u591a\u4e2a\u6587\u4ef6\u91cc\u7684\u6307\u5b9a\u6587\u672c # \u66ff\u6362\u5f53\u524d\u76ee\u5f55\u4e0b\u9664.git\u548cbuild\u76ee\u5f55\u5916\u7684\u6240\u6709\u6587\u4ef6\u91cc\u7684\u2018window\u2019\u4e3a\u2018linux\u2019 grep -rl 'windows' ./ --exclude-dir=\".git\" --exclude-dir=\"node_modules\"| xargs sed -i 's/windows/linux/g' # Mac\u4e0bsed\u547d\u4ee4\u7684\"-i\"\u9009\u9879\u540e\u9762\u9700\u8981\u52a0\u5b57\u7b26\u4e32\u8868\u793a\u5907\u4efd\u6587\u4ef6\u7684\u540e\u7f00 grep -rl 'windows' ./ --exclude-dir=\".git\" --exclude-dir=\"node_modules\" | xargs sed -i '' 's/windows/linux/g' #\u5220\u9664\u51fa\u73b0\u2018windows\u2019\u7684\u884c grep -rl 'windows' ./ | xargs sed -i '' '/windows/d' \u7edf\u8ba1\u67d0\u4e2a\u8bcd\u8bed\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 # count the number of occurrence of a word in a text file grep -o -i 'word' test.txt | wc -l find find ./ -name \"*nng*\" -exec rm -rf {} find /usr/{lib,libexec} -name \\*.la -delete find /usr -depth -name $(uname -m)-lfs-linux-gnu\\* | xargs rm -rf find $(1) -not -type d -and -not -type l -print0 | xargs -0r chmod $(FILE_MODE) diff \u65b9\u6cd5\u4e00\uff1a diff -bur [oldDir] [newDir] \u65b9\u6cd5\u4e8c\uff1a rsync -rcnv [oldDir] [newDir] Split the screen to two columns for comparing convenience diff -y [oldDir] [newDir] sed https://www.grymoire.com/Unix/Sed.html \u538b\u7f29\u4e0e\u6253\u5305 tar $ tar [-z|-j|-J] [cv] [-f tarfile] <files or directory to be compressed> # \u6253\u5305\u8207\u58d3\u7e2e $ tar [-z|-j|-J] [tv] [-f tarfile] # \u5bdf\u770b\u6a94\u540d $ tar [-z|-j|-J] [xv] [-f tarfile] [-C \u76ee\u9304] # \u89e3\u58d3\u7e2e \u9078\u9805\u8207\u53c3\u6578\uff1a -c \uff1a\u5efa\u7acb\u6253\u5305\u6a94\u6848\uff0c\u53ef\u642d\u914d -v \u4f86\u5bdf\u770b\u904e\u7a0b\u4e2d\u88ab\u6253\u5305\u7684\u6a94\u540d(filename) -t \uff1a\u5bdf\u770b\u6253\u5305\u6a94\u6848\u7684\u5167\u5bb9\u542b\u6709\u54ea\u4e9b\u6a94\u540d\uff0c\u91cd\u9ede\u5728\u5bdf\u770b\u300e\u6a94\u540d\u300f\u5c31\u662f\u4e86\uff1b -x \uff1a\u89e3\u6253\u5305\u6216\u89e3\u58d3\u7e2e\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u642d\u914d -C (\u5927\u5beb) \u5728\u7279\u5b9a\u76ee\u9304\u89e3\u958b \u7279\u5225\u7559\u610f\u7684\u662f\uff0c -c, -t, -x \u4e0d\u53ef\u540c\u6642\u51fa\u73fe\u5728\u4e00\u4e32\u6307\u4ee4\u5217\u4e2d\u3002 -z \uff1a\u900f\u904e gzip \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.gz -j \uff1a\u900f\u904e bzip2 \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.bz2 -J \uff1a\u900f\u904e xz \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.xz \u7279\u5225\u7559\u610f\uff0c -z, -j, -J \u4e0d\u53ef\u4ee5\u540c\u6642\u51fa\u73fe\u5728\u4e00\u4e32\u6307\u4ee4\u5217\u4e2d -v \uff1a\u5728\u58d3\u7e2e/\u89e3\u58d3\u7e2e\u7684\u904e\u7a0b\u4e2d\uff0c\u5c07\u6b63\u5728\u8655\u7406\u7684\u6a94\u540d\u986f\u793a\u51fa\u4f86\uff01 -f filename\uff1a-f \u5f8c\u9762\u8981\u7acb\u523b\u63a5\u8981\u88ab\u8655\u7406\u7684\u6a94\u540d\uff01\u5efa\u8b70 -f \u55ae\u7368\u5beb\u4e00\u500b\u9078\u9805\u56c9\uff01(\u6bd4\u8f03\u4e0d\u6703\u5fd8\u8a18) -C \u76ee\u9304 \uff1a\u9019\u500b\u9078\u9805\u7528\u5728\u89e3\u58d3\u7e2e\uff0c\u82e5\u8981\u5728\u7279\u5b9a\u76ee\u9304\u89e3\u58d3\u7e2e\uff0c\u53ef\u4ee5\u4f7f\u7528\u9019\u500b\u9078\u9805\u3002 \u5176\u4ed6\u5f8c\u7e8c\u7df4\u7fd2\u6703\u4f7f\u7528\u5230\u7684\u9078\u9805\u4ecb\u7d39\uff1a -p(\u5c0f\u5beb) \uff1a\u4fdd\u7559\u5099\u4efd\u8cc7\u6599\u7684\u539f\u672c\u6b0a\u9650\u8207\u5c6c\u6027\uff0c\u5e38\u7528\u65bc\u5099\u4efd(-c)\u91cd\u8981\u7684\u8a2d\u5b9a\u6a94 -P(\u5927\u5beb) \uff1a\u4fdd\u7559\u7d55\u5c0d\u8def\u5f91\uff0c\u4ea6\u5373\u5141\u8a31\u5099\u4efd\u8cc7\u6599\u4e2d\u542b\u6709\u6839\u76ee\u9304\u5b58\u5728\u4e4b\u610f\uff1b --exclude=FILE\uff1a\u5728\u58d3\u7e2e\u7684\u904e\u7a0b\u4e2d\uff0c\u4e0d\u8981\u5c07 FILE \u6253\u5305\uff01 \u58d3\u3000\u7e2e\uff1a tar -jcv -f filename.tar.bz2 <files or directory to be compressed> \u67e5\u3000\u8a62\uff1a tar -jtv -f filename.tar.bz2 \u89e3\u58d3\u7e2e\uff1a tar -jxv -f filename.tar.bz2 -C <destination> \u5b9e\u4f8b\uff1a \u89e3\u538b\u5404\u7c7btar\u6587\u4ef6 tar xvfj ./linux-2.6.23.tar.bz2 tar xvfJ ./linux-2.6.23.tar.xz tar xvfz ./linux-2.6.23.tar.gz tar -xf ./linux-2.6.23.tar.* tar -xpf ./linux-2.6.23.tar.* \u5f53\u524d\u76ee\u5f55\u538b\u7f29\u6253\u5305\u5230/home/wzq/lfs/lfs-2.tar.xz tar -cJpf /home/wzq/lfs/lfs-2.tar.xz . \u89e3\u538bpython-3.9.0-docs-html.tar.bz2\u5230/usr/share/doc/python-3.9.0/html tar --strip-components=1 \\ --no-same-owner \\ --no-same-permissions \\ -C /usr/share/doc/python-3.9.0/html \\ -xvf ../python-3.9.0-docs-html.tar.bz2 --no-same-owner and --no-same-permissions Ensure the installed files have the correct ownership and permissions. Without these options, using tar will install the package files with the upstream creator's values. zip $ zip project0-submission.zip \\ src/include/primer/p0_trie.h \\ src/primer/p0_trie.c $ zip -j submission.zip placeholder/*.sql The -j flag lets you compress all the sql files in the zip file without path information. $ zip -rj project12.zip src/*.jack Travel the src directory recursively and compress all the jack file in the zip file without path information. You can verify the contents of your file using the unzip command. $ unzip -l project0-submission.zip User add user add the new user vivi groupadd vivi useradd -s /bin/bash -g vivi -m -d /home/vivi vivi # useradd -s /bin/bash -g vivi -m -k /dev/null vivi passwd vivi The command adds an entry to the /etc/passwd, /etc/shadow, /etc/group and /etc/gshadow files. Or, Simply by useradd -s /bin/bash -m vivi passwd vivi Or, adduser is an interactive command-line tool available by default in most Linux distributions. adduser vivi More about create user add user to sudoers Most Linux systems, including Ubuntu, have a user group for sudo users. To grant the new user elevated privileges, add them to the sudo group. usermod -aG sudo vivi The -aG option tells the system to append the user to the specified group. (The -a option is only used with G.) Or sudo adduser vivi sudo More about sudo delete user userdel -r vivi -r Remove Linux user account including home directory and mail spool Verify user information lslogins vivi id vivi View the groups a user belongs to groups vivi Gain root shell sudo -s or sudo -i Terminal CLI Shortcuts CTRL+u / CTRL+k \u5220\u9664\u884c\u5185\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u4e4b\u524d/\u540e\u7684\u5185\u5bb9 CTRL + a CTRL + e will move the cursor to the beginning / end of the current line alt-f / alt-b \u53ef\u4ee5\u4ee5\u5355\u8bcd\u4e3a\u5355\u4f4d\u5411\u524d/\u540e\u79fb\u52a8\u5149\u6807 CTRL-w \u5220\u9664\u4f60\u952e\u5165\u7684\u6700\u540e\u4e00\u4e2a\u5355\u8bcd CTRL-l \u6e05\u5c4f CTRL + r will let you search through your recently used commands CTRL+d delete backward \u4f60\u559c\u6b22\u7684\u8bdd\uff0c\u53ef\u4ee5\u6267\u884c set -o vi \u6765\u4f7f\u7528 vi \u98ce\u683c\u7684\u5feb\u6377\u952e\uff0c\u800c\u6267\u884c set -o emacs \u53ef\u4ee5\u628a\u5b83\u6539\u56de\u6765\u3002 history # number \uff1a\u57f7\u884c\u7b2c\u5e7e\u7b46\u6307\u4ee4\u7684\u610f\u601d\uff1b !number # command \uff1a\u7531\u6700\u8fd1\u7684\u6307\u4ee4\u5411\u524d\u641c\u5c0b\u300e\u6307\u4ee4\u4e32\u958b\u982d\u70ba command\u300f\u7684\u90a3\u500b\u6307\u4ee4\uff0c\u4e26\u57f7\u884c\uff1b !command # \u57f7\u884c\u4e0a\u4e00\u500b\u6307\u4ee4(\u76f8\u7576\u65bc\u6309\u2191\u6309\u9375\u5f8c\uff0c\u6309 Enter) !! \u91cd\u5b9a\u5411 # \u5c07\u6307\u4ee4\u7684\u8cc7\u6599\u5168\u90e8\u5beb\u5165\u540d\u70ba list \u7684\u6a94\u6848\u4e2d find /home -name .bashrc > list 2>&1 Download wget wget --input-file=<download-list-file> --continue --directory-prefix=<target-directory> curl curl https://github.com/ginuerzh/gost/releases/download/v2.11.1/gost-linux-amd64-2.11.1.gz --output gost.gz -o, --output <file> : Write output to <file> instead of stdout. curl -O https://github.com/ginuerzh/gost/releases/download/v2.11.1/gost-linux-amd64-2.11.1.gz -O, --remote-name : Write output to a local file named like the remote file we get. man - Manual Pages If you want the man page for a single program/command, you can run: man command_name | less Hit q to exit the man page and get back to your terminal prompt. \u67e5\u627e\u7cfb\u7edf\u5185\u8ddfpasswd\u6709\u5173\u7684\u8bf4\u660e man -f passwd If you want to search the man pages for a command that pertains to a keyword: man -k single_keyword | less This command will search the manual pages for a command with the keyword 'single_keyword'. Forget how to open files in Vim? You can search for 'editor' and get a list of all editor-related commands on your system. \u5173\u673a/\u91cd\u542f # \u672a\u4fdd\u5b58\u7684\u5185\u5b58\u6570\u636e\u5199\u5165\u786c\u76d8 sync # \u7acb\u523b\u5173\u673a\uff0c\u5176\u4e2d now \u76f8\u5f53\u4e8d\u65f6\u95f4\u4e3a 0 \u7684\u72b6\u6001 shutdown -h now # \u7cfb\u7edf\u5728\u4eca\u5929\u7684 20:25 \u5206\u4f1a\u5173\u673a\uff0c\u82e5\u5728 21:25 \u624d\u4e0b\u8fbe\u6b64\u6303\u4ee4\uff0c\u5219\u9691\u5929\u624d\u5173\u673a shutdown -h 20:25 # \u7cfb\u7edf\u518d\u8fc7\u5341\u5206\u949f\u540e\u81ea\u52a2\u5173\u673a shutdown -h +10 # \u7cfb\u7edf\u7acb\u523b\u91cd\u65b0\u542f\u52a2 shutdown -r now # \u518d\u8fc7\u4e09\u5341\u5206\u949f\u7cfb\u7edf\u4f1a\u91cd\u65b0\u542f\u52a2\uff0c\u5e75\u663e\u793a\u540e\u9762\u7684\u8baf\u606f\u7ed9\u6240\u6709\u5728\u5728\u7ebf\u7684\u4f7f\u7528\u8005 shutdown -r +30 'The system will reboot' # \u4ec5\u53d1\u51fa\u8b66\u544a\uff0c\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u5173\u673a\u5566!\u5413\u552c\u4eba! shutdown -k now 'This system will reboot' # \u91cd\u65b0\u542f\u52a2\uff0c\u5173\u673a\uff0c\u65ad\u7535 reboot, halt, poweroff Reference: Linux system administration https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md#%E4%BB%85%E9%99%90-os-x-%E7%B3%BB%E7%BB%9F","title":"Shell Command"},{"location":"Shell/Shell%20Command/#linux","text":"https://pkgs.org","title":"Linux \u5b89\u88c5\u5305\u67e5\u627e"},{"location":"Shell/Shell%20Command/#_1","text":"","title":"\u7cfb\u7edf\u786c\u4ef6\u5de5\u5177"},{"location":"Shell/Shell%20Command/#_2","text":"lspci","title":"\u67e5\u770b\u5404\u786c\u4ef6\u7684\u578b\u53f7"},{"location":"Shell/Shell%20Command/#cpu","text":"# \u67e5\u770bcup\u4fe1\u606f cat /proc/cpuinfo # \u67e5\u770b\u5404\u7ea7cache\u5927\u5c0f getconf -a | grep CACHE sudo dmidecode -t 4 # get thread or cpu core count nproc","title":"CPU"},{"location":"Shell/Shell%20Command/#_3","text":"\u53c2\u8003\uff1a \u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc-\u7b2c\u4e03\u7ae0 \u5217\u51fa\u7cfb\u7edf\u6240\u6709\u7684\u88c5\u7f6e\uff0c\u5305\u62ec\u672a\u6302\u8f7d\u7684 lsblk -p lsblk -o NAME,PARTTYPE,MOUNTPOINT \u67e5\u770b\u76ee\u524d\u5df2\u6302\u8f7d\u7684\u88c5\u7f6e/\u78c1\u76d8\u7684\u5269\u4f59\u7a7a\u95f4 # \u67e5\u770b\u76ee\u524d\u6302\u8f7d\u7684\u88c5\u7f6e/\u78c1\u76d8\u5269\u4f59\u7a7a\u95f4 df -Th # \u67e5\u770b /etc \u6240\u5728\u78c1\u76d8\u7684\u5269\u4f59\u7a7a\u95f4 df -h /etc \u67e5\u770b\u6587\u4ef6\u5360\u7528\u5927\u5c0f # \u67e5\u770b/home\u76ee\u5f55\u4e0b\u5404\u6587\u4ef6\u5360\u7528\u5927\u5c0f du -sh /home/* # \u67e5\u770b /home\u76ee\u5f55\u5360\u7528\u5927\u5c0f du -sh /home \u67e5\u770b\u78c1\u76d8\u5206\u533a\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b sudo parted /dev/sda print \u65e7\u6709\u7684MBR\u5206\u533a\u4f7f\u7528\u7684\u201c\u78c1\u76d8\u5206\u533a\u201d\u547d\u4ee4 # \u786c\u76d8\u5206\u533a\u5de5\u5177 fdisk, cfdisk, sfdisk, GParted # \u67e5\u770b\u78c1\u76d8\u5206\u533a fdisk -l # \u78c1\u76d8\u5206\u533a fdisk /dev/sda Create file system # ext4 file system mkfs -v -t ext4 /dev/<xxx> # create swap partition file system mkswap /dev/<yyy> # enabled /sbin/swapon -v /dev/<yyy> \u68c0\u67e5\u548c\u4fee\u590d\u635f\u574f\u7684\u786c\u76d8 fsck -C -f -t ext3 /dev/sda1 \u68c0\u67e5\u786c\u76d8\u6247\u533a\u6709\u6ca1\u6709\u574f\u8f68 badblocks -sv /dev/sda \u89c2\u5bdf\u6587\u4ef6\u7cfb\u7edf dumpe2fs \u67e5\u770b\u786c\u76d8\u4fe1\u606f \u5236\u9020\u5546\u5e8f\u5217\u53f7\u7b49 sudo hdparm -i /dev/sda # or sudo smartctl -a /dev/sda","title":"\u78c1\u76d8"},{"location":"Shell/Shell%20Command/#_4","text":"\u5982\u679c\u5728linux\u4e0a\u7528 lsblk -p \u67e5\u770bUSB\u8bbe\u5907\uff0c\u5982\u679c\u662fmacos\u8981\u7528 diskutil list \u67e5\u770b, \u67e5\u627e\u5230\u6211\u7684USB\u8bbe\u5907\u662f/dev/disk3\uff0c \u7136\u540e\u7528dd\u547d\u4ee4\u628a\u7cfb\u7edf\u5b89\u88c5\u955c\u50cf\u70e7\u5f55\u5230USB\u4e0a dd if=ubuntu-16.04.5-desktop-amd64.iso of=/dev/disk3 \u5982\u679c\u63d0\u793a \u201c Resource busy\u201d, \u5728linux\u4e0a\u7528 umount /dev/disk3 , \u5728macos\u4e0a\u7528 diskutil umount /dev/disk3 \u53d6\u6d88\u6302\u8f7d\u3002","title":"\u5236\u4f5c\u542f\u52a8\u786c\u76d8"},{"location":"Shell/Shell%20Command/#loop-dev","text":"dd if=/dev/zero of=./rootfs.ext3 bs=1M count=32 mkfs.ext3 rootfs.ext3 sudo mount -o loop rootfs.ext3 /test/","title":"loop dev"},{"location":"Shell/Shell%20Command/#initramfs","text":"#\u770b\u4e00\u4e0b initramfs \u88e1\u9762\u7684\u5167\u5bb9\u6709\u4e9b\u5565\u8cc7\u6599\uff1f $ lsinitrd /boot/initramfs-4.18.0-193.el8.x86_64.img $ mkdir /dev/shm/initramfs $ cd /dev/shm/initramfs # \u53d6\u5f97 initramfs \u524d\u9762\u61c9\u8a72\u8981\u53bb\u9664\u7684\u5bb9\u91cf $ cpio -i -d --no-absolute-filenames -I /boot/initramfs-4.18.0-193.el8.x86_64.img 198 blocks # \u9019\u500b\u91cd\u9ede\u5c31\u662f\u5728\u524d\u9762\u7684\u5b57\u5143\u4f54\u4e86\u5e7e\u500b block \u5bb9\u91cf\uff0c\u6bcf\u500b block \u5bb9\u91cf\u70ba 512bytes\uff0c # \u6bcf\u4e00\u500b initramfs \u6a94\u6848\u7684\u524d\u7f6e\u5b57\u5143\u5bb9\u91cf\u90fd\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u9700\u8981\u5148\u627e\u51fa\u4f86\u53bb\u9664\u624d\u884c\uff01 $ dd if=/boot/initramfs-4.18.0-193.el8.x86_64.img of=initramfs.gz bs=512 skip=198 $ file initramfs.gz initramfs.gz: gzip compressed data, from Unix, last modified: Mon May 4 17:56:47 2015,max compression # 3. \u5f9e\u4e0a\u9762\u770b\u5230\u6a94\u6848\u662f gzip \u58d3\u7e2e\u6a94\uff0c\u6240\u4ee5\u5c07\u5b83\u89e3\u58d3\u7e2e\u5f8c\uff0c\u518d\u67e5\u95b1\u4e00\u4e0b\u6a94\u6848\u7684\u985e\u578b\uff01 $ gzip -d initramfs.gz $ file initramfs initramfs: ASCII cpio archive (SVR4 with no CRC) # \u89e3\u958b\u5f8c\u53c8\u7522\u751f\u4e00\u500b cpio \u6a94\u6848\uff0c\u5f97\u8981\u5c07\u5b83\u7528 cpio \u7684\u65b9\u6cd5\u89e3\u958b\uff01\u52a0\u4e0a\u4e0d\u8981\u7d55\u5c0d\u8def\u5f91\u7684\u53c3\u6578\u8f03\u4fdd\u96aa\uff01 $ cpio -i -d -H newc --no-absolute-filenames < initramfs","title":"\u67e5\u770binitramfs"},{"location":"Shell/Shell%20Command/#_5","text":"","title":"\u7cfb\u7edf\u4fe1\u606f"},{"location":"Shell/Shell%20Command/#_6","text":"Type any one of the following command to find os name and version in Linux: cat /etc/os-release lsb_release -a hostnamectl Type the following command to find Linux kernel version uname -r # \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f cat /proc/version # \u7cfb\u7edf\u67b6\u6784 arch file /bin/ls # \u4f9d\u636elong\u7c7b\u578b\u7684\u4f4d\u6570\u5224\u65ad\u5b89\u88c5\u7cfb\u7edf\u7684\u4f4d\u6570\uff0c \u4e00\u822c64\u4f4d\u64cd\u4f5c\u7cfb\u7edflong\u7c7b\u578b\u662f64\u4f4d get_conf LONG_BIT","title":"\u67e5\u770b\u7cfb\u7edf\u4fe1\u606f"},{"location":"Shell/Shell%20Command/#_7","text":"ps -f -o pid,ppid,tty,stat,wchan,args # \u67e5\u770b7979 \u548c 29825 \u8fdb\u7a0b ps -p 7979 -p 29825 -o \"pid ppid sid tty cmd\" # \u6740\u6389kucker\u540d\u5b57\u7684\u8fdb\u7a0b ps -ef | grep \"kucker\" | awk '{print $2}' | xargs -i sudo kill -9 {}","title":"\u7cfb\u7edf\u8fdb\u7a0b"},{"location":"Shell/Shell%20Command/#_8","text":"","title":"\u7f51\u7edc"},{"location":"Shell/Shell%20Command/#ip","text":"dig +norecurse @a.root-servers.net any yahoo.com dig +norecurse @e.gtld-servers.net any yahoo.com dig +norecurse @ns1.yahoo.com any yahoo.com nslookup yahoo.com nslookup -type=NS yahoo.com nslookup yahoo.com ns2.yahoo.com","title":"\u67e5\u8be2\u57df\u540dIP"},{"location":"Shell/Shell%20Command/#netstat","text":"netstat -a --inet netstat -tlunp # The -tlnp options specify that netstat should display TCP connections (-t), show the local address and port numbers in numeric form (-n), and display the PID and name of the process that is occupying each port (-p). # \u67e5\u627e\u5e76\u5173\u95ed\u6307\u5b9a\u7aef\u53e3\u7684\u8fdb\u7a0b netstat -tulnp | grep :${PORT} | awk '{print $7}' | awk -F/ '{print $1}' | xargs -i kill {} netstat -tlnp | grep :${PORT} | awk '{print $7}' | cut -d'/' -f1 | xargs -i kill {}","title":"netstat"},{"location":"Shell/Shell%20Command/#tcpdump","text":"tcpdump -t -N 'port 80'","title":"tcpdump"},{"location":"Shell/Shell%20Command/#_9","text":"","title":"\u6587\u4ef6"},{"location":"Shell/Shell%20Command/#_10","text":"# \u6539\u53d8\u6240\u5c5e\u7fa4\u7ec4 change group chgrp [-R] \u7fa4\u7ec4\u540d dirname/filename ... # \u6539\u53d8\u6863\u6848\u62e5\u6709\u8005 change owner chown [-R] \u8d26\u53f7\u540d \u6863\u6848\u6212\u76ee\u5f54 chown [-R] \u8d26\u53f7\u540d:\u7ec4\u540d \u6863\u6848\u6212\u76ee\u5f54 # \u6539\u53d8\u6743\u9650 # \u6570\u5b57\u7c7b\u578b\u6539\u53d8\u6863\u6848\u6743\u9650 chmod [-R] 740 \u6863\u6848\u76ee\u5f54 # \u7b26\u53f7\u7c7b\u578b\u6539\u53d8\u6863\u6848\u6743\u9650 # | u | +(\u52a0\u5165) | r | # chmod | g | -(\u9664\u53bb) | w | \u6863\u6848\u6212\u76ee\u5f54 # | o | =(\u8bbe\u5b9a) | x | # | a | | | chmod u=rwx,go=rx .bashrc chmod a-x .bashrc","title":"\u6587\u4ef6\u6743\u9650"},{"location":"Shell/Shell%20Command/#_11","text":"# \u5c55\u793a\u76ee\u5f55\u5217\u8868 ls -ld \u76ee\u5f55 # \u56de\u5230\u4e0a\u6b21\u8bbf\u95ee\u7684\u76ee\u5f55 cd - # \u8fdb\u5165wzq\u7528\u6237\u5bb6\u76ee\u5f55 cd wzq~","title":"\u6587\u4ef6\u7ba1\u7406"},{"location":"Shell/Shell%20Command/#grep","text":"\u66ff\u6362\u6216\u5220\u9664\u8de8\u8d8a\u591a\u4e2a\u76ee\u5f55\u7684\u591a\u4e2a\u6587\u4ef6\u91cc\u7684\u6307\u5b9a\u6587\u672c # \u66ff\u6362\u5f53\u524d\u76ee\u5f55\u4e0b\u9664.git\u548cbuild\u76ee\u5f55\u5916\u7684\u6240\u6709\u6587\u4ef6\u91cc\u7684\u2018window\u2019\u4e3a\u2018linux\u2019 grep -rl 'windows' ./ --exclude-dir=\".git\" --exclude-dir=\"node_modules\"| xargs sed -i 's/windows/linux/g' # Mac\u4e0bsed\u547d\u4ee4\u7684\"-i\"\u9009\u9879\u540e\u9762\u9700\u8981\u52a0\u5b57\u7b26\u4e32\u8868\u793a\u5907\u4efd\u6587\u4ef6\u7684\u540e\u7f00 grep -rl 'windows' ./ --exclude-dir=\".git\" --exclude-dir=\"node_modules\" | xargs sed -i '' 's/windows/linux/g' #\u5220\u9664\u51fa\u73b0\u2018windows\u2019\u7684\u884c grep -rl 'windows' ./ | xargs sed -i '' '/windows/d' \u7edf\u8ba1\u67d0\u4e2a\u8bcd\u8bed\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 # count the number of occurrence of a word in a text file grep -o -i 'word' test.txt | wc -l","title":"grep"},{"location":"Shell/Shell%20Command/#find","text":"find ./ -name \"*nng*\" -exec rm -rf {} find /usr/{lib,libexec} -name \\*.la -delete find /usr -depth -name $(uname -m)-lfs-linux-gnu\\* | xargs rm -rf find $(1) -not -type d -and -not -type l -print0 | xargs -0r chmod $(FILE_MODE)","title":"find"},{"location":"Shell/Shell%20Command/#diff","text":"\u65b9\u6cd5\u4e00\uff1a diff -bur [oldDir] [newDir] \u65b9\u6cd5\u4e8c\uff1a rsync -rcnv [oldDir] [newDir] Split the screen to two columns for comparing convenience diff -y [oldDir] [newDir]","title":"diff"},{"location":"Shell/Shell%20Command/#sed","text":"https://www.grymoire.com/Unix/Sed.html","title":"sed"},{"location":"Shell/Shell%20Command/#_12","text":"","title":"\u538b\u7f29\u4e0e\u6253\u5305"},{"location":"Shell/Shell%20Command/#tar","text":"$ tar [-z|-j|-J] [cv] [-f tarfile] <files or directory to be compressed> # \u6253\u5305\u8207\u58d3\u7e2e $ tar [-z|-j|-J] [tv] [-f tarfile] # \u5bdf\u770b\u6a94\u540d $ tar [-z|-j|-J] [xv] [-f tarfile] [-C \u76ee\u9304] # \u89e3\u58d3\u7e2e \u9078\u9805\u8207\u53c3\u6578\uff1a -c \uff1a\u5efa\u7acb\u6253\u5305\u6a94\u6848\uff0c\u53ef\u642d\u914d -v \u4f86\u5bdf\u770b\u904e\u7a0b\u4e2d\u88ab\u6253\u5305\u7684\u6a94\u540d(filename) -t \uff1a\u5bdf\u770b\u6253\u5305\u6a94\u6848\u7684\u5167\u5bb9\u542b\u6709\u54ea\u4e9b\u6a94\u540d\uff0c\u91cd\u9ede\u5728\u5bdf\u770b\u300e\u6a94\u540d\u300f\u5c31\u662f\u4e86\uff1b -x \uff1a\u89e3\u6253\u5305\u6216\u89e3\u58d3\u7e2e\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u642d\u914d -C (\u5927\u5beb) \u5728\u7279\u5b9a\u76ee\u9304\u89e3\u958b \u7279\u5225\u7559\u610f\u7684\u662f\uff0c -c, -t, -x \u4e0d\u53ef\u540c\u6642\u51fa\u73fe\u5728\u4e00\u4e32\u6307\u4ee4\u5217\u4e2d\u3002 -z \uff1a\u900f\u904e gzip \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.gz -j \uff1a\u900f\u904e bzip2 \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.bz2 -J \uff1a\u900f\u904e xz \u7684\u652f\u63f4\u9032\u884c\u58d3\u7e2e/\u89e3\u58d3\u7e2e\uff1a\u6b64\u6642\u6a94\u540d\u6700\u597d\u70ba *.tar.xz \u7279\u5225\u7559\u610f\uff0c -z, -j, -J \u4e0d\u53ef\u4ee5\u540c\u6642\u51fa\u73fe\u5728\u4e00\u4e32\u6307\u4ee4\u5217\u4e2d -v \uff1a\u5728\u58d3\u7e2e/\u89e3\u58d3\u7e2e\u7684\u904e\u7a0b\u4e2d\uff0c\u5c07\u6b63\u5728\u8655\u7406\u7684\u6a94\u540d\u986f\u793a\u51fa\u4f86\uff01 -f filename\uff1a-f \u5f8c\u9762\u8981\u7acb\u523b\u63a5\u8981\u88ab\u8655\u7406\u7684\u6a94\u540d\uff01\u5efa\u8b70 -f \u55ae\u7368\u5beb\u4e00\u500b\u9078\u9805\u56c9\uff01(\u6bd4\u8f03\u4e0d\u6703\u5fd8\u8a18) -C \u76ee\u9304 \uff1a\u9019\u500b\u9078\u9805\u7528\u5728\u89e3\u58d3\u7e2e\uff0c\u82e5\u8981\u5728\u7279\u5b9a\u76ee\u9304\u89e3\u58d3\u7e2e\uff0c\u53ef\u4ee5\u4f7f\u7528\u9019\u500b\u9078\u9805\u3002 \u5176\u4ed6\u5f8c\u7e8c\u7df4\u7fd2\u6703\u4f7f\u7528\u5230\u7684\u9078\u9805\u4ecb\u7d39\uff1a -p(\u5c0f\u5beb) \uff1a\u4fdd\u7559\u5099\u4efd\u8cc7\u6599\u7684\u539f\u672c\u6b0a\u9650\u8207\u5c6c\u6027\uff0c\u5e38\u7528\u65bc\u5099\u4efd(-c)\u91cd\u8981\u7684\u8a2d\u5b9a\u6a94 -P(\u5927\u5beb) \uff1a\u4fdd\u7559\u7d55\u5c0d\u8def\u5f91\uff0c\u4ea6\u5373\u5141\u8a31\u5099\u4efd\u8cc7\u6599\u4e2d\u542b\u6709\u6839\u76ee\u9304\u5b58\u5728\u4e4b\u610f\uff1b --exclude=FILE\uff1a\u5728\u58d3\u7e2e\u7684\u904e\u7a0b\u4e2d\uff0c\u4e0d\u8981\u5c07 FILE \u6253\u5305\uff01 \u58d3\u3000\u7e2e\uff1a tar -jcv -f filename.tar.bz2 <files or directory to be compressed> \u67e5\u3000\u8a62\uff1a tar -jtv -f filename.tar.bz2 \u89e3\u58d3\u7e2e\uff1a tar -jxv -f filename.tar.bz2 -C <destination> \u5b9e\u4f8b\uff1a \u89e3\u538b\u5404\u7c7btar\u6587\u4ef6 tar xvfj ./linux-2.6.23.tar.bz2 tar xvfJ ./linux-2.6.23.tar.xz tar xvfz ./linux-2.6.23.tar.gz tar -xf ./linux-2.6.23.tar.* tar -xpf ./linux-2.6.23.tar.* \u5f53\u524d\u76ee\u5f55\u538b\u7f29\u6253\u5305\u5230/home/wzq/lfs/lfs-2.tar.xz tar -cJpf /home/wzq/lfs/lfs-2.tar.xz . \u89e3\u538bpython-3.9.0-docs-html.tar.bz2\u5230/usr/share/doc/python-3.9.0/html tar --strip-components=1 \\ --no-same-owner \\ --no-same-permissions \\ -C /usr/share/doc/python-3.9.0/html \\ -xvf ../python-3.9.0-docs-html.tar.bz2 --no-same-owner and --no-same-permissions Ensure the installed files have the correct ownership and permissions. Without these options, using tar will install the package files with the upstream creator's values.","title":"tar"},{"location":"Shell/Shell%20Command/#zip","text":"$ zip project0-submission.zip \\ src/include/primer/p0_trie.h \\ src/primer/p0_trie.c $ zip -j submission.zip placeholder/*.sql The -j flag lets you compress all the sql files in the zip file without path information. $ zip -rj project12.zip src/*.jack Travel the src directory recursively and compress all the jack file in the zip file without path information. You can verify the contents of your file using the unzip command. $ unzip -l project0-submission.zip","title":"zip"},{"location":"Shell/Shell%20Command/#user","text":"","title":"User"},{"location":"Shell/Shell%20Command/#add-user","text":"add the new user vivi groupadd vivi useradd -s /bin/bash -g vivi -m -d /home/vivi vivi # useradd -s /bin/bash -g vivi -m -k /dev/null vivi passwd vivi The command adds an entry to the /etc/passwd, /etc/shadow, /etc/group and /etc/gshadow files. Or, Simply by useradd -s /bin/bash -m vivi passwd vivi Or, adduser is an interactive command-line tool available by default in most Linux distributions. adduser vivi More about create user","title":"add user"},{"location":"Shell/Shell%20Command/#add-user-to-sudoers","text":"Most Linux systems, including Ubuntu, have a user group for sudo users. To grant the new user elevated privileges, add them to the sudo group. usermod -aG sudo vivi The -aG option tells the system to append the user to the specified group. (The -a option is only used with G.) Or sudo adduser vivi sudo More about sudo","title":"add user to sudoers"},{"location":"Shell/Shell%20Command/#delete-user","text":"userdel -r vivi -r Remove Linux user account including home directory and mail spool","title":"delete user"},{"location":"Shell/Shell%20Command/#verify-user-information","text":"lslogins vivi id vivi","title":"Verify user information"},{"location":"Shell/Shell%20Command/#view-the-groups-a-user-belongs-to","text":"groups vivi","title":"View the groups a user belongs to"},{"location":"Shell/Shell%20Command/#gain-root-shell","text":"sudo -s or sudo -i","title":"Gain root shell"},{"location":"Shell/Shell%20Command/#terminal","text":"","title":"Terminal"},{"location":"Shell/Shell%20Command/#cli-shortcuts","text":"CTRL+u / CTRL+k \u5220\u9664\u884c\u5185\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u4e4b\u524d/\u540e\u7684\u5185\u5bb9 CTRL + a CTRL + e will move the cursor to the beginning / end of the current line alt-f / alt-b \u53ef\u4ee5\u4ee5\u5355\u8bcd\u4e3a\u5355\u4f4d\u5411\u524d/\u540e\u79fb\u52a8\u5149\u6807 CTRL-w \u5220\u9664\u4f60\u952e\u5165\u7684\u6700\u540e\u4e00\u4e2a\u5355\u8bcd CTRL-l \u6e05\u5c4f CTRL + r will let you search through your recently used commands CTRL+d delete backward \u4f60\u559c\u6b22\u7684\u8bdd\uff0c\u53ef\u4ee5\u6267\u884c set -o vi \u6765\u4f7f\u7528 vi \u98ce\u683c\u7684\u5feb\u6377\u952e\uff0c\u800c\u6267\u884c set -o emacs \u53ef\u4ee5\u628a\u5b83\u6539\u56de\u6765\u3002","title":"CLI Shortcuts"},{"location":"Shell/Shell%20Command/#history","text":"# number \uff1a\u57f7\u884c\u7b2c\u5e7e\u7b46\u6307\u4ee4\u7684\u610f\u601d\uff1b !number # command \uff1a\u7531\u6700\u8fd1\u7684\u6307\u4ee4\u5411\u524d\u641c\u5c0b\u300e\u6307\u4ee4\u4e32\u958b\u982d\u70ba command\u300f\u7684\u90a3\u500b\u6307\u4ee4\uff0c\u4e26\u57f7\u884c\uff1b !command # \u57f7\u884c\u4e0a\u4e00\u500b\u6307\u4ee4(\u76f8\u7576\u65bc\u6309\u2191\u6309\u9375\u5f8c\uff0c\u6309 Enter) !!","title":"history"},{"location":"Shell/Shell%20Command/#_13","text":"# \u5c07\u6307\u4ee4\u7684\u8cc7\u6599\u5168\u90e8\u5beb\u5165\u540d\u70ba list \u7684\u6a94\u6848\u4e2d find /home -name .bashrc > list 2>&1","title":"\u91cd\u5b9a\u5411"},{"location":"Shell/Shell%20Command/#download","text":"","title":"Download"},{"location":"Shell/Shell%20Command/#wget","text":"wget --input-file=<download-list-file> --continue --directory-prefix=<target-directory>","title":"wget"},{"location":"Shell/Shell%20Command/#curl","text":"curl https://github.com/ginuerzh/gost/releases/download/v2.11.1/gost-linux-amd64-2.11.1.gz --output gost.gz -o, --output <file> : Write output to <file> instead of stdout. curl -O https://github.com/ginuerzh/gost/releases/download/v2.11.1/gost-linux-amd64-2.11.1.gz -O, --remote-name : Write output to a local file named like the remote file we get.","title":"curl"},{"location":"Shell/Shell%20Command/#man-manual-pages","text":"If you want the man page for a single program/command, you can run: man command_name | less Hit q to exit the man page and get back to your terminal prompt. \u67e5\u627e\u7cfb\u7edf\u5185\u8ddfpasswd\u6709\u5173\u7684\u8bf4\u660e man -f passwd If you want to search the man pages for a command that pertains to a keyword: man -k single_keyword | less This command will search the manual pages for a command with the keyword 'single_keyword'. Forget how to open files in Vim? You can search for 'editor' and get a list of all editor-related commands on your system.","title":"man -  Manual Pages"},{"location":"Shell/Shell%20Command/#_14","text":"# \u672a\u4fdd\u5b58\u7684\u5185\u5b58\u6570\u636e\u5199\u5165\u786c\u76d8 sync # \u7acb\u523b\u5173\u673a\uff0c\u5176\u4e2d now \u76f8\u5f53\u4e8d\u65f6\u95f4\u4e3a 0 \u7684\u72b6\u6001 shutdown -h now # \u7cfb\u7edf\u5728\u4eca\u5929\u7684 20:25 \u5206\u4f1a\u5173\u673a\uff0c\u82e5\u5728 21:25 \u624d\u4e0b\u8fbe\u6b64\u6303\u4ee4\uff0c\u5219\u9691\u5929\u624d\u5173\u673a shutdown -h 20:25 # \u7cfb\u7edf\u518d\u8fc7\u5341\u5206\u949f\u540e\u81ea\u52a2\u5173\u673a shutdown -h +10 # \u7cfb\u7edf\u7acb\u523b\u91cd\u65b0\u542f\u52a2 shutdown -r now # \u518d\u8fc7\u4e09\u5341\u5206\u949f\u7cfb\u7edf\u4f1a\u91cd\u65b0\u542f\u52a2\uff0c\u5e75\u663e\u793a\u540e\u9762\u7684\u8baf\u606f\u7ed9\u6240\u6709\u5728\u5728\u7ebf\u7684\u4f7f\u7528\u8005 shutdown -r +30 'The system will reboot' # \u4ec5\u53d1\u51fa\u8b66\u544a\uff0c\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u5173\u673a\u5566!\u5413\u552c\u4eba! shutdown -k now 'This system will reboot' # \u91cd\u65b0\u542f\u52a2\uff0c\u5173\u673a\uff0c\u65ad\u7535 reboot, halt, poweroff Reference: Linux system administration https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md#%E4%BB%85%E9%99%90-os-x-%E7%B3%BB%E7%BB%9F","title":"\u5173\u673a/\u91cd\u542f"},{"location":"Shell/Shell%20Script/","text":"symbol $@ : stores all the arguments in a list of string $* : stores all the arguments as a single string $# : stores the number of arguments local variable local d=\"hello\" Remark: both side of '=' can't have white space. function # declaration function function recurse() { local dir=${1} # ls ${1} #cd ${1} for file in `ls ${dir}` do if [[ -d ${dir}/$file ]]; then recurse ${dir}/$file elif [[ -f ${dir}/$file ]]; then if [[ $file == *.xml ]] then echo ${dir}/${file} #echo rename ${dir}/${file} fi else echo \"$file is not valid\" exit 1 fi done } # call function recurse ~/wk/nand2tetris/projects Loop Statement for file in `ls ~/wk/nand2tetris/projects/01` do echo ${file} done for file in $(find . -name \"*.c\") do filename=${file%.c} echo $filename.cpp done for (( i=0; i<10; i++ )) do echo $i done If Statement if [[ -d $file ]]; then echo \"$file is a directory\" elif [[ -f $file ]]; then echo \"$file is a file\" else echo \"$file is not valid\" exit 1 fi Case Statement case ${1} in \"release\") echo \"release case\" ;; \"debug\") echo \"debug case\" ;; \"help\") echo \"usage case\" ;; \"\") echo \"No argument case\" ;; *) echo \"Default case.\" ;; esac wait ######################################################### # first word-count # generate the correct output ../mrsequential ../../mrapps/wc.so ../pg*txt || exit 1 sort mr-out-0 > mr-correct-wc.txt rm -f mr-out* echo '***' Starting wc test. ../mrcoordinator ../pg*txt & pid=$! # give the coordinator time to create the sockets. sleep 1 # start multiple workers. (../mrworker ../../mrapps/wc.so) & (../mrworker ../../mrapps/wc.so) & (../mrworker ../../mrapps/wc.so) & # wait for the coordinator to exit. wait $pid # since workers are required to exit when a job is completely finished, # and not before, that means the job has finished. sort mr-out* | grep . > mr-wc-all if cmp mr-wc-all mr-correct-wc.txt then echo '---' wc test: PASS else echo '---' wc output is not the same as mr-correct-wc.txt echo '---' wc test: FAIL failed_any=1 fi # wait for remaining workers and coordinator to exit. wait","title":"Shell Script"},{"location":"Shell/Shell%20Script/#symbol","text":"$@ : stores all the arguments in a list of string $* : stores all the arguments as a single string $# : stores the number of arguments","title":"symbol"},{"location":"Shell/Shell%20Script/#local-variable","text":"local d=\"hello\" Remark: both side of '=' can't have white space.","title":"local variable"},{"location":"Shell/Shell%20Script/#function","text":"# declaration function function recurse() { local dir=${1} # ls ${1} #cd ${1} for file in `ls ${dir}` do if [[ -d ${dir}/$file ]]; then recurse ${dir}/$file elif [[ -f ${dir}/$file ]]; then if [[ $file == *.xml ]] then echo ${dir}/${file} #echo rename ${dir}/${file} fi else echo \"$file is not valid\" exit 1 fi done } # call function recurse ~/wk/nand2tetris/projects","title":"function"},{"location":"Shell/Shell%20Script/#loop-statement","text":"for file in `ls ~/wk/nand2tetris/projects/01` do echo ${file} done for file in $(find . -name \"*.c\") do filename=${file%.c} echo $filename.cpp done for (( i=0; i<10; i++ )) do echo $i done","title":"Loop Statement"},{"location":"Shell/Shell%20Script/#if-statement","text":"if [[ -d $file ]]; then echo \"$file is a directory\" elif [[ -f $file ]]; then echo \"$file is a file\" else echo \"$file is not valid\" exit 1 fi","title":"If Statement"},{"location":"Shell/Shell%20Script/#case-statement","text":"case ${1} in \"release\") echo \"release case\" ;; \"debug\") echo \"debug case\" ;; \"help\") echo \"usage case\" ;; \"\") echo \"No argument case\" ;; *) echo \"Default case.\" ;; esac","title":"Case Statement"},{"location":"Shell/Shell%20Script/#wait","text":"######################################################### # first word-count # generate the correct output ../mrsequential ../../mrapps/wc.so ../pg*txt || exit 1 sort mr-out-0 > mr-correct-wc.txt rm -f mr-out* echo '***' Starting wc test. ../mrcoordinator ../pg*txt & pid=$! # give the coordinator time to create the sockets. sleep 1 # start multiple workers. (../mrworker ../../mrapps/wc.so) & (../mrworker ../../mrapps/wc.so) & (../mrworker ../../mrapps/wc.so) & # wait for the coordinator to exit. wait $pid # since workers are required to exit when a job is completely finished, # and not before, that means the job has finished. sort mr-out* | grep . > mr-wc-all if cmp mr-wc-all mr-correct-wc.txt then echo '---' wc test: PASS else echo '---' wc output is not the same as mr-correct-wc.txt echo '---' wc test: FAIL failed_any=1 fi # wait for remaining workers and coordinator to exit. wait","title":"wait"},{"location":"Unbuntu/Ubuntu%E5%BF%85%E5%A4%87/","text":"\u5f00\u53d1\u5fc5\u5907\u7f16\u8bd1\u73af\u5883 # \u7f16\u8bd1\u73af\u5883 apt-get install build-essential make automake autoconf libtool-bin apt-get install git qemu-system-x86 vim-gnome gdb cgdb eclipse-cdt make diffutils exuberant-ctags tmux cscope meld qgit gitg gcc-multilib gcc-multilib g++-multilib # \u6700\u5c0f\u9700\u8981\u7684\u5b89\u88c5\u5305 sudo apt-get install build-essential libncurses-dev bison flex libssl-dev libelf-dev # On 64-bit machines, you may need to install a 32-bit support library. apt-get install gcc-multilib # openssl\u5b89\u88c5 apt-get install openssl libssl-dev apt-get install zlib1g-dev libsdl1.2-dev libesd0-dev \u8bbe\u7f6e\u7b14\u8bb0\u672c\u5408\u4e0a\u76d6\u5b50\u65f6\u4e0d\u8fdb\u5165\u4f11\u7720 \u4fee\u6539 Login Manager\u7684\u914d\u7f6e\u6587\u4ef6\u3002 sudo vim /etc/systemd/logind.conf \u7136\u540e\u5c06\u5176\u4e2d\u7684\uff1a #HandleLidSwitch=suspend \u6539\u6210\uff1a HandleLidSwitch=ignore \u7136\u540e\u91cd\u542f\u670d\u52a1\uff1a sudo restart systemd-logind # or service systemd-logind restart # or \u76f4\u63a5\u91cd\u542f sudo shutdown -r now \u5b89\u88c5haroopad\uff08Markdown\u7f16\u8f91\u5668\uff09 \u5b98\u7f51\uff1ahttp://pad.haroopress.com $ wget https://bitbucket.org/rhiokim/haroopad-download/downloads/haroopad-v0.13.1-ia32.deb $ sudo apt-get install gdebi $ sudo gdebi haroopad-v0.13.1-ia32.deb \u5b89\u88c5deb\u6587\u4ef6 # \u5b89\u88c5 sudo dpkg -i deb\u6587\u4ef6\u540d # \u6839\u636e\u7ecf\u9a8c\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u4f1a\u62a5\u4f9d\u8d56\u5173\u7cfb\u7684\u9519\u8bef\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u7684\u547d\u4ee4\u4fee\u590d\u5b89\u88c5\u3002 sudo apt-get install -f # \u67e5\u770b\u5df2\u5b89\u88c5 sudo dpkg -l # \u5378\u8f7d sudo dpkg -r \u8f6f\u4ef6\u540d terminal \u663e\u793agit\u5206\u652f in file ~/.bashrc parse_git_branch() { git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/ (\\1)/' } PS1=\"${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\e[91m\\]\\$(parse_git_branch)\\[\\033[00m\\]\\$ \" #PS1=\"\\u@\\h \\[\\e[32m\\]\\w \\[\\e[91m\\]\\$(parse_git_branch)\\[\\e[00m\\]$ \" ubuntu18\u66f4\u6362\u56fd\u5185\u6e90 cat >> /etc/apt/sources.list << \"EOF\" deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse EOF apt-get update apt-get upgrade","title":"Ubuntu\u5fc5\u5907"},{"location":"Unbuntu/Ubuntu%E5%BF%85%E5%A4%87/#_1","text":"# \u7f16\u8bd1\u73af\u5883 apt-get install build-essential make automake autoconf libtool-bin apt-get install git qemu-system-x86 vim-gnome gdb cgdb eclipse-cdt make diffutils exuberant-ctags tmux cscope meld qgit gitg gcc-multilib gcc-multilib g++-multilib # \u6700\u5c0f\u9700\u8981\u7684\u5b89\u88c5\u5305 sudo apt-get install build-essential libncurses-dev bison flex libssl-dev libelf-dev # On 64-bit machines, you may need to install a 32-bit support library. apt-get install gcc-multilib # openssl\u5b89\u88c5 apt-get install openssl libssl-dev apt-get install zlib1g-dev libsdl1.2-dev libesd0-dev","title":"\u5f00\u53d1\u5fc5\u5907\u7f16\u8bd1\u73af\u5883"},{"location":"Unbuntu/Ubuntu%E5%BF%85%E5%A4%87/#_2","text":"\u4fee\u6539 Login Manager\u7684\u914d\u7f6e\u6587\u4ef6\u3002 sudo vim /etc/systemd/logind.conf \u7136\u540e\u5c06\u5176\u4e2d\u7684\uff1a #HandleLidSwitch=suspend \u6539\u6210\uff1a HandleLidSwitch=ignore \u7136\u540e\u91cd\u542f\u670d\u52a1\uff1a sudo restart systemd-logind # or service systemd-logind restart # or \u76f4\u63a5\u91cd\u542f sudo shutdown -r now","title":"\u8bbe\u7f6e\u7b14\u8bb0\u672c\u5408\u4e0a\u76d6\u5b50\u65f6\u4e0d\u8fdb\u5165\u4f11\u7720"},{"location":"Unbuntu/Ubuntu%E5%BF%85%E5%A4%87/#haroopadmarkdown","text":"\u5b98\u7f51\uff1ahttp://pad.haroopress.com $ wget https://bitbucket.org/rhiokim/haroopad-download/downloads/haroopad-v0.13.1-ia32.deb $ sudo apt-get install gdebi $ sudo gdebi haroopad-v0.13.1-ia32.deb","title":"\u5b89\u88c5haroopad\uff08Markdown\u7f16\u8f91\u5668\uff09"},{"location":"Unbuntu/Ubuntu%E5%BF%85%E5%A4%87/#deb","text":"# \u5b89\u88c5 sudo dpkg -i deb\u6587\u4ef6\u540d # \u6839\u636e\u7ecf\u9a8c\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u4f1a\u62a5\u4f9d\u8d56\u5173\u7cfb\u7684\u9519\u8bef\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u7684\u547d\u4ee4\u4fee\u590d\u5b89\u88c5\u3002 sudo apt-get install -f # \u67e5\u770b\u5df2\u5b89\u88c5 sudo dpkg -l # \u5378\u8f7d sudo dpkg -r \u8f6f\u4ef6\u540d","title":"\u5b89\u88c5deb\u6587\u4ef6"},{"location":"Unbuntu/Ubuntu%E5%BF%85%E5%A4%87/#terminal-git","text":"in file ~/.bashrc parse_git_branch() { git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/ (\\1)/' } PS1=\"${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\e[91m\\]\\$(parse_git_branch)\\[\\033[00m\\]\\$ \" #PS1=\"\\u@\\h \\[\\e[32m\\]\\w \\[\\e[91m\\]\\$(parse_git_branch)\\[\\e[00m\\]$ \"","title":"terminal \u663e\u793agit\u5206\u652f"},{"location":"Unbuntu/Ubuntu%E5%BF%85%E5%A4%87/#ubuntu18","text":"cat >> /etc/apt/sources.list << \"EOF\" deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse EOF apt-get update apt-get upgrade","title":"ubuntu18\u66f4\u6362\u56fd\u5185\u6e90"},{"location":"Unbuntu/fix-the-no-wifi-adapter-found-error-on-ubuntu/","text":"Fix \u201cNo WiFi Adapter Found\u201d Error on Ubuntu A remarkable fact is that this method doesn\u2019t require you to have an internet connection. Step 1. Copy the Ubuntu ISO image in your home directory. Rename it to a simple name like \u2018ubuntu.iso.\u2019 Step 2. Launch the Terminal and mount the ISO image on the system like a CD/DVD. sudo mkdir /media/cdrom cd ~ sudo mount -o loop ubuntu.iso /media/cdrom Step 3. Now, launch the Software & Updates app from the applications menu. Step 4. Click on the Ubuntu Software tab and check the box \u2018Installable from CD-Rom/DVD.\u2019 A window will pop-up, and you will be required to enter the root password. Step 5. Click on the Additional Drivers tab. If you see the statement \u201cNo additional drivers available,\u201d this Method won\u2019t work for you. If you see the proprietary drivers listed, then you can go ahead. Select the proprietary drivers and click the Apply Changes button. In my case, my system supports Broadcom drivers. Once done, your wireless connection problem should be solved, and you can see your WiFi networks. Reference https://www.fosslinux.com/43345/fix-the-no-wi-fi-adapter-found-error-on-ubuntu.htm","title":"Fix \u201cNo WiFi Adapter Found\u201d Error on Ubuntu"},{"location":"Unbuntu/fix-the-no-wifi-adapter-found-error-on-ubuntu/#fix-no-wifi-adapter-found-error-on-ubuntu","text":"A remarkable fact is that this method doesn\u2019t require you to have an internet connection. Step 1. Copy the Ubuntu ISO image in your home directory. Rename it to a simple name like \u2018ubuntu.iso.\u2019 Step 2. Launch the Terminal and mount the ISO image on the system like a CD/DVD. sudo mkdir /media/cdrom cd ~ sudo mount -o loop ubuntu.iso /media/cdrom Step 3. Now, launch the Software & Updates app from the applications menu. Step 4. Click on the Ubuntu Software tab and check the box \u2018Installable from CD-Rom/DVD.\u2019 A window will pop-up, and you will be required to enter the root password. Step 5. Click on the Additional Drivers tab. If you see the statement \u201cNo additional drivers available,\u201d this Method won\u2019t work for you. If you see the proprietary drivers listed, then you can go ahead. Select the proprietary drivers and click the Apply Changes button. In my case, my system supports Broadcom drivers. Once done, your wireless connection problem should be solved, and you can see your WiFi networks.","title":"Fix \u201cNo WiFi Adapter Found\u201d Error on Ubuntu"},{"location":"Unbuntu/fix-the-no-wifi-adapter-found-error-on-ubuntu/#reference","text":"https://www.fosslinux.com/43345/fix-the-no-wi-fi-adapter-found-error-on-ubuntu.htm","title":"Reference"},{"location":"Vagrant/Vagrant%20tutorial/","text":"Create the machine mkdir ubuntu18 cd ubuntu18 vagrant init generic/ubuntu1804 Start the machine vagrant up Login the machine vagrant ssh Logout the machine exit or CTRL+D Suspend the machine Suspending the virtual machine will stop it and save its current running state. Suspend the machine now. vagrant suspend Halt the machine Halting the virtual machine will gracefully shut down the guest operating system and power down the guest machine. Halt your machine now. vagrant halt Destroy the machine Destroying the virtual machine will remove all traces of the guest machine from your system. It'll stop the guest machine, power it down, and reclaim its disk space and RAM. vagrant destroy List boxes vagrant box list Quik start HashiCorp's Vagrant Cloud box catalog boxes create","title":"Vagrant tutorial"},{"location":"Vagrant/Vagrant%20tutorial/#create-the-machine","text":"mkdir ubuntu18 cd ubuntu18 vagrant init generic/ubuntu1804","title":"Create the machine"},{"location":"Vagrant/Vagrant%20tutorial/#start-the-machine","text":"vagrant up","title":"Start the machine"},{"location":"Vagrant/Vagrant%20tutorial/#login-the-machine","text":"vagrant ssh","title":"Login the machine"},{"location":"Vagrant/Vagrant%20tutorial/#logout-the-machine","text":"exit or CTRL+D","title":"Logout the machine"},{"location":"Vagrant/Vagrant%20tutorial/#suspend-the-machine","text":"Suspending the virtual machine will stop it and save its current running state. Suspend the machine now. vagrant suspend","title":"Suspend the machine"},{"location":"Vagrant/Vagrant%20tutorial/#halt-the-machine","text":"Halting the virtual machine will gracefully shut down the guest operating system and power down the guest machine. Halt your machine now. vagrant halt","title":"Halt the machine"},{"location":"Vagrant/Vagrant%20tutorial/#destroy-the-machine","text":"Destroying the virtual machine will remove all traces of the guest machine from your system. It'll stop the guest machine, power it down, and reclaim its disk space and RAM. vagrant destroy","title":"Destroy the machine"},{"location":"Vagrant/Vagrant%20tutorial/#list-boxes","text":"vagrant box list Quik start HashiCorp's Vagrant Cloud box catalog boxes create","title":"List boxes"},{"location":"database/sql/","text":"sql\u6559\u7a0b\uff1ahttps://www.w3schools.cn/sql/default.html sqlite: https://www.tutorialspoint.com/sqlite/index.htm Command Line Shell For SQLite\uff1ahttps://sqlite.org/cli.html","title":"Sql"},{"location":"docker/docker/","text":"Editing source code in an IDE on the host while running and testing the code in a container. \u521b\u5efa\u4e00\u4e2aubuntu\u5bb9\u5668\uff0c\u5e76\u628a\u672c\u5730\u5de5\u4f5c\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d docker run --name mydev -v /Users/wzq:/home/wzq -w /home/wzq -i -t wangzhengquan/dev-in-ubuntu:1.0 bash \u73b0\u5728\u5bbf\u4e3b\u673a\u548c\u5bb9\u5668\u5c31\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u7528\u5bbf\u4e3b\u673a\u4e0a\u7684\u7f16\u8f91\u5de5\u5177\u7f16\u5199\u4ee3\u7801\u5e76\u4fdd\u5b58\uff0c\u7136\u540e\u5728\u5bb9\u5668\u91cc\u7f16\u8bd1\u5e76\u8fd0\u884c\u4ee3\u7801\u3002 \u5982\u679c\u5173\u95ed\u4e86\uff0c\u4e0b\u4e00\u6b21\u518d\u6b21\u8fd0\u884c\u8fd9\u4e2a\u5bb9\u5668 docker start -i mydev \u5728\u5df2\u7ecf\u8fd0\u884c\u8d77\u6765\u7684\u5bb9\u5668\u4e2d\u518d\u6253\u5f00\u4e00\u4e2abash docker exec -it mydev bash docker port docker port remove all container docker rm -f $(docker ps -aq) remove all images docker rmi $(docker images -a -q) Dockerfile Dockerfile is a simple way to automate the image creation process. FROM ubuntu:22.04 CMD bash # Install Ubuntu packages. ARG DEBIAN_FRONTEND=noninteractive RUN apt-get -y update && \\ apt-get -y install \\ build-essential \\ clang-12 \\ clang-format-12 \\ clang-tidy-12 \\ cmake \\ doxygen \\ git \\ g++-12 \\ gdb \\ pkg-config \\ zlib1g-dev \\ vim Build the image The docker build command is quite simple - it takes an optional tag name with the -t flag, and the location of the directory containing the Dockerfile - the . indicates the current directory: docker build -t wangzhengquan/dev-in-ubuntu:1.0 . Push your image Now that you've created and tested your image, you can push it to Docker Cloud . First you have to login to your Docker Cloud account, to do that: docker login Or docker login -u wangzhengquan Enter YOUR_USERNAME and password when prompted. Now all you have to do is: docker push wangzhengquan/dev-in-ubuntu:1.0 login error in macos If you encounter a login error, try to remove '~/.docker/config.json' file and relogin. rm -rf ~/.docker/config.json play-with-docker https://labs.play-with-docker.com https://training.play-with-docker.com/ mount docker run -it --mount type=bind,src=\"$(pwd)\",target=/src ubuntu bash download docker for macos catalina: https://desktop.docker.com/mac/main/amd64/93002/Docker.dmg References Get started Docker for beginners Change Docker Desktop settings on Mac Docker commandline Docker Cloud Dockerfile","title":"docker"},{"location":"docker/docker/#editing-source-code-in-an-ide-on-the-host-while-running-and-testing-the-code-in-a-container","text":"\u521b\u5efa\u4e00\u4e2aubuntu\u5bb9\u5668\uff0c\u5e76\u628a\u672c\u5730\u5de5\u4f5c\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d docker run --name mydev -v /Users/wzq:/home/wzq -w /home/wzq -i -t wangzhengquan/dev-in-ubuntu:1.0 bash \u73b0\u5728\u5bbf\u4e3b\u673a\u548c\u5bb9\u5668\u5c31\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u7528\u5bbf\u4e3b\u673a\u4e0a\u7684\u7f16\u8f91\u5de5\u5177\u7f16\u5199\u4ee3\u7801\u5e76\u4fdd\u5b58\uff0c\u7136\u540e\u5728\u5bb9\u5668\u91cc\u7f16\u8bd1\u5e76\u8fd0\u884c\u4ee3\u7801\u3002 \u5982\u679c\u5173\u95ed\u4e86\uff0c\u4e0b\u4e00\u6b21\u518d\u6b21\u8fd0\u884c\u8fd9\u4e2a\u5bb9\u5668 docker start -i mydev \u5728\u5df2\u7ecf\u8fd0\u884c\u8d77\u6765\u7684\u5bb9\u5668\u4e2d\u518d\u6253\u5f00\u4e00\u4e2abash docker exec -it mydev bash","title":"Editing source code in an IDE on the host while running and testing the code in a container."},{"location":"docker/docker/#docker-port","text":"docker port","title":"docker port"},{"location":"docker/docker/#remove-all-container","text":"docker rm -f $(docker ps -aq)","title":"remove all container"},{"location":"docker/docker/#remove-all-images","text":"docker rmi $(docker images -a -q)","title":"remove all images"},{"location":"docker/docker/#dockerfile","text":"Dockerfile is a simple way to automate the image creation process. FROM ubuntu:22.04 CMD bash # Install Ubuntu packages. ARG DEBIAN_FRONTEND=noninteractive RUN apt-get -y update && \\ apt-get -y install \\ build-essential \\ clang-12 \\ clang-format-12 \\ clang-tidy-12 \\ cmake \\ doxygen \\ git \\ g++-12 \\ gdb \\ pkg-config \\ zlib1g-dev \\ vim","title":"Dockerfile"},{"location":"docker/docker/#build-the-image","text":"The docker build command is quite simple - it takes an optional tag name with the -t flag, and the location of the directory containing the Dockerfile - the . indicates the current directory: docker build -t wangzhengquan/dev-in-ubuntu:1.0 .","title":"Build the image"},{"location":"docker/docker/#push-your-image","text":"Now that you've created and tested your image, you can push it to Docker Cloud . First you have to login to your Docker Cloud account, to do that: docker login Or docker login -u wangzhengquan Enter YOUR_USERNAME and password when prompted. Now all you have to do is: docker push wangzhengquan/dev-in-ubuntu:1.0","title":"Push your image"},{"location":"docker/docker/#login-error-in-macos","text":"If you encounter a login error, try to remove '~/.docker/config.json' file and relogin. rm -rf ~/.docker/config.json","title":"login error in macos"},{"location":"docker/docker/#play-with-docker","text":"https://labs.play-with-docker.com https://training.play-with-docker.com/","title":"play-with-docker"},{"location":"docker/docker/#mount","text":"docker run -it --mount type=bind,src=\"$(pwd)\",target=/src ubuntu bash","title":"mount"},{"location":"docker/docker/#download","text":"docker for macos catalina: https://desktop.docker.com/mac/main/amd64/93002/Docker.dmg","title":"download"},{"location":"docker/docker/#references","text":"Get started Docker for beginners Change Docker Desktop settings on Mac Docker commandline Docker Cloud Dockerfile","title":"References"},{"location":"math/math/","text":"math tool https://www.wolframalpha.com/input animation https://github.com/3b1b/manim https://github.com/manimCommunity/manim \u4e3b\u9875\uff1awww.manim.community","title":"Math"},{"location":"math/math/#math-tool","text":"https://www.wolframalpha.com/input","title":"math tool"},{"location":"math/math/#animation","text":"https://github.com/3b1b/manim https://github.com/manimCommunity/manim \u4e3b\u9875\uff1awww.manim.community","title":"animation"},{"location":"nginx/nginx/","text":"","title":"Nginx"},{"location":"qemu/qemu/","text":"install https://www.makeuseof.com/how-to-install-qemu-ubuntu-set-up-virtual-machine/ sudo apt install libvirt-daemon sudo apt install qemu-kvm tutorial https://www.qemu.org/docs/master/system/index.html","title":"Qemu"},{"location":"qemu/qemu/#install","text":"https://www.makeuseof.com/how-to-install-qemu-ubuntu-set-up-virtual-machine/ sudo apt install libvirt-daemon sudo apt install qemu-kvm","title":"install"},{"location":"qemu/qemu/#tutorial","text":"https://www.qemu.org/docs/master/system/index.html","title":"tutorial"},{"location":"save/WebGL/","text":"To get started with WebGL, follow these steps: Understand the Basics : Learn the fundamentals of computer graphics and WebGL concepts, including shaders, buffers, and rendering pipelines. Choose a Development Environment : Set up a development environment with a text editor, WebGL-enabled browser, and a local server to run your WebGL projects. Learn WebGL Libraries : Familiarize yourself with WebGL libraries like Three.js, Babylon.js, or regl to simplify and enhance your WebGL development process. Study Tutorials and Documentation : Explore online tutorials, guides, and official documentation to deepen your understanding of WebGL programming and best practices. Practice with Examples : Start with simple WebGL examples and gradually move on to more complex projects to gain hands-on experience and improve your skills. Experiment with Shaders : Understand how to create and manipulate shaders (vertex and fragment shaders) to customize the visual effects in your WebGL applications. Build Projects : Develop your own WebGL projects, such as interactive 3D scenes, data visualizations, games, or simulations, to apply your knowledge and showcase your skills. Collaborate and Seek Feedback : Engage with the WebGL community, participate in forums, attend meetups, and seek feedback on your projects to learn from others and improve your work. By following these steps and continuously practicing and exploring the world of WebGL, you can develop proficiency in creating engaging and interactive 3D graphics for the web. mdn WebGL_API : https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Basic_2D_animation_example threejs Three.js Fundamentals: https://threejs.org/manual/#en/fundamentals threejs-journey: https://threejs-journey.com/ The Book of Shaders: https://thebookofshaders.com/","title":"WebGL"},{"location":"save/WebGL/#mdn","text":"WebGL_API : https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Basic_2D_animation_example","title":"mdn"},{"location":"save/WebGL/#threejs","text":"Three.js Fundamentals: https://threejs.org/manual/#en/fundamentals threejs-journey: https://threejs-journey.com/ The Book of Shaders: https://thebookofshaders.com/","title":"threejs"},{"location":"save/ai/","text":"\u6307\u5357 \u4f7f\u7528\u6307\u5357\uff1a https://gitlab.com/awesomeai/awesome-chatgpt-zh \u6ce8\u518c+\u7ffb\u5899\uff1ahttps://silentming.net/blog/2023/03/27/using-cfwraper/ \u6ce8\u518cchatGPT: https://medium.com/@dykaknsjwkmsmwm/%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E4%B8%80%E4%B8%AAchatgpt%E8%B4%A6%E5%8F%B7-99646c841fb4 AIGC\u98de\u4e66\u77e5\u8bc6\u5e93\uff1a https://ywh1bkansf.feishu.cn/wiki/QPe5w5g7UisbEkkow8XcDmOpn8e GPT best practices waitlist:https://openai.com/waitlist/gpt-4-api \u5de5\u5177\u6536\u96c6 https://openai.xnewstar.com/ vps Hostdare: https://www.hostdare.com/ \u865a\u62df\u4ed8\u8d39\u5361\uff1a \u6307\u5357\uff1a https://sites.google.com/view/chatgptcn/ChatGPT-Plus-bind-credit-cards https://x.com/zuozizhen/status/1642034351163719680 https://twitter.com/Cydiar404/status/1637047977541009408 https://twitter.com/lewangdev/status/1628802873013465088 nobepay Depay\uff1a https://depay.com/ PayPal stripe\uff1a https://stripe.com/zh-us \u53ef\u4ee5\u8d2d\u4e70\u7f8e\u533a\u7684iTunes\u7684Gift Card\u4ed8\u8d39\u5361\u8fdb\u884c\u5145\u503c https://card.onekey.so/home \u865a\u62df\u5730\u5740\u751f\u6210 www.meiguodizhi.com/ www.haoweichi.com/ \u624b\u673a\u5361 PayGo\uff1a https://www.ultramobile.com/paygo/ \u77ed\u4fe1\u63a5\u7801\u5e73\u53f0 https://5sim.net/ \u7f51\u7edc\u7535\u8bdd\u77ed\u4fe1 --- virtual phone number service Burner wephone prompts ChatGPT Prompt \u89c6\u9891\u6559\u7a0b https://github.com/f/awesome-chatgpt-prompts https://github.com/PlexPt/awesome-chatgpt-prompts-zh GPTs Prompts: github.com/linexjlin/GPTs Chat chatgpt claude: https://claude.ai/chat/ https://poe.com/ChatGPT https://chatgpt.com/chat perplexity: https://www.perplexity.ai/ \u514d\u8d39gpt4: https://app.copilothub.ai/ https://app.copilothub.ai/chat?id=4364 https://coze.com https://www.coze.com/store/bot/7348297603085352962?panel=1&bid=6ck3vs0so4g05 https://www.glbgpt.com/chat chatbot ui https://github.com/open-webui/open-webui https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web https://github.com/mckaywrigley/chatbot-ui https://github.com/Bin-Huang/chatbox https://github.com/josStorer/chatGPTBox VoceChat https://x.com/wsygc/status/1793786792866701418 https://www.bilibili.com/video/BV1r8411g7yt/?share_source=copy_web&vd_source=b5c6298de30df695b6d8fb64bfc1e9bc \u5b98\u7f51\uff1ahttps://voce.chat \u5b98\u65b9\u6587\u6863\uff1ahttps://doc.voce.chat git\u5730\u5740\uff1ahttps://github.com/Privoce API https://platform.openai.com \u7f16\u7a0b Copilot X https://twitter.com/AlphaSignalAI/status/1638571132474511361 https://github.blog/2023-03-22-github-copilot-x-the-ai-powered-developer-experience/ github copilot https://docs.github.com/en/copilot/using-github-copilot/getting-started-with-github-copilot?tool=vscode#prerequisites-2 how to use: https://www.builder.io/blog/vscode-tips https://twitter.com/Steve8708/status/1635758301899264000 bloop https://bloop.ai/ cursor https://www.cursor.so/ AI Code Translator Try it: https://ai-code-translator.vercel.app GitHub: https://github.com/mckaywrigley/ai-code-translator http://Codeium.com shell Shell GPT \u8be5\u5de5\u5177\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4e2d\u96c6\u6210\u4e86 ChatGPT\uff0c\u901a\u8fc7\u5b83\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f\u7f16\u5199 shell \u547d\u4ee4\u3001\u4ee3\u7801\u7247\u6bb5\u7f16\u5199\u3001Git \u63d0\u4ea4\u4fe1\u606f\u3001\u6587\u6863\u3001\u6ce8\u91ca\u7b49\u5185\u5bb9\u3002 \u7528\u6cd5\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u83b7\u53d6\u67d0\u4e2a\u4efb\u52a1\u7684\u6267\u884c\u6307\u4ee4\uff1b \u76f4\u63a5\u8f6c\u6362\u65f6\u95f4\u3001\u8ddd\u79bb\u3001\u91cd\u91cf\u3001\u6e29\u5ea6\u7b49\u5355\u4f4d\uff1b \u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u641c\u7d22 shell \u7528\u6cd5\uff1b \u81ea\u52a8\u751f\u6210\u4ee3\u7801\u5e76\u5b58\u50a8\uff1b \u5728\u547d\u4ee4\u884c\u8ddf ChatGPT \u5bf9\u8bdd\uff0c\u5e76\u8fed\u4ee3\u4f18\u5316\u3002 ai-shell Warp AI https://twitter.com/zachlloydtweets/status/1636385520082386944 https://www.warp.dev/ \u82f1\u8bed\u5b66\u4e60 DashPlayer \u7684\u76ee\u6807\u5c31\u662f\u65b9\u4fbf\u4f60\u89c2\u770b\u82f1\u6587\u89c6\u9891\uff1a https://github.com/solidSpoon/DashPlayer https://github.com/Hiram-Wong/ZyPlayer \u7535\u5b50\u4e66\u7ffb\u8bd1 ebook-GPT-Translator \u501f\u52a9ChatGPT\u5e2e\u52a9\u7ffb\u8bd1\u7535\u5b50\u4e66\uff0c\u652f\u6301PDF\u3001Word\u3001Mobi\u548cEpub\u7b49\u683c\u5f0f\u3002\u9700\u8981\u81ea\u5df1\u7684OpenAI API Key \ud83d\udd17 github.com/jesselau76/ebook-GPT-translator automatic speech recognition (ASR) https://github.com/ggerganov/whisper.cpp https://github.com/openai/whisper text-to-video https://github.com/camenduru/text-to-video-synthesis-colab text-to-speech (TTS) chattts https://github.com/2noise/ChatTTS https://chattts.com/ https://github.com/jianchang512/ChatTTS-ui https://github.com/Sh4yy/personal-ai?continueFlag=f7f47316d94d1dfc8ef7128667de0f1d \u89c6\u9891\u5b57\u5e55 video-subtitle-extractor \u53cd\u5411\u5c06\u5df2\u7ecf\u70e7\u5236\u5230\u89c6\u9891\u4e2d\u7684\u5b57\u5e55\u63d0\u53d6\u6210srt\u6587\u4ef6\u3002 \u89c6\u9891\u786c\u5b57\u5e55\u63d0\u53d6\uff0c\u751f\u6210srt\u6587\u4ef6\u3002\u65e0\u9700\u7533\u8bf7\u7b2c\u4e09\u65b9API\uff0c\u672c\u5730\u5b9e\u73b0\u6587\u672c\u8bc6\u522b\u3002\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u89c6\u9891\u5b57\u5e55\u63d0\u53d6\u6846\u67b6\uff0c\u5305\u542b\u5b57\u5e55\u533a\u57df\u68c0\u6d4b\u3001\u5b57\u5e55\u5185\u5bb9\u63d0\u53d6\u3002 AutoCut AutoCut \u5bf9\u4f60\u7684\u89c6\u9891\u81ea\u52a8\u751f\u6210\u5b57\u5e55\u3002\u7136\u540e\u4f60\u9009\u62e9\u9700\u8981\u4fdd\u7559\u7684\u53e5\u5b50\uff0cAutoCut \u5c06\u5bf9\u4f60\u89c6\u9891\u4e2d\u5bf9\u5e94\u7684\u7247\u6bb5\u88c1\u5207\u5e76\u4fdd\u5b58\u3002\u4f60\u65e0\u9700\u4f7f\u7528\u89c6\u9891\u7f16\u8f91\u8f6f\u4ef6\uff0c\u53ea\u9700\u8981\u7f16\u8f91\u6587\u672c\u6587\u4ef6\u5373\u53ef\u5b8c\u6210\u526a\u5207\u3002 decipher \u501f\u52a9OpenAI\u7684Whisper\u5e2e\u52a9\u4f60\u7ed9\u89c6\u9891\u751f\u6210\u5e26\u65f6\u95f4\u8f74\u7684\u5b57\u5e55\uff0c\u4e0d\u9700\u8981\u8054\u7f51\uff0c\u4f46\u662f\u9700\u8981\u4e0b\u8f7d\u989d\u5916\u7684\u6570\u636e\u5305\uff0c\u627e\u4e86\u4e2a\u89c6\u9891\u6d4b\u8bd5\u4e86\u4e00\u4e0b\u6548\u679c\u633a\u597d\u3002 \u662fPython\u7a0b\u5e8f\uff0c\u9700\u8981Python\u8fd0\u884c\u73af\u5883\u548cffmpeg Buzz \u53ef\u4ee5\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u79bb\u7ebf\u5c06\u97f3\u9891\u8f6c\u6210\u6587\u672c\uff0c\u6216\u8005\u5bf9\u89c6\u9891\u751f\u6210\u5b57\u5e55\uff0c\u57fa\u4e8eOpenAI\u7684Whisper\u6a21\u578b\u3002 \u5b57\u5e55\u751f\u6210 N46Whisper \u53d1\u73b0\u4e00\u4e2a\u97f3\u9891\u8f6c\u5b57\u5e55\u7684\u7b80\u5355\u65b9\u6cd5\uff0c\u5c31\u662f\u4f7f\u7528\u98de\u4e66\u7684Minutes\uff0c\u628a\u97f3\u9891\u4e0a\u4f20\u4e0a\u53bb\u540e\uff0c\u81ea\u52a8\u80fd\u8bc6\u522b\u5b57\u5e55\uff0c\u5e76\u4e14\u8fd8\u80fd\u8bc6\u522bSpeaker. https://larksuite.com/en_us/product/minutes https://github.com/HaujetZhao/CapsWriter-Offline AI\u8bed\u97f3\u5bf9\u8bdd \u4e4b\u524dWhisper.cpp\u548cllama.cpp\u7684\u4f5c\u8005\u628allama\uff0cwhisper\uff0cTTS\u6574\u5408\u5728\u4e86\u4e00\u8d77\uff0c\u5b9e\u73b0\u4e86LLaMA\u7684\u672c\u5730\u8bed\u97f3\u804a\u5929\uff0c\u76f8\u5f53\u4e8e\u4f60\u672c\u673a\u6709\u4e2a\u8bed\u97f3\u7248\u7684ChatGPT\uff0c\u4f60\u53ef\u4ee5\u7528\u8bed\u97f3\u548c\u5b83\u5bf9\u8bdd\u4ea4\u6d41\uff0c\u6548\u679c\u5f88\u9177\u3002 https://github.com/ggerganov/whisper.cpp 2. speechgpt https://speechgpt.app/ OCR TRex TextSniper \u56fe\u7247\u5904\u7406 Midjourney runway\uff1a https://app.runwayml.com/ \u62a0\u56fe\uff1a https://pixian.ai/ https://app.mlblocks.com/mlflow http://remove.bg http://photoroom.com http://zmo.ai/imagen http://watermarkremover.io http://erase.bg http://magicstudio.com \u97f3\u4e50 https://www.suno.ai/ \u533b\u7597\u95ee\u8bca ChatDoctor \u6587\u6863\u9605\u8bfb myGPTReader \uff1a https://github.com/madawei2699/myGPTReader \u7528 GPT \u5efa\u7acb\u4e2a\u4eba/\u72ec\u7acb\u77e5\u8bc6\u5e93 \u6587\u5b57\u6559\u7a0b\uff1a https://uxdesign.cc/i-built-an-ai-that-answers-questions-based-on-my-user-research-data-7207b052e21c \u89c6\u9891\u6559\u7a0b\uff1a https://youtube.com/watch?v=vDZAZuaXf48 Large Language Model\uff08LLM\uff09 llama.cpp generate web page OpenUI\uff1a https://github.com/wandb/openui \u7c7b\u4f3cPerplexity An AI-powered answer engine with a generative UI: Yoshiki Miura \u6628\u665a\u5f00\u6e90\u4e86\u4e00\u4e2a\u7c7b\u4f3c Perplexity \u7684 AI \u641c\u7d22\u5de5\u5177\uff0c\u5f00\u6e90\u8f6f\u4ef6\u80fd\u591f\u505a\u5230\u8fd9\u79cd\u4f53\u9a8c\u548c\u7f8e\u89c2\u5ea6\u7684\u786e\u5b9e\u5f88\u5c11\u3002\u529f\u80fd\u975e\u5e38\u5168\u9762\uff0c\u800c\u4e14\u652f\u6301 Vercel \u4e00\u952e\u90e8\u7f72\uff0c\u53ef\u4ee5\u6574\u4e00\u4e2a\u73a9\u73a9\u3002 \u800c\u4e14\u8fd8\u6709\u751f\u6210\u5f0fUI\uff0c\u611f\u89c9\u4e00\u4e9b\u72ec\u7acb\u5f00\u53d1\u8005\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u4ed6\u7684\u524d\u7aef\u5b9e\u73b0\uff0c\u8fd9\u6837\u8d77\u7801\u505a\u51fa\u6765\u7684\u9875\u9762\u4e0d\u4f1a\u592a\u96be\u7528\u3002\u6bd4\u5982\u65e0\u6837\u5f0f\u7ec4\u4ef6\u5e93Radix UI\u4ee5\u53caTailwind CSS\u3002 https://github.com/miurla/morphic ElevenLabs \u63a8\u51fa Audio Native \u81ea\u52a8\u5c06\u4f60\u7684\u5185\u5bb9\u8f6c\u6362\u4e3a\u64ad\u5ba2 https://xiaohu.ai/p/8122 https://elevenlabs.io/docs/audio-native/audio-native-react https://elevenlabs.io/docs/audio-native/ghost https://elevenlabs.io/docs/audio-native/squarespace https://elevenlabs.io/blog/audio-native/ screenshot to code https://github.com/abi/screenshot-to-code https://screenshottocode.com/ workflow https://github.com/langflow-ai/langflow?utm_source=x+&utm_medium=santiago&utm_campaign=langflow","title":"Ai"},{"location":"save/ai/#_1","text":"\u4f7f\u7528\u6307\u5357\uff1a https://gitlab.com/awesomeai/awesome-chatgpt-zh \u6ce8\u518c+\u7ffb\u5899\uff1ahttps://silentming.net/blog/2023/03/27/using-cfwraper/ \u6ce8\u518cchatGPT: https://medium.com/@dykaknsjwkmsmwm/%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E4%B8%80%E4%B8%AAchatgpt%E8%B4%A6%E5%8F%B7-99646c841fb4 AIGC\u98de\u4e66\u77e5\u8bc6\u5e93\uff1a https://ywh1bkansf.feishu.cn/wiki/QPe5w5g7UisbEkkow8XcDmOpn8e GPT best practices waitlist:https://openai.com/waitlist/gpt-4-api","title":"\u6307\u5357"},{"location":"save/ai/#_2","text":"https://openai.xnewstar.com/","title":"\u5de5\u5177\u6536\u96c6"},{"location":"save/ai/#vps","text":"Hostdare: https://www.hostdare.com/","title":"vps"},{"location":"save/ai/#_3","text":"\u6307\u5357\uff1a https://sites.google.com/view/chatgptcn/ChatGPT-Plus-bind-credit-cards https://x.com/zuozizhen/status/1642034351163719680 https://twitter.com/Cydiar404/status/1637047977541009408 https://twitter.com/lewangdev/status/1628802873013465088 nobepay Depay\uff1a https://depay.com/ PayPal stripe\uff1a https://stripe.com/zh-us \u53ef\u4ee5\u8d2d\u4e70\u7f8e\u533a\u7684iTunes\u7684Gift Card\u4ed8\u8d39\u5361\u8fdb\u884c\u5145\u503c https://card.onekey.so/home","title":"\u865a\u62df\u4ed8\u8d39\u5361\uff1a"},{"location":"save/ai/#_4","text":"www.meiguodizhi.com/ www.haoweichi.com/","title":"\u865a\u62df\u5730\u5740\u751f\u6210"},{"location":"save/ai/#_5","text":"PayGo\uff1a https://www.ultramobile.com/paygo/","title":"\u624b\u673a\u5361"},{"location":"save/ai/#_6","text":"https://5sim.net/","title":"\u77ed\u4fe1\u63a5\u7801\u5e73\u53f0"},{"location":"save/ai/#-virtual-phone-number-service","text":"Burner wephone","title":"\u7f51\u7edc\u7535\u8bdd\u77ed\u4fe1 --- virtual phone number service"},{"location":"save/ai/#prompts","text":"ChatGPT Prompt \u89c6\u9891\u6559\u7a0b https://github.com/f/awesome-chatgpt-prompts https://github.com/PlexPt/awesome-chatgpt-prompts-zh GPTs Prompts: github.com/linexjlin/GPTs","title":"prompts"},{"location":"save/ai/#chat","text":"chatgpt claude: https://claude.ai/chat/ https://poe.com/ChatGPT https://chatgpt.com/chat perplexity: https://www.perplexity.ai/ \u514d\u8d39gpt4: https://app.copilothub.ai/ https://app.copilothub.ai/chat?id=4364 https://coze.com https://www.coze.com/store/bot/7348297603085352962?panel=1&bid=6ck3vs0so4g05 https://www.glbgpt.com/chat","title":"Chat"},{"location":"save/ai/#chatbot-ui","text":"https://github.com/open-webui/open-webui https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web https://github.com/mckaywrigley/chatbot-ui https://github.com/Bin-Huang/chatbox https://github.com/josStorer/chatGPTBox","title":"chatbot ui"},{"location":"save/ai/#vocechat","text":"https://x.com/wsygc/status/1793786792866701418 https://www.bilibili.com/video/BV1r8411g7yt/?share_source=copy_web&vd_source=b5c6298de30df695b6d8fb64bfc1e9bc \u5b98\u7f51\uff1ahttps://voce.chat \u5b98\u65b9\u6587\u6863\uff1ahttps://doc.voce.chat git\u5730\u5740\uff1ahttps://github.com/Privoce","title":"VoceChat"},{"location":"save/ai/#api","text":"https://platform.openai.com","title":"API"},{"location":"save/ai/#_7","text":"Copilot X https://twitter.com/AlphaSignalAI/status/1638571132474511361 https://github.blog/2023-03-22-github-copilot-x-the-ai-powered-developer-experience/ github copilot https://docs.github.com/en/copilot/using-github-copilot/getting-started-with-github-copilot?tool=vscode#prerequisites-2 how to use: https://www.builder.io/blog/vscode-tips https://twitter.com/Steve8708/status/1635758301899264000 bloop https://bloop.ai/ cursor https://www.cursor.so/ AI Code Translator Try it: https://ai-code-translator.vercel.app GitHub: https://github.com/mckaywrigley/ai-code-translator http://Codeium.com","title":"\u7f16\u7a0b"},{"location":"save/ai/#shell","text":"Shell GPT \u8be5\u5de5\u5177\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4e2d\u96c6\u6210\u4e86 ChatGPT\uff0c\u901a\u8fc7\u5b83\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f\u7f16\u5199 shell \u547d\u4ee4\u3001\u4ee3\u7801\u7247\u6bb5\u7f16\u5199\u3001Git \u63d0\u4ea4\u4fe1\u606f\u3001\u6587\u6863\u3001\u6ce8\u91ca\u7b49\u5185\u5bb9\u3002 \u7528\u6cd5\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u83b7\u53d6\u67d0\u4e2a\u4efb\u52a1\u7684\u6267\u884c\u6307\u4ee4\uff1b \u76f4\u63a5\u8f6c\u6362\u65f6\u95f4\u3001\u8ddd\u79bb\u3001\u91cd\u91cf\u3001\u6e29\u5ea6\u7b49\u5355\u4f4d\uff1b \u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u641c\u7d22 shell \u7528\u6cd5\uff1b \u81ea\u52a8\u751f\u6210\u4ee3\u7801\u5e76\u5b58\u50a8\uff1b \u5728\u547d\u4ee4\u884c\u8ddf ChatGPT \u5bf9\u8bdd\uff0c\u5e76\u8fed\u4ee3\u4f18\u5316\u3002 ai-shell Warp AI https://twitter.com/zachlloydtweets/status/1636385520082386944 https://www.warp.dev/","title":"shell"},{"location":"save/ai/#_8","text":"DashPlayer \u7684\u76ee\u6807\u5c31\u662f\u65b9\u4fbf\u4f60\u89c2\u770b\u82f1\u6587\u89c6\u9891\uff1a https://github.com/solidSpoon/DashPlayer https://github.com/Hiram-Wong/ZyPlayer","title":"\u82f1\u8bed\u5b66\u4e60"},{"location":"save/ai/#_9","text":"ebook-GPT-Translator \u501f\u52a9ChatGPT\u5e2e\u52a9\u7ffb\u8bd1\u7535\u5b50\u4e66\uff0c\u652f\u6301PDF\u3001Word\u3001Mobi\u548cEpub\u7b49\u683c\u5f0f\u3002\u9700\u8981\u81ea\u5df1\u7684OpenAI API Key \ud83d\udd17 github.com/jesselau76/ebook-GPT-translator","title":"\u7535\u5b50\u4e66\u7ffb\u8bd1"},{"location":"save/ai/#automatic-speech-recognition-asr","text":"https://github.com/ggerganov/whisper.cpp https://github.com/openai/whisper","title":"automatic speech recognition (ASR)"},{"location":"save/ai/#text-to-video","text":"https://github.com/camenduru/text-to-video-synthesis-colab","title":"text-to-video"},{"location":"save/ai/#text-to-speech-tts","text":"chattts https://github.com/2noise/ChatTTS https://chattts.com/ https://github.com/jianchang512/ChatTTS-ui https://github.com/Sh4yy/personal-ai?continueFlag=f7f47316d94d1dfc8ef7128667de0f1d","title":"text-to-speech (TTS)"},{"location":"save/ai/#_10","text":"video-subtitle-extractor \u53cd\u5411\u5c06\u5df2\u7ecf\u70e7\u5236\u5230\u89c6\u9891\u4e2d\u7684\u5b57\u5e55\u63d0\u53d6\u6210srt\u6587\u4ef6\u3002 \u89c6\u9891\u786c\u5b57\u5e55\u63d0\u53d6\uff0c\u751f\u6210srt\u6587\u4ef6\u3002\u65e0\u9700\u7533\u8bf7\u7b2c\u4e09\u65b9API\uff0c\u672c\u5730\u5b9e\u73b0\u6587\u672c\u8bc6\u522b\u3002\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u89c6\u9891\u5b57\u5e55\u63d0\u53d6\u6846\u67b6\uff0c\u5305\u542b\u5b57\u5e55\u533a\u57df\u68c0\u6d4b\u3001\u5b57\u5e55\u5185\u5bb9\u63d0\u53d6\u3002 AutoCut AutoCut \u5bf9\u4f60\u7684\u89c6\u9891\u81ea\u52a8\u751f\u6210\u5b57\u5e55\u3002\u7136\u540e\u4f60\u9009\u62e9\u9700\u8981\u4fdd\u7559\u7684\u53e5\u5b50\uff0cAutoCut \u5c06\u5bf9\u4f60\u89c6\u9891\u4e2d\u5bf9\u5e94\u7684\u7247\u6bb5\u88c1\u5207\u5e76\u4fdd\u5b58\u3002\u4f60\u65e0\u9700\u4f7f\u7528\u89c6\u9891\u7f16\u8f91\u8f6f\u4ef6\uff0c\u53ea\u9700\u8981\u7f16\u8f91\u6587\u672c\u6587\u4ef6\u5373\u53ef\u5b8c\u6210\u526a\u5207\u3002 decipher \u501f\u52a9OpenAI\u7684Whisper\u5e2e\u52a9\u4f60\u7ed9\u89c6\u9891\u751f\u6210\u5e26\u65f6\u95f4\u8f74\u7684\u5b57\u5e55\uff0c\u4e0d\u9700\u8981\u8054\u7f51\uff0c\u4f46\u662f\u9700\u8981\u4e0b\u8f7d\u989d\u5916\u7684\u6570\u636e\u5305\uff0c\u627e\u4e86\u4e2a\u89c6\u9891\u6d4b\u8bd5\u4e86\u4e00\u4e0b\u6548\u679c\u633a\u597d\u3002 \u662fPython\u7a0b\u5e8f\uff0c\u9700\u8981Python\u8fd0\u884c\u73af\u5883\u548cffmpeg Buzz \u53ef\u4ee5\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u79bb\u7ebf\u5c06\u97f3\u9891\u8f6c\u6210\u6587\u672c\uff0c\u6216\u8005\u5bf9\u89c6\u9891\u751f\u6210\u5b57\u5e55\uff0c\u57fa\u4e8eOpenAI\u7684Whisper\u6a21\u578b\u3002 \u5b57\u5e55\u751f\u6210 N46Whisper \u53d1\u73b0\u4e00\u4e2a\u97f3\u9891\u8f6c\u5b57\u5e55\u7684\u7b80\u5355\u65b9\u6cd5\uff0c\u5c31\u662f\u4f7f\u7528\u98de\u4e66\u7684Minutes\uff0c\u628a\u97f3\u9891\u4e0a\u4f20\u4e0a\u53bb\u540e\uff0c\u81ea\u52a8\u80fd\u8bc6\u522b\u5b57\u5e55\uff0c\u5e76\u4e14\u8fd8\u80fd\u8bc6\u522bSpeaker. https://larksuite.com/en_us/product/minutes https://github.com/HaujetZhao/CapsWriter-Offline","title":"\u89c6\u9891\u5b57\u5e55"},{"location":"save/ai/#ai","text":"\u4e4b\u524dWhisper.cpp\u548cllama.cpp\u7684\u4f5c\u8005\u628allama\uff0cwhisper\uff0cTTS\u6574\u5408\u5728\u4e86\u4e00\u8d77\uff0c\u5b9e\u73b0\u4e86LLaMA\u7684\u672c\u5730\u8bed\u97f3\u804a\u5929\uff0c\u76f8\u5f53\u4e8e\u4f60\u672c\u673a\u6709\u4e2a\u8bed\u97f3\u7248\u7684ChatGPT\uff0c\u4f60\u53ef\u4ee5\u7528\u8bed\u97f3\u548c\u5b83\u5bf9\u8bdd\u4ea4\u6d41\uff0c\u6548\u679c\u5f88\u9177\u3002 https://github.com/ggerganov/whisper.cpp 2. speechgpt https://speechgpt.app/","title":"AI\u8bed\u97f3\u5bf9\u8bdd"},{"location":"save/ai/#ocr","text":"TRex TextSniper","title":"OCR"},{"location":"save/ai/#_11","text":"Midjourney runway\uff1a https://app.runwayml.com/ \u62a0\u56fe\uff1a https://pixian.ai/ https://app.mlblocks.com/mlflow http://remove.bg http://photoroom.com http://zmo.ai/imagen http://watermarkremover.io http://erase.bg http://magicstudio.com","title":"\u56fe\u7247\u5904\u7406"},{"location":"save/ai/#_12","text":"https://www.suno.ai/","title":"\u97f3\u4e50"},{"location":"save/ai/#_13","text":"ChatDoctor","title":"\u533b\u7597\u95ee\u8bca"},{"location":"save/ai/#_14","text":"myGPTReader \uff1a https://github.com/madawei2699/myGPTReader","title":"\u6587\u6863\u9605\u8bfb"},{"location":"save/ai/#gpt","text":"\u6587\u5b57\u6559\u7a0b\uff1a https://uxdesign.cc/i-built-an-ai-that-answers-questions-based-on-my-user-research-data-7207b052e21c \u89c6\u9891\u6559\u7a0b\uff1a https://youtube.com/watch?v=vDZAZuaXf48","title":"\u7528 GPT \u5efa\u7acb\u4e2a\u4eba/\u72ec\u7acb\u77e5\u8bc6\u5e93"},{"location":"save/ai/#large-language-modelllm","text":"llama.cpp","title":"Large Language Model\uff08LLM\uff09"},{"location":"save/ai/#generate-web-page","text":"OpenUI\uff1a https://github.com/wandb/openui","title":"generate web page"},{"location":"save/ai/#perplexity","text":"An AI-powered answer engine with a generative UI: Yoshiki Miura \u6628\u665a\u5f00\u6e90\u4e86\u4e00\u4e2a\u7c7b\u4f3c Perplexity \u7684 AI \u641c\u7d22\u5de5\u5177\uff0c\u5f00\u6e90\u8f6f\u4ef6\u80fd\u591f\u505a\u5230\u8fd9\u79cd\u4f53\u9a8c\u548c\u7f8e\u89c2\u5ea6\u7684\u786e\u5b9e\u5f88\u5c11\u3002\u529f\u80fd\u975e\u5e38\u5168\u9762\uff0c\u800c\u4e14\u652f\u6301 Vercel \u4e00\u952e\u90e8\u7f72\uff0c\u53ef\u4ee5\u6574\u4e00\u4e2a\u73a9\u73a9\u3002 \u800c\u4e14\u8fd8\u6709\u751f\u6210\u5f0fUI\uff0c\u611f\u89c9\u4e00\u4e9b\u72ec\u7acb\u5f00\u53d1\u8005\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u4ed6\u7684\u524d\u7aef\u5b9e\u73b0\uff0c\u8fd9\u6837\u8d77\u7801\u505a\u51fa\u6765\u7684\u9875\u9762\u4e0d\u4f1a\u592a\u96be\u7528\u3002\u6bd4\u5982\u65e0\u6837\u5f0f\u7ec4\u4ef6\u5e93Radix UI\u4ee5\u53caTailwind CSS\u3002 https://github.com/miurla/morphic","title":"\u7c7b\u4f3cPerplexity"},{"location":"save/ai/#elevenlabs-audio-native","text":"https://xiaohu.ai/p/8122 https://elevenlabs.io/docs/audio-native/audio-native-react https://elevenlabs.io/docs/audio-native/ghost https://elevenlabs.io/docs/audio-native/squarespace https://elevenlabs.io/blog/audio-native/","title":"ElevenLabs \u63a8\u51fa Audio Native \u81ea\u52a8\u5c06\u4f60\u7684\u5185\u5bb9\u8f6c\u6362\u4e3a\u64ad\u5ba2"},{"location":"save/ai/#screenshot-to-code","text":"https://github.com/abi/screenshot-to-code https://screenshottocode.com/ workflow https://github.com/langflow-ai/langflow?utm_source=x+&utm_medium=santiago&utm_campaign=langflow","title":"screenshot to code"},{"location":"save/blog/","text":"\u5403\u7740\u571f\u8c46\u5750\u5730\u94c1\u7684\u535a\u5ba2 https://www.epis2048.net/ \u4ed6\u7684\u535a\u5ba2\u6709\u4e00\u4e9b\u8ba1\u7b97\u673a\u8bfe\u7a0b\u7684\u5b9e\u73b0\u4ee3\u7801\uff0c\u4ed6\u7684\u4ee3\u7801\u8d28\u91cf\u6bd4\u8f83\u9ad8. \u8fd8\u6709\u4e00\u4e9b\u6bd4\u8f83\u597d\u73a9\u7684\u6280\u672f\u3002 https://zhenghe.gitbook.io/open-courses/ Quick Reference: https://github.com/jaywcjlove/reference?tab=readme-ov-file https://cheatsheets.zip/ https://wangchujiang.com/reference/ \u5b9d\u85cf\u535a\u4e3b https://github.com/GitHubDaily/GitHubDaily https://weibo.com/u/5722964389 \u524d\u7aef https://cn.innei.ren/posts/tech/why-react-server-component-2","title":"Blog"},{"location":"save/blog/#_1","text":"https://www.epis2048.net/ \u4ed6\u7684\u535a\u5ba2\u6709\u4e00\u4e9b\u8ba1\u7b97\u673a\u8bfe\u7a0b\u7684\u5b9e\u73b0\u4ee3\u7801\uff0c\u4ed6\u7684\u4ee3\u7801\u8d28\u91cf\u6bd4\u8f83\u9ad8. \u8fd8\u6709\u4e00\u4e9b\u6bd4\u8f83\u597d\u73a9\u7684\u6280\u672f\u3002 https://zhenghe.gitbook.io/open-courses/ Quick Reference: https://github.com/jaywcjlove/reference?tab=readme-ov-file https://cheatsheets.zip/ https://wangchujiang.com/reference/","title":"\u5403\u7740\u571f\u8c46\u5750\u5730\u94c1\u7684\u535a\u5ba2"},{"location":"save/blog/#_2","text":"https://github.com/GitHubDaily/GitHubDaily https://weibo.com/u/5722964389","title":"\u5b9d\u85cf\u535a\u4e3b"},{"location":"save/blog/#_3","text":"https://cn.innei.ren/posts/tech/why-react-server-component-2","title":"\u524d\u7aef"},{"location":"save/books/","text":"\u8bfb\u4e66 \u53ef\u6c57\u5b66\u9662\u521b\u59cb\u4eba Salman Khan \u7684\u65b0\u4e66\uff1a\u300aBrave New Words\u2014\u2014How AI Will Revolutionize Education (and Why That\u2019s a Good Thing)\u300b After Ten Years: Dietrich Bonhoeffer and Our Times \u838e\u58eb\u6bd4\u4e9a\u5168\u96c6 \u539f\u751f\u5bb6\u5ead David Eagleman\u7684\u300a\u5927\u8111\u4e0e\u884c\u4e3a\u300b \u5f17\u6d1b\u4f0a\u5fb7 \u66fc\u6606\u5199\u7684\u300a\u7ecf\u6d4e\u5b66\u539f\u7406\u300b \u5f00\u5c40\u8bdb\u5341\u65cf\uff0c\u6731\u68e3\u6c42\u6211\u5f53\u56fd\u5e08 \u6768\u5c0f\u51ef\u7684\u300a\u725b\u9b3c\u86c7\u795e\u5f55\u300b \u5854\u52d2\u5e03\u8001\u5e08\u300a\u975e\u5bf9\u79f0\u6536\u76ca\u300b \u8d85\u8d8a\u611f\u89c9\uff1a\u6279\u5224\u6027\u601d\u8003\u6307\u5357 \u8ba4\u77e5\u89c9\u9192 \u798f\u683c\u884c\u4e3a\u6a21\u578b \u5510\u5fb7\u521a\u7684\u300a\u65b0\u4e2d\u56fd\u524d\u4e09\u5341\u5e74\u300b \u65af\u901a\u7eb3 \u662d\u660e\u6587\u9009 \u664f\u9633\u521d \u7fe6\u5546 \u300a\u4e2d\u56fd\u4eba\u53f2\u7eb2\u300b\u3001\u300a\u5168\u7403\u901a\u53f2\u300b\u3001\u300a\u4e16\u754c\u662f\u5e73\u7684\u300b\u3001\u300a\u521b\u4e1a\u7684\u56fd\u5ea6\u300b\u3002 \u6c88\u680b\u5199\u7684\u300a\u7ea2\u8272\u8d4c\u76d8\u300b \u6c5f\u57ce \u5bfb\u8def\u4e2d\u56fd \u672b\u4ee3\u7687\u5e1d\u5728\u5199\u300a\u6211\u7684\u524d\u534a\u751f\u300b \u7279\u52a1\u5934\u5b50\u5728\u5199\u300a\u6211\u8fd930\u5e74\u300b \u5bab\u5d0e\u9a8f\u7684\u300a\u5d16\u4e0a\u7684\u6ce2\u599e\u300b \u300a\u7eb3\u74e6\u5c14\u5b9d\u5178\u300b\u548c \u300a\u7a77\u67e5\u7406\u5b9d\u5178\u300b \u201cThe Prince\u201d by Machiavelli \u5feb\u901f\u9605\u8bfb\u672f by \u5370\u5357\u6566\u53f2 \u767e\u5c81\u4eba\u751f \u8fd9\u6b21\u4e0d\u4e00\u6837 \u5408\u4f5c\u7684\u8fdb\u5316 \u5728\u4fe1\u5f92\u7684\u56fd\u5ea6 \u5929\u671d\u7684\u5d29\u6e83 \u798f\u6cfd\u8c15\u5409\u300a\u529d\u5b66\u7bc7\u300b \u68ad\u7f57 \u300a\u74e6\u5c14\u767b\u6e56\u300b \u54f2\u5b66 \u4e0a\u5e1d\u4e4b\u57ce \u5965\u53e4\u65af\u4e01 \u5224\u65ad\u529b\u6279\u5224 \u5eb7\u5fb7 \u5eb7\u5fb7\u300a\u7eaf\u7cb9\u7406\u6027\u6279\u5224\u300b \u903b\u8f91\u54f2\u5b66\u8bba \u7ef4\u6839\u65af\u5766 \u4eb2\u5bc6\u5173\u7cfb \u7f57\u5170\u7c73\u52d2 \u8377\u9a6c\u300a\u5965\u5fb7\u8d5b\u300b \u8363\u683c \u6b4c\u5fb7\u5728\u300a\u4eb2\u548c\u529b\u300b\u300a\u5a01\u5ec9\u00b7\u8fc8\u65af\u7279\u300b \u4e9a\u91cc\u58eb\u591a\u5fb7\u300a\u4f26\u7406\u5b66\u300b \u8521\u5fd7\u5fe0 \u300a\u89c9\u609f\u300b \u9640\u601d\u59a5\u8036\u592b\u65af\u57fa\u300a\u5361\u62c9\u9a6c\u4f50\u592b\u5144\u5f1f\u300b\uff0c \u6751\u4e0a\u6625\u6811\u7684\u300a\u4e16\u754c\u5c3d\u5934\u4e0e\u51b7\u9177\u4ed9\u5883\u300b\u3002 \u300a\u6700\u5c0f\u963b\u529b\u4e4b\u8def\u300b\u3002 \u5fc3\u7406\u5b66 \u81ea\u5351\u4e0e\u8d85\u8d8a \u539f\u751f\u5bb6\u5ead by \u82cf\u73ca\u00b7\u798f\u6c83\u5fb7 \u6885\u00b7\u8428\u85e4\u300a\u6d77\u8fb9\u5c0f\u5c4b\u300b \u7559\u4faf\u8bba \u6dee\u5357\u5b50 \u83dc\u6839\u8c2d \u4e16\u8bf4\u65b0\u8bed \u68a6\u6eaa\u7b14\u8c08 \u53e4\u4eca\u6982\u8c2d \u51af\u68a6\u9f99 \u6e05\u4ee3\u6c88\u8d77\u51e4\u6709\u7b14\u8bb0\u5c0f\u8bf4\u300a\u8c10\u94ce\u300b \u4e2d\u56fd\u7f8e\u5b66\u7814\u7a76 \u5b89\u5fb7\u7684\u6e38\u620f \u9640\u601d\u59a5\u8036\u592b\u65af\u57fa \u300a\u5361\u62c9\u9a6c\u4f50\u592b\u5144\u5f1f\u300b \u300a\u6b7b\u5c4b\u624b\u8bb0\u300b\u300a\u5730\u4e0b\u5ba4\u624b\u8bb0\u300b\u300a\u7f6a\u4e0e\u7f5a\u300b\u300a\u7fa4\u9b54\u300b \u300a\u5c11\u5e74\u300b\u300a\u767d\u75f4\u300b \u82cf\u83f2\u7684\u4e16\u754c \u66fc\u9640\u7f57 \u300a\u5c11\u6709\u4eba\u8d70\u7684\u8def\u300b\u300a\u81ea\u5351\u4e0e\u8d85\u8d8a\u300b\u300a\u4eba\u751f\u7684\u667a\u6167\u300b\u300a\u82cf\u83f2\u7684\u4e16\u754c\u300b\u300a\u7a77\u7238\u7238\u5bcc\u7238\u7238\u300b\u300a\u4eba\u6027\u7684\u5f31\u70b9\u300b\u300a\u7231\u7684\u827a\u672f\u300b\u300a\u4e0d\u80fd\u627f\u53d7\u7684\u751f\u547d\u4e4b\u8f7b\u300b\u300a\u74e6\u5c14\u767b\u6e56\u300b\u300a\u9ed1\u5929\u9e45\u300b M\u00b7\u65af\u79d1\u7279\u00b7\u6d3e\u514b\u300a\u5c11\u6709\u4eba\u8d70\u7684\u8def\u300b \u82ad\u82ad\u62c9\u00b7\u5b89\u5409\u4e3d\u601d \u67cf\u745e\u5c14\u2022\u9a6c\u5361\u59c6\u300a\u591c\u822a\u897f\u98de\u300b \u591a\u4e3d\u4e1d\u83b1\u8f9b\u300a\u753b\u5730\u4e3a\u7262\u300b\u7530\u5965\u8bd1 \u2014\u2014\u6234\u7ef4\u00b7\u68ad\u7f57\u300a\u74e6\u5c14\u767b\u6e56\u300b Jordan Peterson \u300a12 rules of live\u300b \u300a\u964c\u751f\u7684\u719f\u4eba\uff1a\u7406\u89e3\u4e8c\u5341\u4e00\u4e16\u7eaa\u4e61\u571f\u4e2d\u56fd\u300b \u6b27\u6d32\u4e4b\u95e8 \u7a77\u67e5\u7406\u5b9d\u5178 \u963f\u5fb7\u52d2 \u300a\u88ab\u8ba8\u538c\u7684\u52c7\u6c14\u300b \u4f59\u82f1\u65f6 \u8d39\u5b5d\u901a \u8fd4\u749e\u5f52\u771f \u8def\u6613\u65af \u5b98\u573a\u73b0\u5f62\u8bb0 \u672a\u592e\u6b4c \u9ad8\u50e7\u4f20 \u664b\u00b7\u9676\u6f5c\u300a\u548c\u5218\u67f4\u6851\u300b \u7c73\u5170.\u6606\u5fb7\u62c9 \u5723\u2022\u5341\u5b57\u7ea6\u7ff0 \u300a\u9ed1\u591c\u300b \u9965\u997f\u7684\u76db\u4e16 \u7a46\u65af\u6797\u7684\u846c\u793c \u62dc\u5360\u5ead\u5e1d\u56fd\u5386\u53f2 \u7a46\u52d2\u540d\u5b66 \u8bba\u81ea\u7531\u610f\u5fd7 \u5965\u53e4\u65af\u4e01 \u300a\u7f57\u9a6c\u5e1d\u56fd\u8870\u4ea1\u53f2\u300b \u838e\u58eb\u6bd4\u4e9a\u5168\u96c6 \u7ecf\u6d4e\u4e0e\u793e\u4f1a \u7cbe\u795e\u751f\u6d3b \u8d2b\u7a77\u7684\u672c\u8d28 \u7f85\u7d20\u00b7\u67ef\u514b\u300a\u4fdd\u5b88\u4e3b\u7fa9\u7684\u7cbe\u795e\u300b \u300a\u6797\u5f6a\u5143\u5e05\u519b\u4e8b\u8bba\u6587\u9009\u96c6\u300b \u201c\u957f\u751f\u4e4b\u5bb6\u201d\u7684\u521b\u59cb\u4eba\u8c37\u53e3\u96c5\u6625\u5199\u7684\u300a\u751f\u547d\u7684\u5b9e\u76f8\u300b \u675c\u5170\u7279\u7684\u300c\u54f2\u5b66\u7684\u6545\u4e8b\u300d \u54c8\u59c6\u96f7\u7279 \u60b2\u60e8\u4e16\u754c \u6218\u4e89\u4e0e\u548c\u5e73 \u4e4c\u5408\u4e4b\u4f17 \u6c64\u59c6\u53d4\u53d4\u7684\u5c0f\u5c4b \u82cf\u83f2\u7684\u4e16\u754c \u4f0f\u5c14\u6cf0 \u300a\u8001\u5b9e\u4eba\u300b \u9ad8\u5c14\u57fa \u5e9f\u90fd \u8d75\u7384 \u7ea2\u6708\u4eae \u300a\u5c81\u6708\u6ca7\u6851\u300b\u94b1\u7406\u7fa4 \u5185\u5728\u751f\u547d-\u7cbe\u795e\u5206\u6790\u4e0e\u4eba\u683c\u53d1\u5c55 \u5b98\u573a\u73b0\u5f62\u8bb0 \u6740\u6b7b\u4e00\u53ea\u77e5\u66f4\u9e1f \u6708\u4eae\u4e0e\u516d\u4fbf\u58eb \u4e00\u7247\u53f6\u5b50\u843d\u4e0b\u6765 \u7f57\u66fc.\u7f57\u5170\u300a\u7c73\u5f00\u6717\u57fa\u7f57\u300b \u300amoral theory in the groundwork\u300b \u7f8e\u56fd\u79e9\u5e8f\u7684\u6839\u57fa \u5f20\u5927\u519b\u8bd1 20\u4e16\u7eaa\u7684\u6218\u4e89\u4e0e\u548c\u5e73 \u6587\u660e\u51b2\u7a81\u4f26 \u6587\u660e\u4e0e\u91ce\u86ee \u5fcf\u6094\u5f55 \u5362\u68ad \u5f17\u5409\u5c3c\u4e9a\u7b14\u8bb0 \u4ea4\u6613\u7684\u827a\u672f. \u6c38\u4e0d\u653e\u5f03 \u5ddd\u666e \u4e00\u4e2a\u5927\u5b66\u6821\u957f\u7684\u81ea\u767d \u5f81\u670d\u4e2d\u4e9a\u53f2 \u4e61\u4e0b\u4eba\u7684\u60b2\u6b4c \u7236\u4eb2\u662f\u4e2a\u6d41\u6c13 \u5341\u6746\u67aa \u767d\u95e8\u67f3 \u5eca\u6865\u9057\u68a6 \u5c71\u5761\u7f8a \u4eae\u51fa\u4f60\u7684\u820c\u82d4\u6216\u7a7a\u7a7a\u8361\u8361 \u7ea2\u5c18 \u8089\u4e4b\u571f \u4eba\u4e16\u95f4 \u6881\u6653\u58f0 \u5723\u8d6b\u52d2\u62ff\u5c9b\u56de\u5fc6\u5f55 \u901a\u5f80\u5974\u5f79\u4e4b\u8def \u8d70\u51fa\u4e2d\u4e16\u7eaa \u848b\u4ecb\u77f3\u4f20 \u6768\u6811\u6807\u8457 \u56fd\u6c11\u515a \u4e00\u4e5d\u4e09\u4e03 \u8c01\u662f\u65b0\u4e2d\u56fd \u5361\u5b50 \u6ca1\u6709\u51fa\u53e3\u7684\u5927\u5730 \u53f0\u6e7e\u51fa\u7248 \u6bdb\u6cfd\u4e1c \u52fe\u7ed3\u65e5\u519b\u7684\u771f\u76f8 \u4fdd\u5b88\u4e3b\u4e49 \u53d4\u672c\u534e \u4f5c\u4e3a\u610f\u5fd7\u548c\u8868\u8c61\u7684\u4e16\u754c \u6742\u6587\u4e0e\u7b14\u8bb0 \u300a\u4e86\u4e0d\u8d77\u7684\u76d6\u8328\u6bd4\u300b\u300a\u5361\u62c9\u9a6c\u4f50\u592b\u5144\u5f1f\u300b\u548c\u300a\u6f2b\u957f\u7684\u544a\u522b\u300b \u53e4\u4ee3\u6cd5 \u9ea6\u7530\u91cc\u7684\u5b88\u671b\u8005 \u97e6\u4f2f\u300a\u65b0\u6559\u4f26\u7406\u4e0e\u8d44\u672c\u4e3b\u4e49\u7cbe\u795e\u300b \u7a46\u52d2\u300a\u8bba\u81ea\u7531\u300b \u4f2f\u6797\u300a\u4e24\u79cd\u81ea\u7531\u7684\u6982\u5ff5\u300b \u7f57\u5c14\u65af\u300a\u6b63\u4e49\u8bba\u300b \u8bfa\u9f50\u514b\u300a\u65e0\u653f\u5e9c\u3001\u56fd\u5bb6\u4e0e\u4e4c\u6258\u90a6\u300b \u6d1b\u514b\u300a\u653f\u5e9c\u8bba\u300b \u5b5f\u5fb7\u65af\u9e20\u300a\u8bba\u6cd5\u7684\u7cbe\u795e\u300b \u6f58\u6069\u300a\u5e38\u8bc6\u300b \u300a\u5c0f\u738b\u5b50\u300b \u7ef4\u514b\u591a\u5f17\u5170\u514b\u300a\u6d3b\u51fa\u610f\u4e49\u6765\u300b \u300a\u67aa\u70ae\u3001\u75c5\u83cc\u4e0e\u94a2\u94c1\u300b \u54c8\u8036\u514b\u300a\u81f4\u547d\u7684\u81ea\u8d1f\u300b \u81ea\u7531\u4e0e\u6743\u5229 \u6587\u660e\u7684\u57fa\u56e0 \u300a\u81ea\u7531\u7684\u57fa\u56e0\u300b\u4e39\u5c3c\u5c14\u6c49\u5357 \u53f8\u6c64\u8fbe\u7684\u300a\u7ea2\u4e0e\u9ed1\u300b\u3001 \u9640\u601d\u59a5\u8036\u592b\u65af\u57fa\u7684\u300a\u7f6a\u4e0e\u7f5a\u300b\u3002 \u8d39\u6b63\u6e05\u300a\u7f8e\u56fd\u4e0e\u4e2d\u56fd\u300b \u4f2f\u514b\u300a\u6cd5\u56fd\u5927\u9769\u547d\u53cd\u601d\u5f55\u300b \u66fc\u6606\u300a\u7ecf\u6d4e\u5b66\u539f\u7406\u300b \u547d\u8fd0\u4e09\u90e8\u66f2:\u00ab\u5939\u8fb9\u6c9f\u7eaa\u4e8b\u00bb\u300a\u5b9a\u897f\u5b64\u513f\u9662\u7eaa\u4e8b\u300b\u300a\u7518\u5357\u7eaa\u4e8b\u300b \u300a\u4f59\u82f1\u65f6\u56de\u5fc6\u5f55\u300b \u300a\u5361\u62c9\u9a6c\u52a9\u592b\u5144\u5f1f\u300b \u5bc6\u5c14\u300a\u8bba\u81ea\u7531\u300b\u5b5f\u51e1\u793c\u8bd1 \u300a\u65e5\u77e5\u5f55\u300b\u987e\u708e\u6b66 \u5750\u5f85\u5929\u660e \u300a\u82e6\u604b\u300b\u767d\u6866 \u5929\u671d\u7684\u5d29\u6e83 \u5e38\u8bc6 \u52a8\u7269\u5e84\u56ed 1984 \u7f8a\u8102\u7403 \u5305\u6cd5\u5229\u592b\u4eba \u94a6\u5dee\u5927\u81e3 \u9ad8\u8001\u5934 \u7a46\u65af\u6797\u7684\u846c\u793c \u56fd\u5bcc\u8bba \u8d4b\u7a0e\u539f\u7406 \u53d8\u5f62\u8bb0 \u7ea2\u5b57 \u300a\u53e4\u62c9\u683c\u7fa4\u5c9b\u300b just for fun \u65b0\u6559\u4f26\u7406\u4e0e\u8d44\u672c\u4e3b\u4e49\u7cbe\u795e \u300a\u7075\u9b42\u7684\u9ed1\u591c\u300b \u6258\u9a6c\u65af\u6469\u5c14 \u300a\u903b\u8f91\u300b\u91d1\u5cb3\u9716 \u903b\u8f91\u65b0\u5f15\uff1a\u600e\u6837\u5224\u522b\u662f\u975e \u300a\u4e00\u6ef4\u6cea\u300b\u5deb\u5b81\u5764 \u300a\u601d\u75db\u5f55\u300b\u97e6\u541b\u5b9c \u65af\u901a\u7eb3 \u94f6\u6cb3\u7cfb\u6f2b\u6e38\u6307\u5357 \u6795\u4e2d\u8bb0 \u6258\u5c14\u65af\u6cf0\u3001\u5c60\u683c\u6d85\u592b\u7684\u4f5c\u54c1\u300a\u5b89\u5a1c\u00b7\u5361\u5217\u5c3c\u5a1c\u300b \u300a\u9ed1\u6697\u4e4b\u773c\u300b \u5409\u5c14\u00b7\u5e03\u62c9\u65af \u300a\u7ea6\u7ff0\u514b\u91cc\u65af\u6735\u592b\u300b\u300a\u5929\u4e91\u5c71\u4f20\u5947\u300b\u300a\u4e8e\u65e0\u58f0\u5904\u300b\u300a\u96ea\u57ce\u300b\u300a\u8e49\u8dce\u5c81\u6708\u300b \u738b\u5b89\u5fc6 \u7f8e\u56fd\u901a\u53f2 \u82f1\u56fd\u901a\u53f2 \u9ec4\u4ec1\u5b87\u5168\u96c6 \u5510\u5fb7\u521a\u5168\u96c6 \u65b0\u6279\u5224\u4e3b\u4e49\uff0c\u4e2d\u897f\u6587\u5316\u6bd4\u8f83\u5341\u4e00\u8bb2\uff0c\u6587\u5b66\u4e0e\u6587\u5316\u4e09\u8bba\uff0c\u5112\u5bb6\u4f26\u7406\u6279\u5224\u2014\u2014\u9093\u6653\u8292 \u7ea2\u592a\u9633 \u9769\u547d\u5e74\u4ee3\u2014\u2014\u9ad8\u534e \u4fdd\u5b88\u4e3b\u4e49\u2014\u2014\u5218\u519b\u5b81 \u82cf\u8054\u5174\u4ea1\u53f2\u2014\u2014\u6c88\u5fd7\u534e \u653f\u5e9c\u8bba\u2014\u2014\u6d1b\u514b \u6cd5\u56fd\u9769\u547d\u8bba \u7f8e\u6d32\u4e09\u4e66\u2014\u2014\u67cf\u514b \u8bba\u6cd5\u7684\u7cbe\u795e\u2014\u2014\u5b5f\u5fb7\u65af\u9e20 \u65e7\u5236\u5ea6\u4e0e\u5927\u9769\u547d \u8bba\u7f8e\u56fd\u7684\u6c11\u4e3b\u2014\u2014\u6258\u514b\u7ef4\u5c14 \u81ea\u7531\u7684\u57fa\u56e0\u2014\u6c49\u5357 \u7f8e\u56fd\u8f76\u5e8f\u7684\u6839\u57fa\u2014\u2014\u62c9\u585e\u5c14\u67ef\u514b \u7f8e\u56fd\u79cd\u65cf\u7b80\u53f2 \u7ecf\u6d4e\u5b66\u7684\u601d\u7ef4\u65b9\u5f0f \u77e5\u8bc6\u5206\u5b50\u4e0e\u793e\u4f1a\u2014\u2014\u7d22\u7ef4\u5c14 \u7f8e\u56fd\u5baa\u6cd5\u7684\u57fa\u7763\u6559\u80cc\u666f\u2014\u2014\u827e\u5179\u6469\u5c14 \u82f1\u56fd\u4e2a\u4eba\u4e3b\u4e49\u7684\u8d77\u6e90 \u73b0\u4ee3\u4e16\u754c\u7684\u8bde\u751f\u2014\u2014\u9ea6\u514b\u6cd5\u5170 \u7ecf\u6d4e\u5b66\u539f\u7406\u2014\u2014\u66fc\u6606 \u4e0a\u5e1d\u4e0e\u9ec4\u91d1\u2014\u2014\u7c73\u5fb7 \u901a\u5f80\u5974\u5f79\u4e4b\u8def \u81f4\u547d\u7684\u81ea\u8d1f\u2014\u2014\u54c8\u8036\u514b \u8d44\u672c\u4e3b\u4e49\u4e0e\u81ea\u7531\u2014\u2014\u5f17\u91cc\u5fb7\u66fc \u5927\u56fd\u653f\u6cbb\u7684\u60b2\u5267\u2014\u2014\u7c73\u5c14\u65af\u6d77\u9ed8 \u81ea\u7531\u4e0e\u6743\u529b\u2014\u2014\u963f\u514b\u987f \u82cf\u683c\u62c9\u5e95\u5bf9\u8bdd\u96c6\u2014\u2014\u67cf\u62c9\u56fe \u67aa\u70ae\u75c5\u83cc\u4e0e\u94a2\u94c1 \u9ad8\u6587\u8c26\u300a\u665a\u5e74\u5468\u6069\u6765\u300b \u300a\u65b0\u6559\u4f26\u7406\u4e0e\u8d44\u672c\u4e3b\u4e49\u7cbe\u795e\u300b \u53cc\u6885\u666f\u95c7\u4e1b\u4e66 \u6e90\u6c0f\u7269\u8bed \u6155\u5bb9\u96ea\u6751 \u53f2\u8482\u82ac\u00b7\u79d1\u7279\u52d2\uff08Steven Kotler\uff09\u5199\u7684\u300c\u4e0d\u53ef\u80fd\u7684\u6280\u827a\uff1a\u5dc5\u5cf0\u8868\u73b0\u5165\u95e8\u300d\uff08The Art of Impossible: A Peak Performance Primer\uff09 \u300a\u6570\u5b66\u539f\u7406\u300b \u7f57\u7d20 \u300a\u4e00\u4e2a\u6570\u5b66\u5bb6\u7684\u81ea\u767d\u300b\uff08A Mathematician's Apology\uff09 \u300a\u4ece\u4f18\u79c0\u5230\u5353\u8d8a\u300b\uff08Good to Great\uff09 \u53d1\u73b0\u7684\u4e50\u8da3 \u903b\u8f91\u5b66\u6982\u8bba <\u8c2c\u8bba\u4fa6\u63a2> Beyond Feelings: A Guide to Critical Thinking \u8d85\u8d8a\u611f\u89c9\uff1a\u6279\u5224\u6027\u601d\u8003\u6307\u5357 \u82f1\u6587\u539f\u8457 \u50b2\u6162\u4e0e\u504f\u89c1 \u8d70\u51fa\u975e\u6d32 \u8001\u4eba\u4e0e\u6d77 \u98d8 \u57fa\u7763\u5c71\u4f2f\u7235 \u5c0f\u592b\u4eba \u683c\u5217\u4f5b\u6e38\u8bb0 \u5fb7\u4f2f\u5bb6\u7684\u82d4\u4e1d \u7231\u4e3d\u4e1d\u68a6\u6e38\u4ed9\u5883 \u7b80\u7231 \u96fe\u90fd\u5b64\u513f \u7f8e\u56fd\u5386\u53f2 \u54c8\u5229\u6ce2\u7279 \u7279\u65af\u62c9\u81ea\u4f20 \u300a20\u4e16\u7eaa\u601d\u60f3\u53f2\u300b\u300a\u8be1\u8fa9\u4e0e\u771f\u76f8\u300b \u6743\u5229\u5bc6\u7801 relational being: Beyond self and community alain de botton \u7684\u6240\u6709\u4e66 Obvious Adams, by Robert Updegrafft finite and infinite games ,by Jamesp.Carse The Story of Civilization, especially books 2 & 11 Fifteen Decisive Battles of the World \u838e\u58eb\u6bd4\u4e9a \u6b4c\u5fb7 \u67cf\u62c9\u56fe \u5df4\u5c14\u624e\u514b \u6258\u5c14\u65af\u6cf0 https://www.google.com/amp/www.epochtimes.com/gb/18/6/7/n10464261.htm/amp \u601d\u7ef4\u7684\u65b9\u5f0f \u7eaf\u7cb9\u5e1d\u56fd \u7845\u8c37\u94a2\u94c1\u4fa0 \u94f6\u6cb3\u7cfb\u6f2b\u6e38\u6307\u5357 \u8ba4\u77e5\u5929\u6027 \u5982\u4f55\u9605\u8bfb\u4e00\u672c\u4e66 \u8c08\u5224\u662f\u4ec0\u4e48 \u522b\u505a\u6b63\u5e38\u7684\u50bb\u74dc The seven habit of highly effective people \u4f20\u8bb0\u7c7b\uff1a \u300a\u62ff\u7834\u4ed1\u4f20\u300b \u3010\u82f1\u3011\u5f17\u5170\u514b\u2022\u9ea6\u514b\u6797\u6069 \u8457 \u4e16\u754c\u77e5\u8bc6\u51fa\u7248\u793e2006\u5e74\u7248 \u300a\u540d\u4eba\u4f20\u300b \u3010\u6cd5\u3011\u7f57\u66fc\u2022\u7f57\u5170 \u8457 \u8bd1\u6797\u51fa\u7248\u793e2001\u5e74\u7248 \u300a\u66fe\u56fd\u85e9\u4f20\u300b \u8427\u4e00\u5c71 \u8457 \u6d77\u5357\u51fa\u7248\u793e2001\u5e74\u7248 \u300a\u674e\u9e3f\u7ae0\u4f20\u300b \u6881\u542f\u8d85 \u8457 \u6c5f\u897f\u4eba\u6c11\u51fa\u7248\u793e2003\u5e74\u7248 \u300a\u4e2d\u56fd\u8fd1\u4ee3\u53f2\u4e0a\u7684\u5173\u952e\u4eba\u7269\u300b \u82cf\u540c\u70b3 \u8457 \u767e\u82b1\u6587\u827a\u51fa\u7248\u793e2000\u5e74\u7248 \u300a\u9648\u5bc5\u606a\u7684\u6700\u540e\u4e8c\u5341\u5e74\u300b \u9646\u952e\u4e1c \u8457 \u4e09\u8054\u4e66\u5e971995\u5e74\u7248 \u300a\u9c81\u8fc5\u8bc4\u4f20\u300b \u66f9\u805a\u4ec1 \u8457 \u4e1c\u65b9\u51fa\u7248\u4e2d\u5fc31999\u5e74\u7248 \u300a\u8d70\u8fdb\u5f53\u4ee3\u7684\u9c81\u8fc5\u300b \u94b1\u7406\u7fa4 \u8457 \u5317\u4eac\u5927\u5b66\u51fa\u7248\u793e1999\u5e74\u7248 \u5386\u53f2\u7c7b\uff1a \u300a\u4eba\u7c7b\u7684\u6545\u4e8b\u300b \u3010\u7f8e\u3011\u623f\u9f99\u8457 \u5e7f\u897f\u5e08\u8303\u5927\u5b66\u51fa\u7248\u793e2003\u5e74\u7248 \u300a\u7b2c\u4e09\u5e1d\u56fd\u7684\u5174\u4ea1\u2014\u2014\u7eb3\u7cb9\u5fb7\u56fd\u53f2 \u3010\u7f8e\u3011\u5a01\u5ec9\u2022\u590f\u4f0a\u52d2 \u8457 \u4e16\u754c\u77e5\u8bc6\u51fa\u7248\u793e \u300a\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u56de\u5fc6\u5f55\u300b \u3010\u82f1\u3011\u6e29\u65af\u987f\u2022\u4e18\u5409\u5c14 \u8457 \u65f6\u4ee3\u6587\u827a\u51fa\u7248\u793e \u300a\u4e2d\u56fd\u8fd1\u4ee3\u53f2\u5341\u4e94\u8bb2\u300b \u9648\u65ed\u9e93 \u8457 \u4e2d\u534e\u4e66\u5c402008\u5e74\u7248 \u6587\u5b66\u7c7b\uff1a \u300a\u53cc\u57ce\u8bb0\u300b \u3010\u82f1\u3011\u72c4\u66f4\u65af \u8457 \u4eba\u6c11\u6587\u5b66\u51fa\u7248\u793e \u300a\u4e00\u4e5d\u516b\u56db\u300b \u3010\u82f1\u3011\u4e54\u6cbb\u2022\u5965\u7ef4\u5c14 \u8457 \u4e0a\u6d77\u8bd1\u6587\u51fa\u7248\u793e \u300a\u5f80\u4e8b\u5e76\u4e0d\u5982\u70df\u300b \u7ae0\u8bd2\u548c \u8457 \u4eba\u6c11\u6587\u5b66\u51fa\u7248\u793e2004\u5e74\u7248 \u300a\u5e72\u6821\u516d\u8bb0\u300b \u6768\u7edb \u8457 \u4e2d\u56fd\u793e\u4f1a\u79d1\u5b66\u51fa\u7248\u793e1992\u5e74\u7248 \u300a\u4e03\u5341\u5e74\u4ee3\u300b \u5317\u5c9b\u3001\u674e\u9640\u7b49 \u8457 \u4e09\u8054\u4e66\u5e972009\u5e74\u7248 \u793e\u79d1\u7c7b\uff1a \u300a\u793e\u4f1a\u5951\u7ea6\u8bba\u300b \u3010\u6cd5\u3011\u5362\u68ad \u8457 \u5546\u52a1\u5370\u4e66\u99862003\u5e74\u7248 \u300a\u83ca\u4e0e\u5200\u300b \u3010\u7f8e\u3011\u9c81\u65af\u2022\u672c\u5c3c\u8fea\u514b\u7279 \u8457 \u5546\u52a1\u5370\u4e66\u9986 \u300a\u5929\u671d\u7684\u5d29\u6e83\u2014\u9e26\u7247\u6218\u4e89\u518d\u7814\u7a76\u300b \u8305\u6d77\u5efa \u8457 \u4e09\u8054\u4e66\u5e971995\u5e74\u7248 \u300a\u8fd1\u8ddd\u79bb\u770b\u7f8e\u56fd\u300b\uff08\u51714\u518c\uff09 \u6797\u8fbe \u8457 \u4e09\u8054\u4e66\u5e97 \u5b89\u8fea.\u683c\u9c81\u592b\u4f20\u8bb0 \u4fdd\u5b88\u4e3b\u4e49 \u7f8e\u56fd\u8f76\u5e8f\u7684\u6839\u57fa \u62c9\u585e\u5c14\u67ef\u514b \u4fdd\u5b88\u4e3b\u4e49\u601d\u60f3 \u62c9\u585e\u5c14\u67ef\u514b \u6cd5\u56fd\u9769\u547d\u8bba \u67cf\u514b \u81ea\u7531\u4e0e\u4f20\u7edf \u67cf\u514b \u73b0\u4ee3\u4fdd\u5b88\u653f\u6cbb\u6559\u7236 \u67cf\u514b\u4f20 \u6770\u897f \u8bfa\u66fc \u4fdd\u5b88\u4e3b\u4e49 \u5218\u519b\u5b81 \u4fdd\u5b88\u4e3b\u4e49 \u4f11 \u585e\u897f\u5c14 \u4fdd\u5b88\u4e3b\u4e49 \u5361\u5c14 \u66fc\u6d77\u59c6 \u4fdd\u5b88\u4e3b\u4e49\u7684\u542b\u4e49 \u65af\u514b\u62c9\u987f \u4fdd\u5b88\u4e3b\u4e49 \u4e00\u79cd\u5ba1\u614e\u7684\u653f\u6cbb\u54f2\u5b66 \u6768\u660e\u4f1f \u6218\u540e\u7f8e\u56fd\u7684\u4fdd\u5b88\u4e3b\u4e49 \u738b\u6069\u94ed \u738b\u5353 \u81ea\u7531\u7684\u57fa\u56e0 \u6c49\u5c3c\u5c14 \u6c49\u5357 \u5b97\u6559 \u653f\u6cbb\u4e0e\u9053\u5fb7\u751f\u6d3b \u5965\u514b\u8096\u7279 \u653f\u6cbb\u601d\u60f3\u53f2 \u5965\u514b\u8096\u7279 \u653f\u6cbb\u4e2d\u7684\u7406\u6027\u4e3b\u4e49 \u5965\u514b\u8096\u7279 \u7f8e\u56fd\u5baa\u6cd5\u7684\u57fa\u7763\u6559\u80cc\u666f \u7ea6\u7ff0 \u827e\u5179\u6469\u5c14 \u53f3\u6d3e\u56fd\u5bb6 \u7c73\u514b\u5c14\u97e6\u65af\u7279 \u6c11\u4f17\u653f\u5e9c \u6885\u56e0 \u5f02\u4e2d\u6c42\u540c \u514b\u83b1\u65af\u745e\u6069 \u4fe1\u4ef0\u4e0e\u4f20\u7edf \u8fc8\u65af\u7279 \u81ea\u7531 \u5e73\u7b49 \u535a\u7231 \u8a79\u59c6\u65af \u65af\u8482\u82ac \u6c11\u4e3b\u4e0e\u9886\u8896 \u767d\u74a7\u5fb7 \u8036\u9c81\u7684\u4e0a\u5e1d\u4e0e\u4eba \u5df4\u514b\u5229 \u601d\u60f3\u7684\u540e\u679c \u7ef4\u6c83 \u81ea\u7531\u4e0e\u6743\u529b \u963f\u514b\u987f","title":"Books"},{"location":"save/books/#_1","text":"\u300a\u62ff\u7834\u4ed1\u4f20\u300b \u3010\u82f1\u3011\u5f17\u5170\u514b\u2022\u9ea6\u514b\u6797\u6069 \u8457 \u4e16\u754c\u77e5\u8bc6\u51fa\u7248\u793e2006\u5e74\u7248 \u300a\u540d\u4eba\u4f20\u300b \u3010\u6cd5\u3011\u7f57\u66fc\u2022\u7f57\u5170 \u8457 \u8bd1\u6797\u51fa\u7248\u793e2001\u5e74\u7248 \u300a\u66fe\u56fd\u85e9\u4f20\u300b \u8427\u4e00\u5c71 \u8457 \u6d77\u5357\u51fa\u7248\u793e2001\u5e74\u7248 \u300a\u674e\u9e3f\u7ae0\u4f20\u300b \u6881\u542f\u8d85 \u8457 \u6c5f\u897f\u4eba\u6c11\u51fa\u7248\u793e2003\u5e74\u7248 \u300a\u4e2d\u56fd\u8fd1\u4ee3\u53f2\u4e0a\u7684\u5173\u952e\u4eba\u7269\u300b \u82cf\u540c\u70b3 \u8457 \u767e\u82b1\u6587\u827a\u51fa\u7248\u793e2000\u5e74\u7248 \u300a\u9648\u5bc5\u606a\u7684\u6700\u540e\u4e8c\u5341\u5e74\u300b \u9646\u952e\u4e1c \u8457 \u4e09\u8054\u4e66\u5e971995\u5e74\u7248 \u300a\u9c81\u8fc5\u8bc4\u4f20\u300b \u66f9\u805a\u4ec1 \u8457 \u4e1c\u65b9\u51fa\u7248\u4e2d\u5fc31999\u5e74\u7248 \u300a\u8d70\u8fdb\u5f53\u4ee3\u7684\u9c81\u8fc5\u300b \u94b1\u7406\u7fa4 \u8457 \u5317\u4eac\u5927\u5b66\u51fa\u7248\u793e1999\u5e74\u7248 \u5386\u53f2\u7c7b\uff1a \u300a\u4eba\u7c7b\u7684\u6545\u4e8b\u300b \u3010\u7f8e\u3011\u623f\u9f99\u8457 \u5e7f\u897f\u5e08\u8303\u5927\u5b66\u51fa\u7248\u793e2003\u5e74\u7248 \u300a\u7b2c\u4e09\u5e1d\u56fd\u7684\u5174\u4ea1\u2014\u2014\u7eb3\u7cb9\u5fb7\u56fd\u53f2 \u3010\u7f8e\u3011\u5a01\u5ec9\u2022\u590f\u4f0a\u52d2 \u8457 \u4e16\u754c\u77e5\u8bc6\u51fa\u7248\u793e \u300a\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u56de\u5fc6\u5f55\u300b \u3010\u82f1\u3011\u6e29\u65af\u987f\u2022\u4e18\u5409\u5c14 \u8457 \u65f6\u4ee3\u6587\u827a\u51fa\u7248\u793e \u300a\u4e2d\u56fd\u8fd1\u4ee3\u53f2\u5341\u4e94\u8bb2\u300b \u9648\u65ed\u9e93 \u8457 \u4e2d\u534e\u4e66\u5c402008\u5e74\u7248 \u6587\u5b66\u7c7b\uff1a \u300a\u53cc\u57ce\u8bb0\u300b \u3010\u82f1\u3011\u72c4\u66f4\u65af \u8457 \u4eba\u6c11\u6587\u5b66\u51fa\u7248\u793e \u300a\u4e00\u4e5d\u516b\u56db\u300b \u3010\u82f1\u3011\u4e54\u6cbb\u2022\u5965\u7ef4\u5c14 \u8457 \u4e0a\u6d77\u8bd1\u6587\u51fa\u7248\u793e \u300a\u5f80\u4e8b\u5e76\u4e0d\u5982\u70df\u300b \u7ae0\u8bd2\u548c \u8457 \u4eba\u6c11\u6587\u5b66\u51fa\u7248\u793e2004\u5e74\u7248 \u300a\u5e72\u6821\u516d\u8bb0\u300b \u6768\u7edb \u8457 \u4e2d\u56fd\u793e\u4f1a\u79d1\u5b66\u51fa\u7248\u793e1992\u5e74\u7248 \u300a\u4e03\u5341\u5e74\u4ee3\u300b \u5317\u5c9b\u3001\u674e\u9640\u7b49 \u8457 \u4e09\u8054\u4e66\u5e972009\u5e74\u7248 \u793e\u79d1\u7c7b\uff1a \u300a\u793e\u4f1a\u5951\u7ea6\u8bba\u300b \u3010\u6cd5\u3011\u5362\u68ad \u8457 \u5546\u52a1\u5370\u4e66\u99862003\u5e74\u7248 \u300a\u83ca\u4e0e\u5200\u300b \u3010\u7f8e\u3011\u9c81\u65af\u2022\u672c\u5c3c\u8fea\u514b\u7279 \u8457 \u5546\u52a1\u5370\u4e66\u9986 \u300a\u5929\u671d\u7684\u5d29\u6e83\u2014\u9e26\u7247\u6218\u4e89\u518d\u7814\u7a76\u300b \u8305\u6d77\u5efa \u8457 \u4e09\u8054\u4e66\u5e971995\u5e74\u7248 \u300a\u8fd1\u8ddd\u79bb\u770b\u7f8e\u56fd\u300b\uff08\u51714\u518c\uff09 \u6797\u8fbe \u8457 \u4e09\u8054\u4e66\u5e97 \u5b89\u8fea.\u683c\u9c81\u592b\u4f20\u8bb0","title":"\u4f20\u8bb0\u7c7b\uff1a"},{"location":"save/books/#_2","text":"\u7f8e\u56fd\u8f76\u5e8f\u7684\u6839\u57fa \u62c9\u585e\u5c14\u67ef\u514b \u4fdd\u5b88\u4e3b\u4e49\u601d\u60f3 \u62c9\u585e\u5c14\u67ef\u514b \u6cd5\u56fd\u9769\u547d\u8bba \u67cf\u514b \u81ea\u7531\u4e0e\u4f20\u7edf \u67cf\u514b \u73b0\u4ee3\u4fdd\u5b88\u653f\u6cbb\u6559\u7236 \u67cf\u514b\u4f20 \u6770\u897f \u8bfa\u66fc \u4fdd\u5b88\u4e3b\u4e49 \u5218\u519b\u5b81 \u4fdd\u5b88\u4e3b\u4e49 \u4f11 \u585e\u897f\u5c14 \u4fdd\u5b88\u4e3b\u4e49 \u5361\u5c14 \u66fc\u6d77\u59c6 \u4fdd\u5b88\u4e3b\u4e49\u7684\u542b\u4e49 \u65af\u514b\u62c9\u987f \u4fdd\u5b88\u4e3b\u4e49 \u4e00\u79cd\u5ba1\u614e\u7684\u653f\u6cbb\u54f2\u5b66 \u6768\u660e\u4f1f \u6218\u540e\u7f8e\u56fd\u7684\u4fdd\u5b88\u4e3b\u4e49 \u738b\u6069\u94ed \u738b\u5353 \u81ea\u7531\u7684\u57fa\u56e0 \u6c49\u5c3c\u5c14 \u6c49\u5357 \u5b97\u6559 \u653f\u6cbb\u4e0e\u9053\u5fb7\u751f\u6d3b \u5965\u514b\u8096\u7279 \u653f\u6cbb\u601d\u60f3\u53f2 \u5965\u514b\u8096\u7279 \u653f\u6cbb\u4e2d\u7684\u7406\u6027\u4e3b\u4e49 \u5965\u514b\u8096\u7279 \u7f8e\u56fd\u5baa\u6cd5\u7684\u57fa\u7763\u6559\u80cc\u666f \u7ea6\u7ff0 \u827e\u5179\u6469\u5c14 \u53f3\u6d3e\u56fd\u5bb6 \u7c73\u514b\u5c14\u97e6\u65af\u7279 \u6c11\u4f17\u653f\u5e9c \u6885\u56e0 \u5f02\u4e2d\u6c42\u540c \u514b\u83b1\u65af\u745e\u6069 \u4fe1\u4ef0\u4e0e\u4f20\u7edf \u8fc8\u65af\u7279 \u81ea\u7531 \u5e73\u7b49 \u535a\u7231 \u8a79\u59c6\u65af \u65af\u8482\u82ac \u6c11\u4e3b\u4e0e\u9886\u8896 \u767d\u74a7\u5fb7 \u8036\u9c81\u7684\u4e0a\u5e1d\u4e0e\u4eba \u5df4\u514b\u5229 \u601d\u60f3\u7684\u540e\u679c \u7ef4\u6c83 \u81ea\u7531\u4e0e\u6743\u529b \u963f\u514b\u987f","title":"\u4fdd\u5b88\u4e3b\u4e49"},{"location":"save/browser_plugin/","text":"\u7f51\u9875\u7ffb\u8bd1 Immersive Translate \u6587\u6863\uff1ahttps://immersive-translate.owenyoung.com/?continueFlag=ed49522b808e2b35b83a8975a3dad0f7 \u539f\u7406\uff1a https://manateelazycat.github.io/emacs/eaf/2023/05/06/the-principle-of-immersive-translation.html Scouter \u662f\u4e00\u6b3e\u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u652f\u6301\u89e3\u91ca\u8bed\u53e5\u5e76\u63d0\u4f9b\u6d4b\u8bd5\u9898\u8fdb\u884c\u4e92\u52a8\u7ec3\u4e60\u3002\u76ee\u6807\u662f\u5e2e\u52a9\u4f60\u5728\u771f\u5b9e\u7684\u8bed\u8a00\u73af\u5883\u4e2d\u83b7\u53d6\u8bed\u8a00\u77e5\u8bc6\uff0c\u66f4\u597d\u5f97\u5728\u5b9e\u8df5\u73af\u5883\u4e2d\u5b66\u4e60\u8bed\u8a00\u3002 \ud83d\udd17 github.com/draJiang/scouter-extension \u5b57\u5e55\u7ffb\u8bd1 https://www.dualsub.xyz/zh/docs/quickstart Language reactor \u63a8\u8350\u6d4f\u89c8\u5668\u63d2\u4ef6Language reactor\uff0c\u5bf9\u4e8e\u5b66\u82f1\u8bed\u6216\u8005\u82f1\u8bed\u542c\u529b\u4e0d\u591f\u719f\u7ec3\u7684\u7279\u522b\u4f7f\u7528\uff0c\u53ef\u4ee5\u5728YouTube\u6216NetFlix\u4e0a\u663e\u793a\u53cc\u8bed\u5b57\u5e55\uff0c\u5373\u4f7f\u6ca1\u6709\u4e2d\u6587\u5b57\u5e55\u3002\u800c\u4e14\u9f20\u6807\u79fb\u5230\u5b57\u5e55\u4e0a\u8fd8\u53ef\u4ee5\u663e\u793a\u5355\u8bcd\u91ca\u4e49\u3002 \u5b98\u7f51\uff1ahttps://www.languagereactor.com/help/basic Chrome\u5546\u5e97\uff1ahttps://chrome.google.com/webstore/detail/language-reactor/hoombieeljmmljlkjmnheibnpciblicm/related \u89c6\u9891\u7b14\u8bb0 Video Notes from YouTube to Notion by Snipo readwise reader","title":"Browser plugin"},{"location":"save/browser_plugin/#_1","text":"Immersive Translate \u6587\u6863\uff1ahttps://immersive-translate.owenyoung.com/?continueFlag=ed49522b808e2b35b83a8975a3dad0f7 \u539f\u7406\uff1a https://manateelazycat.github.io/emacs/eaf/2023/05/06/the-principle-of-immersive-translation.html Scouter \u662f\u4e00\u6b3e\u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u652f\u6301\u89e3\u91ca\u8bed\u53e5\u5e76\u63d0\u4f9b\u6d4b\u8bd5\u9898\u8fdb\u884c\u4e92\u52a8\u7ec3\u4e60\u3002\u76ee\u6807\u662f\u5e2e\u52a9\u4f60\u5728\u771f\u5b9e\u7684\u8bed\u8a00\u73af\u5883\u4e2d\u83b7\u53d6\u8bed\u8a00\u77e5\u8bc6\uff0c\u66f4\u597d\u5f97\u5728\u5b9e\u8df5\u73af\u5883\u4e2d\u5b66\u4e60\u8bed\u8a00\u3002 \ud83d\udd17 github.com/draJiang/scouter-extension","title":"\u7f51\u9875\u7ffb\u8bd1"},{"location":"save/browser_plugin/#_2","text":"https://www.dualsub.xyz/zh/docs/quickstart Language reactor \u63a8\u8350\u6d4f\u89c8\u5668\u63d2\u4ef6Language reactor\uff0c\u5bf9\u4e8e\u5b66\u82f1\u8bed\u6216\u8005\u82f1\u8bed\u542c\u529b\u4e0d\u591f\u719f\u7ec3\u7684\u7279\u522b\u4f7f\u7528\uff0c\u53ef\u4ee5\u5728YouTube\u6216NetFlix\u4e0a\u663e\u793a\u53cc\u8bed\u5b57\u5e55\uff0c\u5373\u4f7f\u6ca1\u6709\u4e2d\u6587\u5b57\u5e55\u3002\u800c\u4e14\u9f20\u6807\u79fb\u5230\u5b57\u5e55\u4e0a\u8fd8\u53ef\u4ee5\u663e\u793a\u5355\u8bcd\u91ca\u4e49\u3002 \u5b98\u7f51\uff1ahttps://www.languagereactor.com/help/basic Chrome\u5546\u5e97\uff1ahttps://chrome.google.com/webstore/detail/language-reactor/hoombieeljmmljlkjmnheibnpciblicm/related","title":"\u5b57\u5e55\u7ffb\u8bd1"},{"location":"save/browser_plugin/#_3","text":"Video Notes from YouTube to Notion by Snipo readwise reader","title":"\u89c6\u9891\u7b14\u8bb0"},{"location":"save/course/","text":"CS Curriculum \u81ea\u5b66\u6307\u5357 https://csdiy.wiki/ https://github.com/Developer-Y/cs-video-courses https://github.com/jwasham/coding-interview-university \u6559\u79d1\u4e66\u4e0b\u8f7d https://openstax.org/subjects/math online STEM degree https://www.cs.utexas.edu/ https://www.online.colostate.edu/degrees/ https://openstax.org/subjects \u6536\u96c6\u4e86\u4e00\u4e9b\u9ad8\u8d28\u91cf\u514d\u8d39\u7684\u6570\u5b66\u3001\u7ecf\u6d4e\u3001\u8ba1\u7b97\u673a\u8bfe\u7a0b\u8d44\u6e90\uff0c https://github.com/xioacd99/study-is-wonderful youtube \u5b66\u4e60 https://airy-lunch-c6f.notion.site/d27073ad0ee44a7d8a5b257591d9b348?v=05534b5963d945b18e03ab470d1b331d Linear Algebra Gilbert Strang - Linear Algebra Matrix Methods In Data Analysis, Signal Processing, And Machine Learning Engineering Math: Differential Equations And Linear Algebra Probability \u54c8\u4f5b\u5927\u5b66Stats110 :https://www.youtube.com/watch?v=KbB0FjPg0mw&list=PL2SOU6wwxB0uwwH80KTQ6ht66KWxbzTIo \u6559\u6750\uff1a\u300aIntroduction to Probability (Chapman & Hall/CRC Texts in Statistical Science) \u300b Data Structures and Algorithms CS61B \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 CS 61c https://cs61c.org/fa22/ https://inst.eecs.berkeley.edu/~cs61c/su20/ https://inst.eecs.berkeley.edu/~cs61c/fa20/ CS 152 https://inst.eecs.berkeley.edu/~cs152/sp22/ mit6.033 https://web.mit.edu/6.033/2021/wwwdocs/ vedio : https://www.bilibili.com/video/BV12T4y1R78D?p=3&vd_source=f7c3035649d82d9d7358c49700809de3 \u64cd\u4f5c\u7cfb\u7edf MIT6.828 https://pdos.csail.mit.edu/6.828/2018/schedule.html https://github.com/mit-pdos/xv6-public Neso Academy : https://www.youtube.com/playlist?list=PLBlnK6fEyqRgKl0MbI6kbI5ffNt7BF8Fn \u7f51\u7edc CS144 \u6570\u636e\u5e93 CMU-15445 https://15445.courses.cs.cmu.edu/fall2020/ https://15445.courses.cs.cmu.edu/fall2022 https://github.com/Sorosliu1029/Database-Systems CMU-15721 https://15721.courses.cs.cmu.edu/spring2020/ \u5206\u5e03\u5f0f\u7cfb\u7edf mit6.824. https://github.com/isdanni/mit6.824 https://pdos.csail.mit.edu/6.824/schedule.html https://github.com/Sorosliu1029/6.824 DDIA \u4f5c\u8005 @martinkl \u5173\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u516c\u5f00\u8bfe https://twitter.com/madawei2699/status/1451837146097020928 https://www.youtube.com/playlist?list=PLeKd45zvjcDFUEv_ohr_HdUFe97RItdiB \u7f16\u8bd1\u539f\u7406 How to build a compiler with LLVM and MLIR \uff1ahttps://www.youtube.com/playlist?list=PLlONLmJCfHTo9WYfsoQvwjsa5ZB6hjOG5 AI\uff1a CS 324 - Advances in Foundation Models. Super useful set of reading materials on large language models. https://stanford-cs324.github.io/winter2022/ https://stanford-cs324.github.io/winter2023/syllabus/ \u54c8\u4f5b\u7684CS50\u8bfe\u7a0b\u8282\u9009\uff1aGPT-4\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1fhttps://www.edx.org/course/introduction-computer-science-harvardx-cs50x MIT Intro to Deep Learning\uff1a http://introtodeeplearning.com/ https://www.youtube.com/playlist?list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI Dan Jurafsky\u7684 : https://web.stanford.edu/~jurafsky/slp3/ \"From Deep Learning Foundations to Stable Diffusion\u201d: https://twitter.com/jeremyphoward/status/1643410603363692544 \u5fae\u8f6f\u5f00\u6e90\u7684AI\u8bfe\u7a0b\uff1a\u201c\u4eba\u5de5\u667a\u80fd\u7cfb\u7edf\uff08System for AI\uff09\u201d microsoft.github.io/AI-System github.com/microsoft/AI-System http://nocode.mba/start-ai Build your first AI app! Create an OpenAI text generation bot. Build a simple app using Bubble Connect to OpenAI's API Use it live on the internet roadmap https://roadmap.sh/full-stack web https://www.theodinproject.com/ \u52a8\u753b \u52a8\u753b\u662f\u7528manim\u505a\u7684\uff0c\u8fd9\u662f\u7531 3Blue1Brown \u7ed9\u81ea\u5df1\u505a\u52a8\u753b\u7528\u7684\u5f00\u6e90\u5e93\uff0c\u540e\u6765\u7531\u793e\u533a\u8fdb\u4e00\u6b65\u7ef4\u62a4\u548c\u66f4\u65b0\u800c\u6210\u7684\u9879\u76ee\u3002 \u9879\u76ee\uff1agithub.com/manimCommunity/manim \u4e3b\u9875\uff1awww.manim.community \u57f9\u8bad https://it.0voice.com/p/t_pc/goods_pc_detail/goods_detail/course_2UA0Ee3UkPk1nAXAhgF53RnxYL0 \u54f2\u5b66 \u54f2\u5b66:\u6b66\u6c49\u5927\u5b66\u8d75\u6797\u8001\u5e08\u7684\u516c\u5f00\u8bfe\u5f55\u50cf\u3001 \u7ecf\u6d4e\u5b66 \u7ecf\u6d4e\u5b66:\u8036\u9c81\u5927\u5b66\u7f57\u4f2f\u7279\u5e2d\u52d2\u7684\u516c\u5f00\u8bfe\u5f55\u50cf \u5176\u4ed6 \u54c8\u5f17\u5e78\u798f\u8bfe \u79ef\u6781\u5fc3\u7406\u5b66 https://open.163.com/newview/movie/free?pid=M6HV755O6&mid=M6HV8DF19 \u5251\u6865\u6570\u5b57\u56fe\u4e66\u9986 https://cudl.lib.cam.ac.uk/ \u5de6\u8033\u542c\u98ce https://time.geekbang.org/column/intro/100002201?code=%2BHH8ceM6XIVutB%2F1Oj496tkAnq4o7HBjSZf%2Bt0Wy4qM%3D&tab=catalog MYSQL https://time.geekbang.org/column/intro/139?utm_term=zeusPRZGV&utm_source=weibo&utm_medium=dingqi&utm_campaign=0610 \u97f3\u89c6\u9891 https://it.0voice.com/p/t_pc/goods_pc_detail/goods_detail/course_2U9i1uHS5ewdY1yzgwpTu3L0sF3 CS151 CS107e CS61B: https://sp24.datastructur.es/","title":"CS  Curriculum"},{"location":"save/course/#cs-curriculum","text":"","title":"CS  Curriculum"},{"location":"save/course/#_1","text":"https://csdiy.wiki/ https://github.com/Developer-Y/cs-video-courses https://github.com/jwasham/coding-interview-university","title":"\u81ea\u5b66\u6307\u5357"},{"location":"save/course/#_2","text":"https://openstax.org/subjects/math","title":"\u6559\u79d1\u4e66\u4e0b\u8f7d"},{"location":"save/course/#online-stem-degree","text":"https://www.cs.utexas.edu/ https://www.online.colostate.edu/degrees/ https://openstax.org/subjects","title":"online STEM degree"},{"location":"save/course/#_3","text":"https://github.com/xioacd99/study-is-wonderful","title":"\u6536\u96c6\u4e86\u4e00\u4e9b\u9ad8\u8d28\u91cf\u514d\u8d39\u7684\u6570\u5b66\u3001\u7ecf\u6d4e\u3001\u8ba1\u7b97\u673a\u8bfe\u7a0b\u8d44\u6e90\uff0c"},{"location":"save/course/#youtube","text":"https://airy-lunch-c6f.notion.site/d27073ad0ee44a7d8a5b257591d9b348?v=05534b5963d945b18e03ab470d1b331d","title":"youtube \u5b66\u4e60"},{"location":"save/course/#linear-algebra","text":"Gilbert Strang - Linear Algebra Matrix Methods In Data Analysis, Signal Processing, And Machine Learning Engineering Math: Differential Equations And Linear Algebra","title":"Linear Algebra"},{"location":"save/course/#probability","text":"\u54c8\u4f5b\u5927\u5b66Stats110 :https://www.youtube.com/watch?v=KbB0FjPg0mw&list=PL2SOU6wwxB0uwwH80KTQ6ht66KWxbzTIo \u6559\u6750\uff1a\u300aIntroduction to Probability (Chapman & Hall/CRC Texts in Statistical Science) \u300b","title":"Probability"},{"location":"save/course/#data-structures-and-algorithms","text":"CS61B","title":"Data Structures and Algorithms"},{"location":"save/course/#_4","text":"CS 61c https://cs61c.org/fa22/ https://inst.eecs.berkeley.edu/~cs61c/su20/ https://inst.eecs.berkeley.edu/~cs61c/fa20/ CS 152 https://inst.eecs.berkeley.edu/~cs152/sp22/ mit6.033 https://web.mit.edu/6.033/2021/wwwdocs/ vedio : https://www.bilibili.com/video/BV12T4y1R78D?p=3&vd_source=f7c3035649d82d9d7358c49700809de3","title":"\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784"},{"location":"save/course/#_5","text":"MIT6.828 https://pdos.csail.mit.edu/6.828/2018/schedule.html https://github.com/mit-pdos/xv6-public Neso Academy : https://www.youtube.com/playlist?list=PLBlnK6fEyqRgKl0MbI6kbI5ffNt7BF8Fn","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"save/course/#_6","text":"CS144","title":"\u7f51\u7edc"},{"location":"save/course/#_7","text":"CMU-15445 https://15445.courses.cs.cmu.edu/fall2020/ https://15445.courses.cs.cmu.edu/fall2022 https://github.com/Sorosliu1029/Database-Systems CMU-15721 https://15721.courses.cs.cmu.edu/spring2020/","title":"\u6570\u636e\u5e93"},{"location":"save/course/#_8","text":"mit6.824. https://github.com/isdanni/mit6.824 https://pdos.csail.mit.edu/6.824/schedule.html https://github.com/Sorosliu1029/6.824 DDIA \u4f5c\u8005 @martinkl \u5173\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u516c\u5f00\u8bfe https://twitter.com/madawei2699/status/1451837146097020928 https://www.youtube.com/playlist?list=PLeKd45zvjcDFUEv_ohr_HdUFe97RItdiB","title":"\u5206\u5e03\u5f0f\u7cfb\u7edf"},{"location":"save/course/#_9","text":"How to build a compiler with LLVM and MLIR \uff1ahttps://www.youtube.com/playlist?list=PLlONLmJCfHTo9WYfsoQvwjsa5ZB6hjOG5","title":"\u7f16\u8bd1\u539f\u7406"},{"location":"save/course/#ai","text":"CS 324 - Advances in Foundation Models. Super useful set of reading materials on large language models. https://stanford-cs324.github.io/winter2022/ https://stanford-cs324.github.io/winter2023/syllabus/ \u54c8\u4f5b\u7684CS50\u8bfe\u7a0b\u8282\u9009\uff1aGPT-4\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1fhttps://www.edx.org/course/introduction-computer-science-harvardx-cs50x MIT Intro to Deep Learning\uff1a http://introtodeeplearning.com/ https://www.youtube.com/playlist?list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI Dan Jurafsky\u7684 : https://web.stanford.edu/~jurafsky/slp3/ \"From Deep Learning Foundations to Stable Diffusion\u201d: https://twitter.com/jeremyphoward/status/1643410603363692544 \u5fae\u8f6f\u5f00\u6e90\u7684AI\u8bfe\u7a0b\uff1a\u201c\u4eba\u5de5\u667a\u80fd\u7cfb\u7edf\uff08System for AI\uff09\u201d microsoft.github.io/AI-System github.com/microsoft/AI-System http://nocode.mba/start-ai Build your first AI app! Create an OpenAI text generation bot. Build a simple app using Bubble Connect to OpenAI's API Use it live on the internet","title":"AI\uff1a"},{"location":"save/course/#roadmap","text":"https://roadmap.sh/full-stack","title":"roadmap"},{"location":"save/course/#web","text":"https://www.theodinproject.com/","title":"web"},{"location":"save/course/#_10","text":"\u52a8\u753b\u662f\u7528manim\u505a\u7684\uff0c\u8fd9\u662f\u7531 3Blue1Brown \u7ed9\u81ea\u5df1\u505a\u52a8\u753b\u7528\u7684\u5f00\u6e90\u5e93\uff0c\u540e\u6765\u7531\u793e\u533a\u8fdb\u4e00\u6b65\u7ef4\u62a4\u548c\u66f4\u65b0\u800c\u6210\u7684\u9879\u76ee\u3002 \u9879\u76ee\uff1agithub.com/manimCommunity/manim \u4e3b\u9875\uff1awww.manim.community","title":"\u52a8\u753b"},{"location":"save/course/#_11","text":"https://it.0voice.com/p/t_pc/goods_pc_detail/goods_detail/course_2UA0Ee3UkPk1nAXAhgF53RnxYL0","title":"\u57f9\u8bad"},{"location":"save/course/#_12","text":"\u54f2\u5b66:\u6b66\u6c49\u5927\u5b66\u8d75\u6797\u8001\u5e08\u7684\u516c\u5f00\u8bfe\u5f55\u50cf\u3001","title":"\u54f2\u5b66"},{"location":"save/course/#_13","text":"\u7ecf\u6d4e\u5b66:\u8036\u9c81\u5927\u5b66\u7f57\u4f2f\u7279\u5e2d\u52d2\u7684\u516c\u5f00\u8bfe\u5f55\u50cf","title":"\u7ecf\u6d4e\u5b66"},{"location":"save/course/#_14","text":"\u54c8\u5f17\u5e78\u798f\u8bfe \u79ef\u6781\u5fc3\u7406\u5b66 https://open.163.com/newview/movie/free?pid=M6HV755O6&mid=M6HV8DF19 \u5251\u6865\u6570\u5b57\u56fe\u4e66\u9986 https://cudl.lib.cam.ac.uk/ \u5de6\u8033\u542c\u98ce https://time.geekbang.org/column/intro/100002201?code=%2BHH8ceM6XIVutB%2F1Oj496tkAnq4o7HBjSZf%2Bt0Wy4qM%3D&tab=catalog MYSQL https://time.geekbang.org/column/intro/139?utm_term=zeusPRZGV&utm_source=weibo&utm_medium=dingqi&utm_campaign=0610 \u97f3\u89c6\u9891 https://it.0voice.com/p/t_pc/goods_pc_detail/goods_detail/course_2U9i1uHS5ewdY1yzgwpTu3L0sF3 CS151 CS107e CS61B: https://sp24.datastructur.es/","title":"\u5176\u4ed6"},{"location":"save/english/","text":"\u5b66\u4e60 bibli: \u641c ESL Pod, English Pod, raz\u5206\u7ea7\u9605\u8bfb, magic tree house https://www.englishclass101.com/ Sidney Sheldon \u7684\u60ac\u7591\u5c0f\u8bf4 \u7ffb\u8bd1 \u5434\u6069\u8fbe\u8001\u5e08\u5f00\u6e90\u4e86\u4e00\u5957 AI Agent \u7ffb\u8bd1\u5de5\u4f5c\u6d41 Translation Agent\u3002 GitHub\uff1agithub.com/andrewyng/translation-agent StreamSpeech\uff1a https://github.com/ictnlp/StreamSpeech https://github.com/xiaolai/everyone-can-use-english transcript https://sinqi.tools/zh/youtube_transcript","title":"English"},{"location":"save/english/#_1","text":"bibli: \u641c ESL Pod, English Pod, raz\u5206\u7ea7\u9605\u8bfb, magic tree house https://www.englishclass101.com/ Sidney Sheldon \u7684\u60ac\u7591\u5c0f\u8bf4","title":"\u5b66\u4e60"},{"location":"save/english/#_2","text":"\u5434\u6069\u8fbe\u8001\u5e08\u5f00\u6e90\u4e86\u4e00\u5957 AI Agent \u7ffb\u8bd1\u5de5\u4f5c\u6d41 Translation Agent\u3002 GitHub\uff1agithub.com/andrewyng/translation-agent StreamSpeech\uff1a https://github.com/ictnlp/StreamSpeech","title":"\u7ffb\u8bd1"},{"location":"save/english/#_3","text":"https://github.com/xiaolai/everyone-can-use-english","title":""},{"location":"save/english/#transcript","text":"https://sinqi.tools/zh/youtube_transcript","title":"transcript"},{"location":"save/english_rank/","text":"\u82f1\u8bed\u7b49\u7ea7\u8003\u8bd5 ETS TOEFL : Use DePaul\u2019s institutional code is 1165 IELTS \u2013 Send to DePaul University Pearson Test of English \u2013 Send to DePaul University Duolingo English Test \u2013 Send to DePaul University \u5728\u7ebf\u6a21\u62df : Start preparing for your next test! online source https://sproutsschools.com/","title":"English rank"},{"location":"save/english_rank/#_1","text":"ETS TOEFL : Use DePaul\u2019s institutional code is 1165 IELTS \u2013 Send to DePaul University Pearson Test of English \u2013 Send to DePaul University Duolingo English Test \u2013 Send to DePaul University \u5728\u7ebf\u6a21\u62df : Start preparing for your next test!","title":"\u82f1\u8bed\u7b49\u7ea7\u8003\u8bd5"},{"location":"save/english_rank/#online-source","text":"https://sproutsschools.com/","title":"online source"},{"location":"save/it_tools/","text":"\u865a\u62df\u673a VirtualBox (free for Mac, Linux, Windows) VMware Player (free for Linux and Windows, registration required) VMware Fusion (Downloadable from IS&T for free). PicoShare \u7684\u6781\u7b80\u6587\u4ef6\u5171\u4eab\u5e94\u7528\u7a0b\u5e8f PicoShare \u6293\u5305\u5de5\u5177 https://setapp.com/apps/proxyman Mac\u4e0a\u4ee3\u66ff Docker \u7684\u5de5\u5177\u300cOrbStack\u300d https://orbstack.dev/ VSCode plugins Gitlen \u4f7f\u7528\uff1a https://www.youtube.com/watch?v=UQPb73Zz9qk ispc https://ispc.github.io/downloads.html OS ubuntu \u7f16\u8f91\u5668 Mac\u4e0a\u7684Quiver\u505a\u7684\u771f\u5fc3\u4e0d\u9519\uff0c\u4e0d\u6b62\u652f\u6301Markdown\uff0c\u8fd8\u652f\u6301HTML\u3001\u516c\u5f0f\u3001\u6d41\u7a0b\u56fe\u3002\uff08\u6536\u8d39\uff09 GitHub CodeEditApp/CodeEdit\uff1a\u8f7b\u91cf\u793e\u533a\u53cb\u597d\u7684\u514d\u8d39 macOS \u539f\u751f\u4ee3\u7801\u7f16\u8f91\u5668\uff1a https://github.com/CodeEditApp/CodeEdit Runestone\u662f\u4e2a\u5f00\u6e90\u7684iOS\u7684\u4ee3\u7801\u7f16\u8f91\u5668\uff1ahttps://github.com/simonbs/Runestone Xournal++ : https://xournalpp.github.io/ Jira plane :Jira \u7684\u5f00\u6e90\u7248\u5e73\u66ff Database \u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177\uff1adata grip https://www.jetbrains.com/datagrip/ \u89c6\u9891\u4e0b\u8f7d\u5de5\u5177 cobalt\uff1a \u652f\u6301 B\u7ad9\u3001YouTube\u3001Instagram\u3001TikTok \u548c Twitter \u89c6\u9891\u4e0b\u8f7d GitHub\uff1agithub.com/imputnet/cobalt \u5728\u7ebf\u4f53\u9a8c\uff1acobalt.tools html\u89c6\u9891\u64ad\u653e https://github.com/sampotts/plyr/tree/master https://github.com/bytedance/xgplayer?tab=readme-ov-file homeserver and NAS(network attached storage ) CasaOS: https://github.com/IceWhaleTech/CasaOS Runtipi\uff1a \u6628\u5929\u7ed9\u5bb6\u91cc\u7684 homeserver \u88c5\u4e86\u8fd9\u4e2a Runtipi\uff1a https://github.com/runtipi/runtipi \u5b89\u88c5\u5404\u79cd\u5e94\u7528\u65b9\u4fbf\u5f88\u591a\uff0c\u57fa\u4e8eDocker\uff0c\u6709\u4e2a App Store \u53ef\u4ee5\u76f4\u63a5\u4e00\u952e\u5b89\u88c5\uff0c\u5f88\u5feb\u901f\uff0c\u5e38\u89c1\u5e94\u7528\u90fd\u6709\uff0c\u754c\u9762\u56fe\u6807\u90fd\u5f88\u597d\u770b\uff0c\u6280\u672f\u6808\u4e5f\u5f88\u65b0\uff0c\u7528\u8d77\u6765\u633a\u8212\u670d\u7684\u3002 \u5982\u679c\u5927\u5bb6\u5bb6\u91cc\u6709\u6811\u8393\u6d3e\u4e4b\u7c7b\u7684\u53ef\u4ee5\u5b89\u88c5\u4e0b\uff0c\u4f53\u9a8c\u5f88\u68d2. https://www.openmediavault.org/ https://www.appinn.com/ds-cloud/ cloudflare \u57fa\u4e8eCloudflare\u7684\u5f00\u6e90\u5de5\u5177: https://github.com/zhuima/awesome-cloudflare","title":"It tools"},{"location":"save/it_tools/#_1","text":"VirtualBox (free for Mac, Linux, Windows) VMware Player (free for Linux and Windows, registration required) VMware Fusion (Downloadable from IS&T for free).","title":"\u865a\u62df\u673a"},{"location":"save/it_tools/#picoshare","text":"PicoShare","title":"PicoShare \u7684\u6781\u7b80\u6587\u4ef6\u5171\u4eab\u5e94\u7528\u7a0b\u5e8f"},{"location":"save/it_tools/#_2","text":"https://setapp.com/apps/proxyman","title":"\u6293\u5305\u5de5\u5177"},{"location":"save/it_tools/#mac-docker-orbstack","text":"https://orbstack.dev/","title":"Mac\u4e0a\u4ee3\u66ff Docker \u7684\u5de5\u5177\u300cOrbStack\u300d"},{"location":"save/it_tools/#vscode-plugins","text":"Gitlen \u4f7f\u7528\uff1a https://www.youtube.com/watch?v=UQPb73Zz9qk","title":"VSCode plugins"},{"location":"save/it_tools/#ispc","text":"https://ispc.github.io/downloads.html","title":"ispc"},{"location":"save/it_tools/#os","text":"ubuntu","title":"OS"},{"location":"save/it_tools/#_3","text":"Mac\u4e0a\u7684Quiver\u505a\u7684\u771f\u5fc3\u4e0d\u9519\uff0c\u4e0d\u6b62\u652f\u6301Markdown\uff0c\u8fd8\u652f\u6301HTML\u3001\u516c\u5f0f\u3001\u6d41\u7a0b\u56fe\u3002\uff08\u6536\u8d39\uff09 GitHub CodeEditApp/CodeEdit\uff1a\u8f7b\u91cf\u793e\u533a\u53cb\u597d\u7684\u514d\u8d39 macOS \u539f\u751f\u4ee3\u7801\u7f16\u8f91\u5668\uff1a https://github.com/CodeEditApp/CodeEdit Runestone\u662f\u4e2a\u5f00\u6e90\u7684iOS\u7684\u4ee3\u7801\u7f16\u8f91\u5668\uff1ahttps://github.com/simonbs/Runestone Xournal++ : https://xournalpp.github.io/","title":"\u7f16\u8f91\u5668"},{"location":"save/it_tools/#jira","text":"plane :Jira \u7684\u5f00\u6e90\u7248\u5e73\u66ff","title":"Jira"},{"location":"save/it_tools/#database","text":"\u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177\uff1adata grip https://www.jetbrains.com/datagrip/","title":"Database"},{"location":"save/it_tools/#_4","text":"cobalt\uff1a \u652f\u6301 B\u7ad9\u3001YouTube\u3001Instagram\u3001TikTok \u548c Twitter \u89c6\u9891\u4e0b\u8f7d GitHub\uff1agithub.com/imputnet/cobalt \u5728\u7ebf\u4f53\u9a8c\uff1acobalt.tools","title":"\u89c6\u9891\u4e0b\u8f7d\u5de5\u5177"},{"location":"save/it_tools/#html","text":"https://github.com/sampotts/plyr/tree/master https://github.com/bytedance/xgplayer?tab=readme-ov-file","title":"html\u89c6\u9891\u64ad\u653e"},{"location":"save/it_tools/#homeserver-and-nasnetwork-attached-storage","text":"CasaOS: https://github.com/IceWhaleTech/CasaOS Runtipi\uff1a \u6628\u5929\u7ed9\u5bb6\u91cc\u7684 homeserver \u88c5\u4e86\u8fd9\u4e2a Runtipi\uff1a https://github.com/runtipi/runtipi \u5b89\u88c5\u5404\u79cd\u5e94\u7528\u65b9\u4fbf\u5f88\u591a\uff0c\u57fa\u4e8eDocker\uff0c\u6709\u4e2a App Store \u53ef\u4ee5\u76f4\u63a5\u4e00\u952e\u5b89\u88c5\uff0c\u5f88\u5feb\u901f\uff0c\u5e38\u89c1\u5e94\u7528\u90fd\u6709\uff0c\u754c\u9762\u56fe\u6807\u90fd\u5f88\u597d\u770b\uff0c\u6280\u672f\u6808\u4e5f\u5f88\u65b0\uff0c\u7528\u8d77\u6765\u633a\u8212\u670d\u7684\u3002 \u5982\u679c\u5927\u5bb6\u5bb6\u91cc\u6709\u6811\u8393\u6d3e\u4e4b\u7c7b\u7684\u53ef\u4ee5\u5b89\u88c5\u4e0b\uff0c\u4f53\u9a8c\u5f88\u68d2. https://www.openmediavault.org/ https://www.appinn.com/ds-cloud/","title":"homeserver and NAS(network attached storage )"},{"location":"save/it_tools/#cloudflare","text":"\u57fa\u4e8eCloudflare\u7684\u5f00\u6e90\u5de5\u5177: https://github.com/zhuima/awesome-cloudflare","title":"cloudflare"},{"location":"save/math_tool/","text":"","title":"Math tool"},{"location":"save/online_university/","text":"\u6559\u80b2\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u81ea\u6211\u6559\u80b2\uff0c\u81ea\u5b66\u80fd\u529b\u662f\u81ea\u6211\u63d0\u4f9b\u4e2a\u6027\u5316\u6559\u80b2\u7684\u9ad8\u6548\u6559\u80b2\u3002\u6574\u7406\u4e86\u51e0\u4e2a\u81ea\u5b66\u7f51\u7ad9\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002\u641c\u7d22\u82f1\u6587\u5173\u952e\u8bcd\u5373\u53ef\u8fdb\u5165\u4e3b\u9875\u3002 edX :\u2014\u514d\u8d39\u53ef\u5b66\u6765\u81ea\u5168\u7403\u9876\u5c16\u5927\u5b66\uff08\u5305\u62ecMIT\u548c\u54c8\u4f5b\u5927\u5b66\uff09\u7684\u8bfe\u7a0b\uff0c\u63d0\u4f9b\u4ed8\u8d39\u7684\u8ba4\u8bc1 Coursera : \u2014\u514d\u8d39\u53ef\u5b66\u6765\u81ea\u5168\u740320\u591a\u4e2a\u56fd\u5bb6100\u591a\u6240\u9876\u5c16\u5927\u5b66\u7684\u8bfe\u7a0b\uff0c\u6709\u63d0\u4f9b\u8ba4\u8bc1\u8bc1\u4e66\u7684\u4e13\u9879\u8bfe\u7a0b\uff0c\u7531\u6d45\u5165\u6df1\u7cfb\u7edf\u5b66\u4e60\u4e00\u4e2a\u9886\u57df\u3002 MIT Open Courseware : \u2014\u521b\u5efa\u4e8e 2002\u5e74\uff0c\u514d\u8d39\u63d0\u4f9b\u51e0\u4e4e\u6240\u6709MIT\u8bfe\u7a0b\u7684\u5b8c\u6574\u6750\u6599\u3002 udemy Open Yale Courses \u2014\u63d0\u4f9b\u8036\u9c81\u5927\u5b66\u7684\u8bfe\u7a0b\uff0c\u65e2\u6709\u4f20\u7edf\u7684\u7f51\u7edc\u516c\u5f00\u8bfe\uff0c\u4e5f\u6709MOOC\u3002 Open Learning Initiative \u2014\u5361\u9ea6\u57fa\u6885\u9686\u5927\u5b66\u7684\u4e00\u4e2a\u5f00\u653e\u8ba1\u5212\u3002 Khan Academy\u2014\u53ef\u6c57\u5b66\u9662\uff0c\u6700\u65e9\u7684\u7ebf\u4e0a\u81ea\u5b66\u7f51\u7ad9\u4e4b\u4e00\uff0c\u5185\u5bb9\u4e30\u5bcc\uff0c\u9002\u5408\u4efb\u4f55\u5e74\u7eaa\u7684 MITVideo \u2014\u63d0\u4f9b\u8d85\u8fc712,000\u4e2a\u8bb2\u5ea7\u3001\u89c6\u9891\uff0c\u6db5\u76d6\u6570\u5b66\u3001\u5efa\u7b51\u3001\u827a\u672f\u3001\u5316\u5b66\u3001\u751f\u7269\u3001\u4eba\u6587\u793e\u79d1\u3001\u7269\u7406\u7b49\u9886\u57df\u3002 Stanford Online : \u2014\u65af\u5766\u798f\u5927\u5b66\u7684\u7ebf\u4e0a\u81ea\u5b66\u5e73\u53f0\u3002 Harvard Extension School: Open Learning Initiative \u2014\u54c8\u4f5b\u5927\u5b66\u7684\u7ebf\u4e0a\u8bfe\u7a0b\u89c6\u9891\u7cbe\u9009\u3002 Canvas Network \u2014\u53c8\u4e00\u4e2a MOOC \u5e73\u53f0\u3002 Quantum Physics Made Relatively Simple \u2014\u7406\u8bba\u7269\u7406\u5b66\u5bb6Hans Bethe\u5411\u4f60\u4ecb\u7ecd\u91cf\u5b50\u7269\u7406\u5b66\u3002 Open UW\u2014\u534e\u76db\u987f\u5927\u5b66\u7684\u7ebf\u4e0a\u8bfe\u7a0b\u8d44\u6e90\u3002 UC San Diego Podcast Lectures \u4e00 \u5723\u5730\u4e9a\u54e5\u5927\u5b66\u7684\u89c6\u9891\u3001\u97f3\u9891\u8d44\u6e90\u3002 University of the People \u2014 \u8fd9\u662f\u4e00\u95f4\u514d\u5b66\u8d39\u7684\u7ebf\u4e0a\u5927\u5b66\u3002 udacity \u7f16\u7a0b\u5b66\u4e60\uff1a https://codeinplace.stanford.edu/ CS\u81ea\u5b66\u6307\u5357: https://csdiy.wiki/ CUVIDS: https://cuvids.io/","title":"\u7f51\u7edc\u5927\u5b66"},{"location":"save/prompts/","text":"translator I want you to act as an translator, spelling corrector and improver. You will detect the language, if it's english translate it to chinese, or it's chinese translate it to english, you should translate in the corrected and improved version of my text.","title":"Prompts"},{"location":"save/prompts/#translator","text":"I want you to act as an translator, spelling corrector and improver. You will detect the language, if it's english translate it to chinese, or it's chinese translate it to english, you should translate in the corrected and improved version of my text.","title":"translator"},{"location":"save/ps/","text":"https://www.youtube.com/watch?v=ZbvLJ5XtPpA&ab_channel=LearnitTraining https://www.udemy.com/topic/photoshop/ https://creativecloud.adobe.com/zh-Hans/learn https://www.coursera.org/courses?query=photoshop https://www.yutu.cn/course/2747_52580_1.html","title":"Ps"},{"location":"save/qt/","text":"","title":"Qt"},{"location":"save/startup/","text":"","title":"Startup"},{"location":"save/study-books/","text":"\u6280\u672f\u4e66 \uff0cDatabase System Concepts W. Richard Stevents \u300a Unix \u7f51\u7edc\u7f16\u7a0b (Unix Network Programming)\u300b \u300aUNIX\u7f16\u7a0b\u827a\u672f\u300b \u300a C \u7a0b\u5e8f\u8bbe\u8ba1\u65b0\u601d\u7ef4 (21st Century C: C Tips from the New School)\u300b \u300a C \u4e13\u5bb6\u7f16\u7a0b (Expert C Programming: Deep C Secrets)\u300b \u300a POSIX \u591a\u7ebf\u7a0b\u7f16\u7a0b (Programming with POSIX Threads)\u300b Maurice Bach \u7684\u300a UNIX \u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1 (The Design of the Unix Operation System)\u300b \u300a \u8bbe\u8ba1\u5fc3\u7406\u5b66 (The Design of Everyday Things)\u300b Kernighan \u548c Rob Pike \u5408\u8457\u7684\u300a \u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u8df5 (The Practic of Programming)\u300b \u300a \u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u827a\u672f\uff081-4A\uff09 (The Art of Computer Programming, Volumes 1-4A)\u300b \u300a \u4ee3\u7801\u9605\u8bfb\u65b9\u6cd5\u4e0e\u5b9e\u8df5 (Code Reading: The Open Source Perspective)\u300b \u300a \u7cbe\u901a ZX81 \u673a\u5668\u7801 (Mastering machine code on your ZX81)\u300b \u300a \u5b9e\u7528 C \u8bed\u8a00\u7f16\u7a0b (Practical C Programming)\u300b \u300a C \u8bed\u8a00\u53c2\u8003\u624b\u518c (C: A Reference Manual)\u300b (HOWTO do Linux kernel development) \u300a\u6df1\u5165\u7406\u89e3C++\u5bf9\u8c61\u6a21\u578b\u300b\u3002 \u300aSTL\u6e90\u7801\u5256\u6790\u300b Essential C++\uff0cC++primer\uff0cEffect C++\uff0cMore Effect C++\uff0cC++\u6807\u51c6\u7a0b\u5e8f\u5e93\uff0c\u6df1\u5ea6\u63a2\u7d22C++\u7684\u5bf9\u8c61\u6a21\u578b The UNIX Time Sharing System \u300akubernets pattern\u300b \u300aUnix & Linux\u5927\u5b66\u6559\u7a0b\u300b The IBM PC Assembly Language \u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406 \u548c \u6570\u5b57\u7535\u8def\u4e0e\u903b\u8f91\u8bbe\u8ba1 https://www.redhat.com/en/engage/kubernetes-containers-architecture-s-201910240918 google cluster chubby GFS MapReduce BigTable \u300a\u7f16\u7a0b\u9ad8\u624b\u7bb4\u8a00\u300b https://teachyourselfcs.com \u8ba1\u7b97\u673a\u67b6\u6784\u8bfe\u7a0b Onur mutlu https://www.youtube.com/watch?v=BJ87rZCGWU0&list=PL5PHm2jkkXmidJOd59REog9jDnPDTG6IJ \u673a\u5668\u5b66\u4e60 GitHub\uff1agithub.com/microsoft/ML-For-Beginners \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790 by Weiss \u4fe1\u53f7\u7cfb\u7edf \u901a\u4fe1\u539f\u7406 \u300a\u51e0\u4f55\u539f\u672c\u300b\u6b27\u51e0\u91cc\u5f97 \u300a\u7b97\u672f\u300b\u4e22\u756a\u56fe \u300a\u7b97\u672f\u7814\u7a76\u300b \u9ad8\u65af \u9f99\u5185\u300a\u5e73\u9762\u4e09\u89d2\u5b66\u300b \u5361\u5c14\u300a\u7eaf\u7cb9\u6570\u5b66\u4e0e\u5e94\u7528\u6570\u5b66\u57fa\u672c\u7ed3\u679c\u6c47\u7f16\u300b \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790 \u300a\u81ea\u7136\u54f2\u5b66\u7684\u6570\u5b66\u539f\u7406\u300b \u5085\u7acb\u53f6\u300a\u70ed\u7684\u89e3\u6790\u7406\u8bba\u300b \u5fae\u5206\u51e0\u4f55\u3001\u79ef\u5206\u65b9\u7a0b\u548c\u89e3\u6790\u6570\u8bba","title":"Study books"},{"location":"save/tools/","text":"\u5f55\u5c4f\u8f6f\u4ef6 https://www.screen.studio/ \u9605\u8bfb\u5668 \u97f3\u9891\u7535\u5b50\u4e66: Audible oreilly APP \u89c6\u9891\u526a\u8f91 Descript: \u4efb\u4f55\u5bfc\u5165Descript\u7684\u7d20\u6750\uff0c\u5b83\u90fd\u4f1a\u81ea\u52a8\u8fdb\u884c\u8bed\u97f3\u8bc6\u522b\uff0c\u7136\u540e\u751f\u6210\u8ddf\u89c6\u9891\u65f6\u95f4\u7ebf\u4e25\u683c\u5bf9\u5e94\u7684\u6587\u672c\u3002\u526a\u8f91\u7684\u65f6\u5019\uff0c\u4f60\u53ea\u9700\u8981\u5bf9\u6587\u5b57\u8fdb\u884c\u7f16\u8f91\uff0c\u5373\u53ef\u5b9e\u73b0\u89c6\u9891\u7f16\u8f91. \u9605\u8bfb\u8f6f\u4ef6 kybook3\uff1a \u6709\u6717\u8bfb\u529f\u80fd Here are 13 AI-powered apps that will supercharge your academic writing and reading \u2014 with free tutorials: https://www.linkedin.com/feed/update/urn:li:activity:7052914103127793664/ Ebook Translator https://bookfere.com/post/1057.html https://github.com/bookfere/Ebook-Translator-Calibre-Plugin/blob/master/README.zh-CN.md Macdown obsidian \u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5f00\u6e90\u7684Mac\u539f\u751f\u7f16\u8f91\u5668 pdf \u7f16\u8f91 https://www.pixelmator.com/pro/ \u6d41\u7a0b\u56fe https://app.diagrams.net/ https://mermaid.js.org/ https://github.com/mermaid-js/mermaid google https://drive.google.com/ \u89c6\u9891\u4e0b\u8f7d gopeed\uff1a https://github.com/GopeedLab/gopeed https://docs.gopeed.com/zh/install.html https://www.internetdownloadmanager.com/ https://software.charliemonroe.net/downie/ https://superparse.com/ \u63a8\u7279\u89c6\u9891\u4e0b\u8f7d\uff1a https://x.com/dotey/status/1780129671897600405 \u4e0b\u8f7d-download\uff1a https://github.com/imfile-io/imfile-desktop/blob/master/README-CN.md \u641c\u7d22 https://explorer.globe.engineer VPN Astrill https://mojie.me/#/register?code=V2z6hs9W justmysocks: https://justmysocks.net/members/ \u5370\u7ae0 http://we.h12345.com","title":"Tools"},{"location":"save/tools/#_1","text":"https://www.screen.studio/","title":"\u5f55\u5c4f\u8f6f\u4ef6"},{"location":"save/tools/#_2","text":"\u97f3\u9891\u7535\u5b50\u4e66: Audible oreilly APP","title":"\u9605\u8bfb\u5668"},{"location":"save/tools/#_3","text":"Descript: \u4efb\u4f55\u5bfc\u5165Descript\u7684\u7d20\u6750\uff0c\u5b83\u90fd\u4f1a\u81ea\u52a8\u8fdb\u884c\u8bed\u97f3\u8bc6\u522b\uff0c\u7136\u540e\u751f\u6210\u8ddf\u89c6\u9891\u65f6\u95f4\u7ebf\u4e25\u683c\u5bf9\u5e94\u7684\u6587\u672c\u3002\u526a\u8f91\u7684\u65f6\u5019\uff0c\u4f60\u53ea\u9700\u8981\u5bf9\u6587\u5b57\u8fdb\u884c\u7f16\u8f91\uff0c\u5373\u53ef\u5b9e\u73b0\u89c6\u9891\u7f16\u8f91.","title":"\u89c6\u9891\u526a\u8f91"},{"location":"save/tools/#_4","text":"kybook3\uff1a \u6709\u6717\u8bfb\u529f\u80fd","title":"\u9605\u8bfb\u8f6f\u4ef6"},{"location":"save/tools/#here-are-13-ai-powered-apps-that-will-supercharge-your-academic-writing-and-reading-with-free-tutorials","text":"https://www.linkedin.com/feed/update/urn:li:activity:7052914103127793664/","title":"Here are 13 AI-powered apps that will supercharge your academic writing and reading \u2014 with free tutorials:"},{"location":"save/tools/#ebook-translator","text":"https://bookfere.com/post/1057.html https://github.com/bookfere/Ebook-Translator-Calibre-Plugin/blob/master/README.zh-CN.md","title":"Ebook Translator"},{"location":"save/tools/#macdown","text":"obsidian \u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5f00\u6e90\u7684Mac\u539f\u751f\u7f16\u8f91\u5668","title":"Macdown"},{"location":"save/tools/#pdf","text":"https://www.pixelmator.com/pro/","title":"pdf \u7f16\u8f91"},{"location":"save/tools/#_5","text":"https://app.diagrams.net/ https://mermaid.js.org/ https://github.com/mermaid-js/mermaid","title":"\u6d41\u7a0b\u56fe"},{"location":"save/tools/#google","text":"https://drive.google.com/","title":"google"},{"location":"save/tools/#_6","text":"gopeed\uff1a https://github.com/GopeedLab/gopeed https://docs.gopeed.com/zh/install.html https://www.internetdownloadmanager.com/ https://software.charliemonroe.net/downie/ https://superparse.com/ \u63a8\u7279\u89c6\u9891\u4e0b\u8f7d\uff1a https://x.com/dotey/status/1780129671897600405","title":"\u89c6\u9891\u4e0b\u8f7d"},{"location":"save/tools/#-download","text":"https://github.com/imfile-io/imfile-desktop/blob/master/README-CN.md","title":"\u4e0b\u8f7d-download\uff1a"},{"location":"save/tools/#_7","text":"https://explorer.globe.engineer","title":"\u641c\u7d22"},{"location":"save/tools/#vpn","text":"Astrill https://mojie.me/#/register?code=V2z6hs9W justmysocks: https://justmysocks.net/members/","title":"VPN"},{"location":"save/tools/#_8","text":"http://we.h12345.com","title":"\u5370\u7ae0"},{"location":"save/vps/","text":"\u7ffb\u5899 https://www.v2ray.com https://toutyrater.github.io/","title":"Vps"},{"location":"save/vps/#_1","text":"https://www.v2ray.com https://toutyrater.github.io/","title":"\u7ffb\u5899"},{"location":"save/web_site/","text":"\u82f1\u8bed\u8bcd\u5178\u7f51\u7ad9 Reverso: https://conjugator.reverso.net/conjugation-english.html Cambridge Dictionary:https://dictionary.cambridge.org/dictionary/english WordReference: https://www.wordreference.com/enzh Glosbe: https://glosbe.com/en/zh babla: https://www.babla.cn/%E8%8B%B1%E8%AF%AD-%E4%B8%AD%E6%96%87/ \u7f51\u7ad9 \u8d2d\u4e70\u57df\u540d\uff1a name NameSilo \u57df\u540d/DNS\u89e3\u6790/\u9759\u6001\u7f51\u7ad9\u90e8\u7f72\uff1a cloudflare https://pages.cloudflare.com/ \u9759\u6001\u7f51\u7ad9\u90e8\u7f72\uff1a vercel hetzner \u56fe\u7247\u7b49\u9759\u6001\u8d44\u6e90\uff1abunnynet \u72ec\u7acb\u90ae\u7bb1\uff1afastmail \u4e2a\u4eba\u7f51\u7ad9\u5efa\u8bbe Hugo theme: https://themes.gohugo.io/themes/hugo-book/ podcasts https://hackernoon.com/ https://open.spotify.com/ https://podcasts.apple.com/ca/podcast/the-history-of-english-podcast Documentaries https://ihavenotv.com/ telegram\u4f7f\u7528\u6307\u5357 https://tingtalk.me/telegram/ https://github.com/ting-talk/blog/blob/master/source/_posts/digital-life/telegram.md \u8f6f\u4ef6\u4e0b\u8f7d \u7834\u89e3\u8f6f\u4ef6\u4e0b\u8f7d\uff1ahttps://taiwebs.com/ web.tmeplate.com itoy.com webskeleton.com webos.com","title":"\u7f51\u5740\u6536\u85cf"},{"location":"save/web_site/#_1","text":"Reverso: https://conjugator.reverso.net/conjugation-english.html Cambridge Dictionary:https://dictionary.cambridge.org/dictionary/english WordReference: https://www.wordreference.com/enzh Glosbe: https://glosbe.com/en/zh babla: https://www.babla.cn/%E8%8B%B1%E8%AF%AD-%E4%B8%AD%E6%96%87/","title":"\u82f1\u8bed\u8bcd\u5178\u7f51\u7ad9"},{"location":"save/web_site/#_2","text":"\u8d2d\u4e70\u57df\u540d\uff1a name NameSilo \u57df\u540d/DNS\u89e3\u6790/\u9759\u6001\u7f51\u7ad9\u90e8\u7f72\uff1a cloudflare https://pages.cloudflare.com/ \u9759\u6001\u7f51\u7ad9\u90e8\u7f72\uff1a vercel hetzner \u56fe\u7247\u7b49\u9759\u6001\u8d44\u6e90\uff1abunnynet \u72ec\u7acb\u90ae\u7bb1\uff1afastmail","title":"\u7f51\u7ad9"},{"location":"save/web_site/#_3","text":"Hugo theme: https://themes.gohugo.io/themes/hugo-book/","title":"\u4e2a\u4eba\u7f51\u7ad9\u5efa\u8bbe"},{"location":"save/web_site/#podcasts","text":"https://hackernoon.com/ https://open.spotify.com/ https://podcasts.apple.com/ca/podcast/the-history-of-english-podcast","title":"podcasts"},{"location":"save/web_site/#documentaries","text":"https://ihavenotv.com/","title":"Documentaries"},{"location":"save/web_site/#telegram","text":"https://tingtalk.me/telegram/ https://github.com/ting-talk/blog/blob/master/source/_posts/digital-life/telegram.md","title":"telegram\u4f7f\u7528\u6307\u5357"},{"location":"save/web_site/#_4","text":"\u7834\u89e3\u8f6f\u4ef6\u4e0b\u8f7d\uff1ahttps://taiwebs.com/ web.tmeplate.com itoy.com webskeleton.com webos.com","title":"\u8f6f\u4ef6\u4e0b\u8f7d"},{"location":"save/%E7%94%B5%E5%BD%B1/","text":"\u4e0a\u5e1d\u4e5f\u75af\u72c2 \u5929\u9053 \u9ed1\u51b0 \u6559\u7236 \u300a\u9ed1\u5ba2\u5e1d\u56fd\u300b \u300a\u94f6\u7ffc\u6740\u624b\u300b \u300aV\u5b57\u4ec7\u6740\u961f\u300b \u300a\u7981\u95ed\u5c9b\u300b \u300a\u88ab\u89e3\u6551\u7684\u59dc\u6208\u300b \u300a\u963f\u51e1\u8fbe\u300b \u300a\u5927\u8bdd\u897f\u6e38\u300b \u300a\u5029\u5973\u5e7d\u9b42\u300b \u300a\u94a2\u94c1\u4fa0\u300b \u300a\u8774\u8776\u6548\u5e94\u300b \u300a\u81f4\u547d\u9b54\u672f\u300b \u300aSearching\u300b \u300aReplicas\u300b \u300a\u5eb7\u65af\u5766\u4e01\u300b \u300a\u4f0a\u5c3c\u820d\u6797\u7684\u62a5\u4e27\u5973\u5996\u300b\uff0c \u300a24\u5c0f\u65f6\u300b\u3001\u300a\u8d8a\u72f11\u300b Grey's Anatomy \u6700\u540e\u7684\u51b3\u6597 \u300a\u4f4e\u4fd7\u5c0f\u8bf4\u300b\u300a\u6740\u624b\u83b1\u6602\u300b\u300a\u71c3\u60c5\u5c81\u6708\u300b\u300a\u591c\u8bbf\u5438\u8840\u9b3c\u300b\u300a\u751f\u6b7b\u65f6\u901f\u300b\u300a\u7ea2\u767d\u84dd\u300b\u300a\u70c8\u65e5\u707c\u4eba\u300b\u300a\u66b4\u96e8\u5c06\u81f3\u300b\u300a\u827e\u5fb7\u4f0d\u5fb7\u300b \u5c18\u5c01\u6838\u7206 \u5b9e\u4e60\u533b\u751f\u98ce\u4e91 \u795e\u70e6\u8b66\u63a2 \u7845\u8c37 \u65e0\u7f6a\u4e4b\u6700 \u661f\u9645\u8ff7\u822a \u65e0\u95ee\u897f\u4e1c \u5e0c\u7279\u52d2 \u897f\u90e8\u4e16\u754c \u65b0\u95fb\u7f16\u8f91\u5ba4 \u6c5f\u6e56\u513f\u5973 \u661f\u9645\u7a7f\u8d8a \u50b2\u9aa8\u8d24\u59bb \u66b4\u541b \u9ed1\u955c \u91d1\u724c\u5f8b\u5e08 \u7f8e\u56fd\u4f17\u795e \u5173\u5c71\u98de\u6e21 \u7f8e\u4e3d\u5fc3\u7075\uff0c\u52c7\u6562\u7684\u5fc3\uff0c\u76d7\u68a6\u7a7a\u95f4\uff0c\u592a\u9633\u6cea\uff0c\u7b2c\u516d\u611f \u300aV\u5b57\u4ec7\u6740\u961f\u300b \u817e\u8baf\uff1a \u4f18\u9177\uff1a \u7ae5\u5e74\u7684\u8bb8\u8bfa \u8d85\u8131 \u6d77\u8fb9\u7684\u66fc\u5f7b\u65af\u7279 \u65af\u5927\u6797\u4e4b\u6b7b \u5362\u65fa\u8fbe\u996d\u5e97 \u6d6a\u4eba \u300a\u4e9a\u5386\u5c71\u5927\u300b\u548c\u300a\u4e09\u767e\u52c7\u58eb\u300b \u5929\u56fd\u738b\u671d \u4f7f\u5f92\u4fdd\u7f57 \u751f\u547d\u4e2d\u4e0d\u80fd\u627f\u53d7\u4e4b\u8f7b \u8747\u738b \u4ed6\u4eba\u7684\u751f\u6d3b \u91cd\u4efb\u5728\u80a9 \u706b\u7ebf \u75db\u82e6\u4e0e\u8363\u8000 \u6d6a\u6f6e \u5e0c\u7279\u52d2\u5f52\u6765 \u6d41\u6d6a\u5730\u7403 \u98ce\u7b5d \u5730\u4e45\u5929\u957f \u300a\u5144\u5f1f\u300b\u300a\u5f92\u624b\u6500\u5ca9\u300b\u300a\u52c7\u58eb\u300b \u300a\u6885\u9c81\u5cf0MERU\u300b 1\u3001\u522b\u544a\u8bc9\u5979 2\u3001\u7231\u5c14\u5170\u4eba 3\u30011917 4\u3001\u5a5a\u59fb\u6545\u4e8b 5\u3001\u5229\u5203\u51fa\u9798 7\u3001\u5c0f\u4e11 9\u3001\u4f60\u731c[/cp] [cp]\u3010\u963f\u5a46\u540d\u8457\u6539\u7f16BBC\u8ff7\u4f60\u5267\u300a\u767d\u9a6c\u9152\u5e97\u300b\u5b9a\u68632\u67089\u65e5\u3011\u300a\u9ad8\u5821\u5947\u4eba\u300b\u5362\u592b\u65af\u00b7\u585e\u7ef4\u5c14\u3001\u300a\u76ae\u56ca\u300b\u5361\u96c5\u00b7\u65af\u8003\u8fbe\u91cc\u5965\u3001\u300a\u798f\u65af\u7279\u533b\u751f\u300b\u535a\u8fea\u00b7\u5361\u7ef4\u5c14\u3001\u300a\u54e5\u8c2d\u300b\u897f\u6069\u00b7\u5e15\u7279\u7ef4\u3001\u300a\u6740\u6b7b\u4f0a\u8299\u300b\u4ea8\u5229\u00b7\u52b3\u57c3\u5fb7-\u4f11\u65af\u4e3b\u6f14\uff0c\u963f\u52a0\u838e\u00b7\u514b\u91cc\u65af\u8482\u540c\u540d\u539f\u8457\u6539\u7f16\uff0cBBC\u7248\u300a\u65e0\u4eba\u751f\u8fd8\u300b\u300a\u65e0\u5984\u4e4b\u707e\u300b\u300aABC\u8c0b\u6740\u6848\u300b\u7f16\u5267\u838e\u62c9\u00b7\u83f2\u5c14\u666e\u65af\u6267\u7b14\uff0c\u8bb2\u8ff0\u6b7b\u53bb\u7684\u6234\u7ef4\u65af\u592b\u4eba\u7684\u978b\u5b50\u91cc\u53d1\u73b0\u4e86\u4e00\u4e32\u795e\u79d8\u540d\u5355\uff0c\u540d\u5355\u4e0a\u7684\u4eba\u9664Mark Easterbrook\u4e4b\u5916\u5df2\u7ecf\u5168\u90e8\u81ea\u7136\u6b7b\u4ea1\uff0cMark\u51b3\u5b9a\u641e\u6e05\u695a\u662f\u600e\u4e48\u56de\u4e8b\uff0c\u91cd\u91cd\u7ebf\u7d22\u6307\u5411\u4e86\u201c\u767d\u9a6c\u9152\u5e97\u201d\uff0c\u4f20\u8bf4\u90a3\u91cc\u6709\u4e09\u4f4d\u7cbe\u901a\u9ed1\u9b54\u6cd5\u7684\u5973\u5deb\u2026\u672c\u5267\u51712\u96c6\uff0c\u6bcf\u96c6\u4e00\u5c0f\u65f6\uff0c2\u67089\u65e5BBC One\u64ad\u51fa\uff01\u671f\u5f85\uff01 http://t.cn/A6P5Mfil[/cp] [cp]2019\u5e74\u6211\u770b\u8fc7\u7684\u6700\u559c\u6b22\u7684\u7535\u5f71\uff1a \u300aJonh Wick : \u75be\u901f\u5907\u6218\u300b\u8fd9\u4e2a\u7cfb\u5217\u592a\u5e05\u4e86 \u300a\u7eff\u76ae\u4e66\u300b\u548c\u300a\u5bc4\u751f\u866b\u300b\u6df1\u523b\u7684\u793e\u4f1a\u9636\u5c42 \u300a\u770b\u4e0d\u89c1\u7684\u5ba2\u4eba\u300b\u548c\u300a\u6d77\u5e02\u8703\u697c\u300b\u897f\u73ed\u7259\u60ac\u7591\u7247 \u300a\u5229\u5203\u51fa\u9798\u300b\u590d\u53e4\u4fa6\u63a2\u7247 \u300a\u590d\u4ec7\u8005\u8054\u76df\u300b\u5341\u5e74\u6f2b\u5a01\u7ed3\u5c40 \u300a\u963f\u4e3d\u5854\u300b\u5927\u773c\u5973 \u4e0b\u9762\u8fd9\u51e0\u90e8\u53e3\u724c\u5f88\u597d\u7684\uff0c\u4f46\u6211\u4e0d\u662f\u5f88\u559c\u6b22\uff1a \u300a\u5c0f\u4e11\u300b- \u6f14\u6280\u867d\u597d\uff0c\u4f46\u662f\u5c31\u662f\u4e0d\u559c\u6b22 \u300a\u661f\u9645\u6551\u63f4\u300b- \u4e3b\u9898\u5f88\u597d\uff0c\u4f46\u5c31\u662f\u592a\u6c89\u95f7\u4e86 \u300a\u7231\u5c14\u5170\u4eba\u300b- \u4fe1\u606f\u91cf\u592a\u5927\u4e86\uff0c\u5f71\u7247\u592a\u957f\u4e863\u4e2a\u5c0f\u65f6\uff0c \u300a\u597d\u83b1\u575e\u5f80\u4e8b\u300b- \u770b\u4e0d\u61c2\uff0c\u4e0d\u662f\u7f8e\u56fd\u4eba\u4e0d\u77e5\u9053\u90a3\u6bb5\u65f6\u95f4\u7684\u6587\u5316[/cp] \u5267\u60c5\u7c7b\u6700\u4f73\u5f71\u7247\uff1a \u300a\u7231\u5c14\u5170\u4eba\u300b \u300a1917\u300b \u300a\u5c0f\u4e11\u300b \u300a\u5a5a\u59fb\u6545\u4e8b\u300b \u300a\u6559\u5b97\u7684\u627f\u7ee7\u300b \u97f3\u4e50\u559c\u5267\u7c7b\u6700\u4f73\u5f71\u7247\uff1a \u300a\u597d\u83b1\u575e\u5f80\u4e8b\u300b \u300a\u706b\u7bad\u4eba\u300b \u300a\u6211\u53eb\u591a\u9ea6\u7279\u300b \u300a\u4e54\u4e54\u5154\u300b \u300a\u5229\u5203\u51fa\u9798\u300b \u6700\u4f73\u5bfc\u6f14\uff1a \u300a\u7231\u5c14\u5170\u4eba\u300b\u9a6c\u4e01\u00b7\u65af\u79d1\u585e\u65af \u300a\u5bc4\u751f\u866b\u300b\u5949\u4fca\u660a \u300a1917\u300b\u8428\u59c6\u00b7\u95e8\u5fb7\u65af \u300a\u597d\u83b1\u575e\u5f80\u4e8b\u300b\u6606\u6c40\u00b7\u5854\u4f26\u8482\u8bfa \u300a\u5c0f\u4e11\u300b\u6258\u5fb7\u00b7\u83f2\u5229\u666e\u65af \u5267\u60c5\u7c7b\u7535\u5f71\u6700\u4f73\u7537\u4e3b\uff1a \u534e\u91d1\u00b7\u83f2\u5c3c\u514b\u65af\u300a\u5c0f\u4e11\u300b \u4e54\u7eb3\u68ee\u00b7\u666e\u96f7\u65af\u300a\u6559\u5b97\u7684\u627f\u7ee7\u300b \u514b\u91cc\u65af\u8482\u5b89\u00b7\u8d1d\u5c14\u300a\u6781\u901f\u8f66\u738b\u300b \u5b89\u4e1c\u5c3c\u5965\u00b7\u73ed\u5fb7\u62c9\u65af\u300a\u75db\u82e6\u4e0e\u8363\u8000\u300b \u4e9a\u5f53\u00b7\u5d14\u5f17\u300a\u5a5a\u59fb\u6545\u4e8b\u300b \u5267\u60c5\u7c7b\u7535\u5f71\u6700\u4f73\u5973\u4e3b\uff1a \u897f\u5c14\u838e\u00b7\u7f57\u5357\u300a\u5c0f\u5987\u4eba\u300b \u67e5\u7406\u5179\u00b7\u585e\u9686\u300a\u7206\u70b8\u65b0\u95fb\u300b \u857e\u59ae\u00b7\u9f50\u8587\u683c\u300a\u6731\u8fea\u300b \u8f9b\u897f\u5a05\u00b7\u827e\u8389\u4f5b\u300a\u54c8\u4e3d\u7279\u300b \u65af\u5609\u4e3d\u00b7\u7ea6\u7ff0\u900a\u300a\u5a5a\u59fb\u6545\u4e8b\u300b \u97f3\u4e50\u559c\u5267\u7c7b\u7535\u5f71\u6700\u4f73\u7537\u4e3b\uff1a \u5854\u4f26\u00b7\u57c3\u683c\u987f\u300a\u706b\u7bad\u4eba\u300b \u827e\u8fea\u00b7\u58a8\u83f2\u300a\u6211\u53eb\u591a\u9ea6\u7279\u300b \u4e39\u5c3c\u5c14\u00b7\u514b\u96f7\u683c\u300a\u5229\u5203\u51fa\u9798\u300b \u7f57\u66fc\u00b7\u683c\u91cc\u82ac\u00b7\u6234\u7ef4\u65af\u300a\u4e54\u4e54\u5154\u300b \u83b1\u6602\u7eb3\u591a\u00b7\u8fea\u5361\u666e\u91cc\u5965\u300a\u597d\u83b1\u575e\u5f80\u4e8b\u300b \u97f3\u4e50\u559c\u5267\u7c7b\u7535\u5f71\u6700\u4f73\u5973\u4e3b\uff1a \u827e\u739b\u00b7\u6c64\u666e\u68ee\u300a\u6df1\u591c\u79c0\u300b \u51ef\u7279\u00b7\u5e03\u5170\u5207\u7279\u300a\u4f2f\u7eb3\u9edb\u7279\u4f60\u53bb\u4e86\u54ea\u300b \u5965\u5361\u83f2\u5a1c\u300a\u522b\u544a\u8bc9\u5979\u300b \u5b89\u5a1c\u00b7\u5fb7\u00b7\u963f\u739b\u65af\u300a\u5229\u5203\u51fa\u9798\u300b \u6bd4\u59ae\u00b7\u8d39\u5c14\u5fb7\u65af\u5766\u300a\u9ad8\u6750\u751f\u300b \u6700\u4f73\u7537\u914d\uff1a \u6c64\u59c6\u00b7\u6c49\u514b\u65af\u300a\u90bb\u91cc\u7f8e\u597d\u7684\u4e00\u5929\u300b \u5b89\u4e1c\u5c3c\u00b7\u970d\u666e\u91d1\u65af\u300a\u6559\u5b97\u7684\u627f\u7ee7\u300b \u963f\u5c14\u00b7\u5e15\u897f\u8bfa\u300a\u7231\u5c14\u5170\u4eba\u300b \u4e54\u00b7\u4f69\u897f\u300a\u7231\u5c14\u5170\u4eba\u300b \u5e03\u62c9\u5fb7\u00b7\u76ae\u7279\u300a\u597d\u83b1\u575e\u5f80\u4e8b\u300b \u6700\u4f73\u5973\u914d\uff1a \u5b89\u59ae\u7279\u00b7\u8d1d\u5b81\u300a\u9177\u5211\u62a5\u544a\u300b \u739b\u683c\u7279\u00b7\u7f57\u6bd4\u300a\u6027\u611f\u70b8\u5f39\u300b \u8a79\u5c3c\u5f17\u00b7\u6d1b\u4f69\u5179\u300a\u821e\u5973\u5927\u76d7\u300b \u51ef\u897f\u00b7\u8d1d\u8328\u300a\u7406\u67e5\u5fb7\u00b7\u6731\u7ef4\u5c14\u7684\u54c0\u6b4c\u300b \u52b3\u62c9\u00b7\u9093\u6069\u300a\u5a5a\u59fb\u6545\u4e8b\u300b \u6700\u4f73\u5916\u8bed\u7247\uff1a \u300a\u522b\u544a\u8bc9\u5979\u300b \u300a\u75db\u82e6\u4e0e\u8363\u8000\u300b \u300a\u5bc4\u751f\u866b\u300b \u300a\u60b2\u60e8\u4e16\u754c\u300b \u300a\u71c3\u70e7\u5973\u5b50\u7684\u8096\u50cf\u300b \u6700\u4f73\u52a8\u753b\uff1a \u300a\u51b0\u96ea\u5947\u7f182\u300b \u300a\u72ee\u5b50\u738b\u300b \u300a\u9057\u5931\u7684\u73af\u8282\u300b \u300a\u73a9\u5177\u603b\u52a8\u54584\u300b \u300a\u9a6f\u9f99\u9ad8\u624b3\u300b \u6700\u4f73\u5267\u672c\uff1a \u300a\u7231\u5c14\u5170\u4eba\u300b \u300a\u5a5a\u59fb\u6545\u4e8b\u300b \u300a\u5bc4\u751f\u866b\u300b \u300a\u6559\u5b97\u7684\u627f\u7ee7\u300b \u300a\u597d\u83b1\u575e\u5f80\u4e8b\u300b \u6700\u4f73\u914d\u4e50\uff1a \u300a1917\u300b \u300a\u5a5a\u59fb\u6545\u4e8b\u300b \u300a\u5e03\u9c81\u514b\u6797\u5b64\u513f\u300b \u300a\u5c0f\u5987\u4eba\u300b \u300a\u5c0f\u4e11\u300b \u6700\u4f73\u6b4c\u66f2 Stand Up\u300a\u54c8\u4e3d\u7279\u300b Beautiful Ghosts\u300a\u732b\u300b I'm Gonna Love Me Again\u300a\u706b\u7bad\u4eba\u300b Into the Unknown\u300a\u51b0\u96ea\u5947\u7f182\u300b Spirit\u300a\u72ee\u5b50\u738b\u300b[/cp] [cp]#\u73af\u7403\u89c1\u95fb# #\u661f\u95fb\u524d\u7ebf# 2019\u5e74\u6700\u68d2\u7684\u4e5d\u90e8\u7535\u5f71\uff1a\u300a\u5bc4\u751f\u866b\u300b\u3001\u300a1917\u300b\u3001\u300a\u6781\u901f\u8f66\u738b\u300b\u3001\u300a\u7231\u5c14\u5170\u4eba\u300b\u3001\u300a\u4e54\u4e54\u7684\u5f02\u60f3\u4e16\u754c\u300b\u3001\u300a\u5c0f\u4e11\u300b\u3001\u300a\u5c0f\u5987\u4eba\u300b\u3001\u300a\u5a5a\u59fb\u6545\u4e8b\u300b\u3001\u300a\u597d\u83b1\u575e\u5f80\u4e8b\u300b \u7b2c92\u5c4a\u5965\u65af\u5361\u6700\u4f73\u5f71\u7247\u5165\u56f4\u6df7\u526a\uff0c\u6bcf\u4e00\u5e27\u90fd\u503c\u5f97\u56de\u5473\uff01 @\u4eba\u4eba\u89c6\u9891 http://t.cn/A6hb1gHa [/cp] \u864e\u53e3\u8131\u9669\uff08\u666e\u901a\u8bdd\u914d\u97f3\u7248\uff09 \u58ee\u5fd7\u51cc\u4e91 \u52c7\u6562\u7684\u5fc3 \u7f8e\u56fd\u5f80\u4e8b \u751f\u6b7b\u65f6\u901f \u96f7\u9706\u6551\u5175 \u77f3\u7834\u5929\u60ca \u593a\u5b9d\u5947\u5175 \u864e\u80c6\u9f99\u5a01 \u76d7\u706b\u7ebf \u7f8e\u5267 \u300a\u730e\u9b54\u4eba\u300b \u661f\u9645\u8ff7\u822a \u5e7f\u544a\u72c2\u4eba \u7eb8\u724c\u5c4b \u5927\u897f\u6d0b\u5e1d\u56fd \u9a6c\u7537\u6ce2\u6770\u514b \u9ed1\u540d\u5355 \u300a\u6469\u767b\u5bb6\u5ead\u300b \u57fa\u672c\u6f14\u7ece\u6cd5 \u4f0a\u5c3c\u820d\u6797\u7684\u62a5\u4e27\u5973\u5996 2.\u300a\u81f4\u547d\u5973\u4eba\u300b 3.\u300a\u66fc\u8fbe\u6d1b\u4eba\u300b 5.\u300a\u96be\u4ee5\u7f6e\u4fe1\u300b 6.\u300a\u771f\u76f8\u6355\u6349\u300b 7.\u300a\u6469\u767b\u60c5\u7231\u300b 8.\u300a\u597d\u5146\u5934\u300b 9.\u300a\u9ed1\u888d\u7ea0\u5bdf\u961f\u300b 10. \u300a\u516c\u5173\u300b","title":"\u7535\u5f71"},{"location":"save/%E7%BD%91%E7%BB%9C/","text":"\u7ffb\u5899 https://x.com/geekbb/status/1768886427415425177 https://github.com/cmliu/edgetunnel https://github.com/yuchanns/warpflare https://github.com/vvbbnn00/WARP-Clash-API https://x.com/igeekbb/status/1785206421296144883 https://github.com/Alvin9999/new-pac/ v2ray https://www.v2ray.com/chapter_02/03_routing.html \u5185\u7f51\u7a7f\u900f https://x.com/xqliu/status/1782602668885811402 https://x.com/lxfater/status/1782584526851785027 https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/ https://try.cloudflare.com/ https://github.com/jeessy2/ddns-go","title":"\u7f51\u7edc"},{"location":"save/%E7%BD%91%E7%BB%9C/#_1","text":"https://x.com/geekbb/status/1768886427415425177 https://github.com/cmliu/edgetunnel https://github.com/yuchanns/warpflare https://github.com/vvbbnn00/WARP-Clash-API https://x.com/igeekbb/status/1785206421296144883 https://github.com/Alvin9999/new-pac/","title":"\u7ffb\u5899"},{"location":"save/%E7%BD%91%E7%BB%9C/#v2ray","text":"https://www.v2ray.com/chapter_02/03_routing.html","title":"v2ray"},{"location":"save/%E7%BD%91%E7%BB%9C/#_2","text":"https://x.com/xqliu/status/1782602668885811402 https://x.com/lxfater/status/1782584526851785027 https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/ https://try.cloudflare.com/ https://github.com/jeessy2/ddns-go","title":"\u5185\u7f51\u7a7f\u900f"},{"location":"web/css/","text":"shape div { width: 100px; height: 100px; background: conic-gradient( hsl(360 100% 50%), hsl(315 100% 50%), hsl(270 100% 50%), hsl(225 100% 50%), hsl(180 100% 50%), hsl(135 100% 50%), hsl(90 100% 50%), hsl(45 100% 50%), hsl(0 100% 50%) ); clip-path: circle(closest-side); } center button { display: grid; place-items: center; } box-sizing box-sizing: border-box | content-box; gap display: flex; gap: 1rem; margin-block margin-block-start: 20px; margin-block-end: 20px; aspect-ratio aspect-ratio: 1 / 1; object-fit The object-fit CSS property sets how the content of a replaced element, such as an or , should be resized to fit its container. object-position The object-position CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background. CSS box model https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model shape-outside The shape-outside CSS property defines a shape\u2014which may be non-rectangular\u2014around which adjacent inline content should wrap. By default, inline content wraps around its margin box; shape-outside provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than simple boxes. resize set element resizeble resize: both; clip background-clip overflow-clip-margin text text direction writing-mode: vertical-rl; text capital text-transform: uppercase; text wrap white-space: nowrap; overflow: hidden; text-overflow: ellipsis; ## line-height ```css line-height: 1.2; grid https://developer.chrome.com/docs/devtools/css/grid table border-collapse border-spacing query @supports /* https://webkit.org/blog/10042/wide-gamut-color-in-css-with-display-p3/ */ :root { --bright-green: rgb(0, 255, 0); } /* Display-P3 color, when supported. */ @supports (color: color(display-p3 1 1 1)) { :root { --bright-green: color(display-p3 0 1 0); } } animation offset: https://developer.mozilla.org/en-US/docs/Web/CSS/offset function https://developer.mozilla.org/en-US/docs/Web/CSS/sin Reference CSS_flow_layout: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flow_layout The CSS Zen Garden: https://www.csszengarden.com/ An Interactive Guide to Flexbox: https://www.joshwcomeau.com/css/interactive-guide-to-flexbox/ CSS center: https://www.joshwcomeau.com/css/center-a-div/ Layout Algorithms: https://www.joshwcomeau.com/css/understanding-layout-algorithms/","title":"Css"},{"location":"web/css/#shape","text":"div { width: 100px; height: 100px; background: conic-gradient( hsl(360 100% 50%), hsl(315 100% 50%), hsl(270 100% 50%), hsl(225 100% 50%), hsl(180 100% 50%), hsl(135 100% 50%), hsl(90 100% 50%), hsl(45 100% 50%), hsl(0 100% 50%) ); clip-path: circle(closest-side); }","title":"shape"},{"location":"web/css/#center","text":"button { display: grid; place-items: center; }","title":"center"},{"location":"web/css/#box-sizing","text":"box-sizing: border-box | content-box;","title":"box-sizing"},{"location":"web/css/#gap","text":"display: flex; gap: 1rem;","title":"gap"},{"location":"web/css/#margin-block","text":"margin-block-start: 20px; margin-block-end: 20px;","title":"margin-block"},{"location":"web/css/#aspect-ratio","text":"aspect-ratio: 1 / 1;","title":"aspect-ratio"},{"location":"web/css/#object-fit","text":"The object-fit CSS property sets how the content of a replaced element, such as an or , should be resized to fit its container.","title":"object-fit"},{"location":"web/css/#object-position","text":"The object-position CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background.","title":"object-position"},{"location":"web/css/#css-box-model","text":"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model","title":"CSS box model"},{"location":"web/css/#shape-outside","text":"The shape-outside CSS property defines a shape\u2014which may be non-rectangular\u2014around which adjacent inline content should wrap. By default, inline content wraps around its margin box; shape-outside provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than simple boxes.","title":"shape-outside"},{"location":"web/css/#resize","text":"set element resizeble resize: both;","title":"resize"},{"location":"web/css/#clip","text":"background-clip overflow-clip-margin","title":"clip"},{"location":"web/css/#text","text":"text direction writing-mode: vertical-rl; text capital text-transform: uppercase; text wrap white-space: nowrap; overflow: hidden; text-overflow: ellipsis; ## line-height ```css line-height: 1.2;","title":"text"},{"location":"web/css/#grid","text":"https://developer.chrome.com/docs/devtools/css/grid","title":"grid"},{"location":"web/css/#table","text":"border-collapse border-spacing","title":"table"},{"location":"web/css/#query","text":"@supports /* https://webkit.org/blog/10042/wide-gamut-color-in-css-with-display-p3/ */ :root { --bright-green: rgb(0, 255, 0); } /* Display-P3 color, when supported. */ @supports (color: color(display-p3 1 1 1)) { :root { --bright-green: color(display-p3 0 1 0); } }","title":"query"},{"location":"web/css/#animation","text":"offset: https://developer.mozilla.org/en-US/docs/Web/CSS/offset","title":"animation"},{"location":"web/css/#function","text":"https://developer.mozilla.org/en-US/docs/Web/CSS/sin","title":"function"},{"location":"web/css/#reference","text":"CSS_flow_layout: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flow_layout The CSS Zen Garden: https://www.csszengarden.com/ An Interactive Guide to Flexbox: https://www.joshwcomeau.com/css/interactive-guide-to-flexbox/ CSS center: https://www.joshwcomeau.com/css/center-a-div/ Layout Algorithms: https://www.joshwcomeau.com/css/understanding-layout-algorithms/","title":"Reference"},{"location":"web/javascript/","text":"Guide https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide coordinate and size getBoundingClientRect offsetHeight: https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight clientHeight: https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight window.innerHeight and window.outerHeight IntersectionObserver useEffect(() => { const div = ref.current; const observer = new IntersectionObserver(entries => { const entry = entries[0]; if (entry.isIntersecting) { document.body.style.backgroundColor = 'black'; document.body.style.color = 'white'; } else { document.body.style.backgroundColor = 'white'; document.body.style.color = 'black'; } }, { threshold: 1.0 }); observer.observe(div); return () => { observer.disconnect(); } }, []); scroll scrollHeight: element.scrollTop / window.scrollY: element.scrollHeight = element.clientHeight + element.scrollTop scrollTop is a non-rounded number, while scrollHeight and clientHeight are rounded \u2014 so the only way to determine if the scroll area is scrolled to the bottom is by seeing if the scroll amount is close enough to some threshold (in this example 1): Math.abs(element.scrollHeight - element.clientHeight - element.scrollTop) <= 1; scrollBy(): https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollBy The scrollBy() method scrolls the document in the window by the given amount. element.scrollBy({ top: 100, left: 100, behavior: \"smooth\", }); scrollTo(): https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo scrollTo() scrolls to a particular set of coordinates in the document. element.scrollTo({ top: 100, left: 100, behavior: \"smooth\", }); scrollIntoView: https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView The Element interface's scrollIntoView() method scrolls the element's ancestor containers such that the element on which scrollIntoView() is called is visible to the user. const imgNode = listNode.querySelectorAll('li > img')[index]; imgNode.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' }); resize resizeTo resizeBy ResizeObserver const parentBox = document.querySelector('[data-element=\"parent-box\"]'); const heightLabel = document.querySelector('[data-element=\"height-label\"]'); const widthLabel = document.querySelector('[data-element=\"width-label\"]'); // Update the size labels on resize const observer = new ResizeObserver((observedItems) => { const { borderBoxSize } = observedItems[0]; widthLabel.innerText = `${Math.round(borderBoxSize[0].inlineSize)}px`; heightLabel.innerText = `${Math.round(borderBoxSize[0].blockSize)}px`; }); observer.observe(parentBox); modify insertBefore appendChild removeChild content innerHTML outerHTML textContent formData const formData = new FormData(e.target); const orderDetails = { ...Object.fromEntries(formData), count, }; time performance.now() Date.now() animation requestAnimationFrame KeyframeEffect : https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect Element: animate() : https://developer.mozilla.org/en-US/docs/Web/API/Element/animate Object.is \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e00\u6837 Regular expressions https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions Accessible Rich Internet Applications(ARIA) https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA events https://developer.mozilla.org/en-US/docs/Web/Events/Creating_and_triggering_events https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop Destructuring_assignment https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment Expression_statement https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Expression_statement Iteration_protocols https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols Object_initializer https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer","title":"Javascript"},{"location":"web/javascript/#guide","text":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide","title":"Guide"},{"location":"web/javascript/#coordinate-and-size","text":"getBoundingClientRect offsetHeight: https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight clientHeight: https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight window.innerHeight and window.outerHeight IntersectionObserver useEffect(() => { const div = ref.current; const observer = new IntersectionObserver(entries => { const entry = entries[0]; if (entry.isIntersecting) { document.body.style.backgroundColor = 'black'; document.body.style.color = 'white'; } else { document.body.style.backgroundColor = 'white'; document.body.style.color = 'black'; } }, { threshold: 1.0 }); observer.observe(div); return () => { observer.disconnect(); } }, []);","title":"coordinate and size"},{"location":"web/javascript/#scroll","text":"scrollHeight: element.scrollTop / window.scrollY: element.scrollHeight = element.clientHeight + element.scrollTop scrollTop is a non-rounded number, while scrollHeight and clientHeight are rounded \u2014 so the only way to determine if the scroll area is scrolled to the bottom is by seeing if the scroll amount is close enough to some threshold (in this example 1): Math.abs(element.scrollHeight - element.clientHeight - element.scrollTop) <= 1; scrollBy(): https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollBy The scrollBy() method scrolls the document in the window by the given amount. element.scrollBy({ top: 100, left: 100, behavior: \"smooth\", }); scrollTo(): https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo scrollTo() scrolls to a particular set of coordinates in the document. element.scrollTo({ top: 100, left: 100, behavior: \"smooth\", }); scrollIntoView: https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView The Element interface's scrollIntoView() method scrolls the element's ancestor containers such that the element on which scrollIntoView() is called is visible to the user. const imgNode = listNode.querySelectorAll('li > img')[index]; imgNode.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });","title":"scroll"},{"location":"web/javascript/#resize","text":"resizeTo resizeBy ResizeObserver const parentBox = document.querySelector('[data-element=\"parent-box\"]'); const heightLabel = document.querySelector('[data-element=\"height-label\"]'); const widthLabel = document.querySelector('[data-element=\"width-label\"]'); // Update the size labels on resize const observer = new ResizeObserver((observedItems) => { const { borderBoxSize } = observedItems[0]; widthLabel.innerText = `${Math.round(borderBoxSize[0].inlineSize)}px`; heightLabel.innerText = `${Math.round(borderBoxSize[0].blockSize)}px`; }); observer.observe(parentBox);","title":"resize"},{"location":"web/javascript/#modify","text":"insertBefore appendChild removeChild","title":"modify"},{"location":"web/javascript/#content","text":"innerHTML outerHTML textContent","title":"content"},{"location":"web/javascript/#formdata","text":"const formData = new FormData(e.target); const orderDetails = { ...Object.fromEntries(formData), count, };","title":"formData"},{"location":"web/javascript/#time","text":"performance.now() Date.now()","title":"time"},{"location":"web/javascript/#animation","text":"requestAnimationFrame KeyframeEffect : https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect Element: animate() : https://developer.mozilla.org/en-US/docs/Web/API/Element/animate","title":"animation"},{"location":"web/javascript/#objectis","text":"\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e00\u6837","title":"Object.is"},{"location":"web/javascript/#regular-expressions","text":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions","title":"Regular expressions"},{"location":"web/javascript/#accessible-rich-internet-applicationsaria","text":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA","title":"Accessible Rich Internet Applications(ARIA)"},{"location":"web/javascript/#events","text":"https://developer.mozilla.org/en-US/docs/Web/Events/Creating_and_triggering_events https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop","title":"events"},{"location":"web/javascript/#destructuring_assignment","text":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment","title":"Destructuring_assignment"},{"location":"web/javascript/#expression_statement","text":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Expression_statement","title":"Expression_statement"},{"location":"web/javascript/#iteration_protocols","text":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols","title":"Iteration_protocols"},{"location":"web/javascript/#object_initializer","text":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer","title":"Object_initializer"},{"location":"web/node/","text":"introduction-to-nodejs https://nodejs.org/en/learn/getting-started/introduction-to-nodejs","title":"Node"},{"location":"web/node/#introduction-to-nodejs","text":"https://nodejs.org/en/learn/getting-started/introduction-to-nodejs","title":"introduction-to-nodejs"},{"location":"web/open-package/","text":"\u5b57\u5e55+\u89c6\u9891\u64ad\u653e DashPlayer \u7684\u76ee\u6807\u5c31\u662f\u65b9\u4fbf\u4f60\u89c2\u770b\u82f1\u6587\u89c6\u9891\uff1a https://github.com/solidSpoon/DashPlayer https://github.com/Hiram-Wong/ZyPlayer UI widget https://www.radix-ui.com/ https://tailwindui.com/ https://ui.shadcn.com/ https://www.tailwindawesome.com/ floating-ui https://floating-ui.com https://github.com/floating-ui/floating-ui Animation react-spring: https://www.react-spring.dev/ GSAP: https://gsap.com/ Motion One\uff1ahttps://motion.dev Popmotion\uff1ahttps://popmotion.io https://www.framer.com/motion drag-drop drag-and-drop: https://github.com/atlassian/pragmatic-drag-and-drop react-draggable: https://github.com/react-grid-layout/react-draggable use-gesture : https://github.com/pmndrs/use-gesture Virtualization Virtualization lets you render thousands of items performantly. virtual: https://tanstack.com/virtual/latest workflow reactflow: https://reactflow.dev tradingview https://www.tradingview.com/lightweight-charts/ https://github.com/tradingview https://github.com/tradingview/lightweight-charts https://github.com/tradingview/charting-library-examples shared data \u591a\u4eba\u540c\u6b65\u5c55\u793a: https://github.com/yjs/yjs date format https://date-fns.org/docs/format","title":"Open package"},{"location":"web/open-package/#_1","text":"DashPlayer \u7684\u76ee\u6807\u5c31\u662f\u65b9\u4fbf\u4f60\u89c2\u770b\u82f1\u6587\u89c6\u9891\uff1a https://github.com/solidSpoon/DashPlayer https://github.com/Hiram-Wong/ZyPlayer","title":"\u5b57\u5e55+\u89c6\u9891\u64ad\u653e"},{"location":"web/open-package/#ui-widget","text":"https://www.radix-ui.com/ https://tailwindui.com/ https://ui.shadcn.com/ https://www.tailwindawesome.com/","title":"UI widget"},{"location":"web/open-package/#floating-ui","text":"https://floating-ui.com https://github.com/floating-ui/floating-ui","title":"floating-ui"},{"location":"web/open-package/#animation","text":"react-spring: https://www.react-spring.dev/ GSAP: https://gsap.com/ Motion One\uff1ahttps://motion.dev Popmotion\uff1ahttps://popmotion.io https://www.framer.com/motion","title":"Animation"},{"location":"web/open-package/#drag-drop","text":"drag-and-drop: https://github.com/atlassian/pragmatic-drag-and-drop react-draggable: https://github.com/react-grid-layout/react-draggable use-gesture : https://github.com/pmndrs/use-gesture","title":"drag-drop"},{"location":"web/open-package/#virtualization","text":"Virtualization lets you render thousands of items performantly. virtual: https://tanstack.com/virtual/latest","title":"Virtualization"},{"location":"web/open-package/#workflow","text":"reactflow: https://reactflow.dev","title":"workflow"},{"location":"web/open-package/#tradingview","text":"https://www.tradingview.com/lightweight-charts/ https://github.com/tradingview https://github.com/tradingview/lightweight-charts https://github.com/tradingview/charting-library-examples","title":"tradingview"},{"location":"web/open-package/#shared-data","text":"\u591a\u4eba\u540c\u6b65\u5c55\u793a: https://github.com/yjs/yjs","title":"shared data"},{"location":"web/open-package/#date-format","text":"https://date-fns.org/docs/format","title":"date format"},{"location":"web/open-project/","text":"50projects50days \u300a50\u592950\u4e2a\u9879\u76ee\u300b\u662f\u4e00\u4e2a\u5e2e\u52a9\u5f00\u53d1\u8005\u901a\u8fc7\u5b9e\u8df5\u5b66\u4e60 Web \u5f00\u53d1\u7684\u8bfe\u7a0b\uff0c\u5305\u542b\u4e8650\u4e2a\u4f7f\u7528 HTML\u3001CSS\u548cJavaScript \u5236\u4f5c\u7684\u5c0f\u578b Web \u9879\u76ee\uff0c\u62e5\u6709\u8d85\u8fc734.1k Star https://github.com/bradtraversy/50projects50days workflow https://app.mlblocks.com/mlflow?graphid=dTRspzXnPUCmai6UXAQ6 UI \u7814\u7a76\u4e86 Runtipi \u7684 App Store\u5217\u8868 https://github.com/runtipi/runtipi-appstore \u53c8\u88c5\u4e86\u51e0\u4e2a\u5e38\u7528\u7684\u8f6f\u4ef6\uff0c\u53d1\u73b0\u4ee5\u53ca\u8bd5\u7528\u4e0d\u540c\u7684\u5f00\u6e90\u8f6f\u4ef6\u4e5f\u662f\u4e00\u5927\u4e50\u8da3\uff1a Actual\uff1a https://github.com/actualbudget/actual \u4e2a\u4eba\u8bb0\u8d26\u7ba1\u7406\uff0clocal first\uff0c\u4e00\u76f4\u6ca1\u517b\u6210\u8fd9\u4e2a\u4e60\u60ef\uff0c\u8fd9\u6b21\u88c5\u6765\u73a9\u73a9\u3002 Cloudflared-web\uff1a https://github.com/WisdomSky/Cloudflared-web \u4f7f\u7528 Web \u754c\u9762\u63a7\u5236 Cloudflare Tunnel\uff0c\u6bd4\u8f83\u65b9\u4fbf\u3002 Deluge\uff1a https://github.com/linuxserver/docker-deluge \u8f7b\u91cf\u7ea7 BT \u4e0b\u8f7d\uff0c\u6ca1\u4e8b\u5e72\u8bd5\u8bd5\u770b\u6548\u679c\u600e\u4e48\u6837 Immich https://github.com/immich-app/immich \u4e4b\u524d\u63a8\u8350\u8fc7\u7684\u76f8\u7247\u7ba1\u7406\u5907\u4efd\u5de5\u5177\uff0c\u88c5\u4e00\u4e2a\u591a\u5907\u4efd\u4e00\u4efd LinkWarden https://github.com/linkwarden/linkwarden \u597d\u4e1c\u897f\u554a\uff0c\u6536\u85cf\u5939\u7ba1\u7406\uff0c\u6bd4\u6d4f\u89c8\u5668\u81ea\u5e26\u7684\u6536\u85cf\u5939\u597d\u7528\u591a\u4e86 Jellyfin\uff1a https://github.com/jellyfin/jellyfin \u5927\u5bb6\u90fd\u719f\u77e5\u7684\u5a92\u4f53\u7ba1\u7406\u5de5\u5177\uff0c\u5c31\u4e0d\u591a\u8bf4\u4e86 DashPress\uff08\u56fe\u4e00\uff09\uff1a\u53ea\u8981\u4e00\u6761\u547d\u4ee4\u884c\uff0c\u81ea\u52a8\u751f\u6210\u6570\u636e\u5e93\u7ba1\u7406\u540e\u53f0 https://github.com/dashpresshq/dashpress webos: https://casaos.io/ https://github.com/IceWhaleTech/CasaOS Todo list https://app.superlist.com/inbox","title":"Open project"},{"location":"web/open-project/#50projects50days","text":"\u300a50\u592950\u4e2a\u9879\u76ee\u300b\u662f\u4e00\u4e2a\u5e2e\u52a9\u5f00\u53d1\u8005\u901a\u8fc7\u5b9e\u8df5\u5b66\u4e60 Web \u5f00\u53d1\u7684\u8bfe\u7a0b\uff0c\u5305\u542b\u4e8650\u4e2a\u4f7f\u7528 HTML\u3001CSS\u548cJavaScript \u5236\u4f5c\u7684\u5c0f\u578b Web \u9879\u76ee\uff0c\u62e5\u6709\u8d85\u8fc734.1k Star https://github.com/bradtraversy/50projects50days","title":"50projects50days"},{"location":"web/open-project/#workflow","text":"https://app.mlblocks.com/mlflow?graphid=dTRspzXnPUCmai6UXAQ6","title":"workflow"},{"location":"web/open-project/#ui","text":"\u7814\u7a76\u4e86 Runtipi \u7684 App Store\u5217\u8868 https://github.com/runtipi/runtipi-appstore \u53c8\u88c5\u4e86\u51e0\u4e2a\u5e38\u7528\u7684\u8f6f\u4ef6\uff0c\u53d1\u73b0\u4ee5\u53ca\u8bd5\u7528\u4e0d\u540c\u7684\u5f00\u6e90\u8f6f\u4ef6\u4e5f\u662f\u4e00\u5927\u4e50\u8da3\uff1a Actual\uff1a https://github.com/actualbudget/actual \u4e2a\u4eba\u8bb0\u8d26\u7ba1\u7406\uff0clocal first\uff0c\u4e00\u76f4\u6ca1\u517b\u6210\u8fd9\u4e2a\u4e60\u60ef\uff0c\u8fd9\u6b21\u88c5\u6765\u73a9\u73a9\u3002 Cloudflared-web\uff1a https://github.com/WisdomSky/Cloudflared-web \u4f7f\u7528 Web \u754c\u9762\u63a7\u5236 Cloudflare Tunnel\uff0c\u6bd4\u8f83\u65b9\u4fbf\u3002 Deluge\uff1a https://github.com/linuxserver/docker-deluge \u8f7b\u91cf\u7ea7 BT \u4e0b\u8f7d\uff0c\u6ca1\u4e8b\u5e72\u8bd5\u8bd5\u770b\u6548\u679c\u600e\u4e48\u6837 Immich https://github.com/immich-app/immich \u4e4b\u524d\u63a8\u8350\u8fc7\u7684\u76f8\u7247\u7ba1\u7406\u5907\u4efd\u5de5\u5177\uff0c\u88c5\u4e00\u4e2a\u591a\u5907\u4efd\u4e00\u4efd LinkWarden https://github.com/linkwarden/linkwarden \u597d\u4e1c\u897f\u554a\uff0c\u6536\u85cf\u5939\u7ba1\u7406\uff0c\u6bd4\u6d4f\u89c8\u5668\u81ea\u5e26\u7684\u6536\u85cf\u5939\u597d\u7528\u591a\u4e86 Jellyfin\uff1a https://github.com/jellyfin/jellyfin \u5927\u5bb6\u90fd\u719f\u77e5\u7684\u5a92\u4f53\u7ba1\u7406\u5de5\u5177\uff0c\u5c31\u4e0d\u591a\u8bf4\u4e86 DashPress\uff08\u56fe\u4e00\uff09\uff1a\u53ea\u8981\u4e00\u6761\u547d\u4ee4\u884c\uff0c\u81ea\u52a8\u751f\u6210\u6570\u636e\u5e93\u7ba1\u7406\u540e\u53f0 https://github.com/dashpresshq/dashpress webos: https://casaos.io/ https://github.com/IceWhaleTech/CasaOS","title":"UI"},{"location":"web/open-project/#todo-list","text":"https://app.superlist.com/inbox","title":"Todo list"},{"location":"web/react-events/","text":"Sure, here's the list of the most common React event types along with their related arguments and their types in TypeScript: Clipboard Events: onCopy: (event: React.ClipboardEvent<HTMLElement>) => void onCut: (event: React.ClipboardEvent<HTMLElement>) => void onPaste: (event: React.ClipboardEvent<HTMLElement>) => void Composition Events: onCompositionEnd: (event: React.CompositionEvent<HTMLElement>) => void onCompositionStart: (event: React.CompositionEvent<HTMLElement>) => void onCompositionUpdate: (event: React.CompositionEvent<HTMLElement>) => void Keyboard Events: onKeyDown: (event: React.KeyboardEvent<HTMLElement>) => void onKeyPress: (event: React.KeyboardEvent<HTMLElement>) => void onKeyUp: (event: React.KeyboardEvent<HTMLElement>) => void Focus Events: onFocus: (event: React.FocusEvent<HTMLElement>) => void onBlur: (event: React.FocusEvent<HTMLElement>) => void ```` Form Events: ```javascript onChange: (event: React.ChangeEvent<HTMLElement>) => void onInput: (event: React.FormEvent<HTMLElement>) => void onInvalid: (event: React.FormEvent<HTMLElement>) => void onReset: (event: React.FormEvent<HTMLElement>) => void onSubmit: (event: React.FormEvent<HTMLFormElement>) => void Generic Events: onError: (event: React.SyntheticEvent<HTMLElement, Event>) => void onLoad: (event: React.SyntheticEvent<HTMLElement, Event>) => void ```` Mouse Events: ```javascript onClick: (event: React.MouseEvent<HTMLElement>) => void onContextMenu: (event: React.MouseEvent<HTMLElement>) => void onDoubleClick: (event: React.MouseEvent<HTMLElement>) => void onDrag: (event: React.DragEvent<HTMLElement>) => void onDragEnd: (event: React.DragEvent<HTMLElement>) => void onDragEnter: (event: React.DragEvent<HTMLElement>) => void onDragExit: (event: React.DragEvent<HTMLElement>) => void onDragLeave: (event: React.DragEvent<HTMLElement>) => void onDragOver: (event: React.DragEvent<HTMLElement>) => void onDragStart: (event: React.DragEvent<HTMLElement>) => void onDrop: (event: React.DragEvent<HTMLElement>) => void onMouseDown: (event: React.MouseEvent<HTMLElement>) => void onMouseEnter: (event: React.MouseEvent<HTMLElement>) => void onMouseLeave: (event: React.MouseEvent<HTMLElement>) => void onMouseMove: (event: React.MouseEvent<HTMLElement>) => void onMouseOut: (event: React.MouseEvent<HTMLElement>) => void onMouseOver: (event: React.MouseEvent<HTMLElement>) => void onMouseUp: (event: React.MouseEvent<HTMLElement>) => void Pointer Events: onPointerDown: (event: React.PointerEvent<HTMLElement>) => void onPointerMove: (event: React.PointerEvent<HTMLElement>) => void onPointerUp: (event: React.PointerEvent<HTMLElement>) => void onPointerCancel: (event: React.PointerEvent<HTMLElement>) => void onGotPointerCapture: (event: React.PointerEvent<HTMLElement>) => void onLostPointerCapture: (event: React.PointerEvent<HTMLElement>) => void onPointerEnter: (event: React.PointerEvent<HTMLElement>) => void onPointerLeave: (event: React.PointerEvent<HTMLElement>) => void onPointerOver: (event: React.PointerEvent<HTMLElement>) => void onPointerOut: (event: React.PointerEvent<HTMLElement>) => void Selection Events: onSelect: (event: React.SyntheticEvent<HTMLElement>) => void Touch Events: onTouchCancel: (event: React.TouchEvent<HTMLElement>) => void onTouchEnd: (event: React.TouchEvent<HTMLElement>) => void onTouchMove: (event: React.TouchEvent<HTMLElement>) => void onTouchStart: (event: React.TouchEvent<HTMLElement>) => void UI Events: onScroll: (event: React.UIEvent<HTMLElement>) => void Wheel Events: onWheel: (event: React.WheelEvent<HTMLElement>) => void Media Events: onAbort: (event: React.SyntheticEvent<HTMLMediaElement>) => void onCanPlay: (event: React.SyntheticEvent<HTMLMediaElement>) => void onCanPlayThrough: (event: React.SyntheticEvent<HTMLMediaElement>) => void onDurationChange: (event: React.SyntheticEvent<HTMLMediaElement>) => void onEmptied: (event: React.SyntheticEvent<HTMLMediaElement>) => void onEncrypted: (event: React.SyntheticEvent<HTMLMediaElement>) => void onEnded: (event: React.SyntheticEvent<HTMLMediaElement>) => void onError: (event: React.SyntheticEvent<HTMLMediaElement>) => void onLoadedData: (event: React.SyntheticEvent<HTMLMediaElement>) => void onLoadedMetadata: (event: React.SyntheticEvent<HTMLMediaElement>) => void onLoadStart: (event: React.SyntheticEvent<HTMLMediaElement>) => void onPause: (event: React.SyntheticEvent<HTMLMediaElement>) => void onPlay: (event: React.SyntheticEvent<HTMLMediaElement>) => void onPlaying: (event: React.SyntheticEvent<HTMLMediaElement>) => void onProgress: (event: React.SyntheticEvent<HTMLMediaElement>) => void onRateChange: (event: React.SyntheticEvent<HTMLMediaElement>) => void onSeeked: (event: React.SyntheticEvent<HTMLMediaElement>) => void onSeeking: (event: React.SyntheticEvent<HTMLMediaElement>) => void onStalled: (event: React.SyntheticEvent<HTMLMediaElement>) => void onSuspend: (event: React.SyntheticEvent<HTMLMediaElement>) => void onTimeUpdate: (event: React.SyntheticEvent<HTMLMediaElement>) => void onVolumeChange: (event: React.SyntheticEvent<HTMLMediaElement>) => void onWaiting: (event: React.SyntheticEvent<HTMLMediaElement>) => void Please note that the type of the event argument in each event handler function may vary depending on the specific event type and the HTML element it's associated with. In the examples above, we've used the most common types provided by the React TypeScript definitions.","title":"React events"},{"location":"web/react/","text":"hook https://legacy.reactjs.org/docs/hooks-intro.html fully controlled and fully uncontrolled component. https://legacy.reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html useRef Refs let a component hold some information that isn\u2019t used for rendering, like a DOM node or a timeout ID. Unlike with state, updating a ref does not re-render your component Only run once at initial render, useEffect Run after browser repaint. useEffect : \u521d\u59cb\u5316\u7684\u65f6\u5019\u6267\u884c\u4e00\u6b21\uff0c\u6bcf\u5f53dependency\u53d8\u5316\u7684\u65f6\u5019\u6267\u884c\u4e00\u6b21\uff0cdependency=[]\u53ea\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u6267\u884c\u4e00\u6b21\uff0cno dependency \u6bcf\u6b21render\u7684\u65f6\u5019\u90fd\u4f1a\u6267\u884c\u3002 useLayoutEffect Run after render and before browser repaint. You can measure layout here. React guarantees that the code inside useLayoutEffect and any state updates scheduled inside it will be processed before the browser repaints the screen. This lets you render the tooltip, measure it, and re-render the tooltip again without the user noticing the first extra render. In other words, useLayoutEffect blocks the browser from painting. The purpose of useLayoutEffect is to let your component use layout information for rendering: Render the initial content. Measure the layout before the browser repaints the screen. Render the final content using the layout information you\u2019ve read. useInsertionEffect fires before React makes changes to the DOM. Libraries can insert dynamic CSS here. react-error-boundary https://github.com/bvaughn/react-error-boundary animation https://legacy.reactjs.org/docs/animation.html react router https://reactrouter.com/en/main https://v5.reactrouter.com/web/guides/server-rendering","title":"React"},{"location":"web/react/#hook","text":"https://legacy.reactjs.org/docs/hooks-intro.html","title":"hook"},{"location":"web/react/#fully-controlled-and-fully-uncontrolled-component","text":"https://legacy.reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html","title":"fully controlled and fully uncontrolled component."},{"location":"web/react/#useref","text":"Refs let a component hold some information that isn\u2019t used for rendering, like a DOM node or a timeout ID. Unlike with state, updating a ref does not re-render your component Only run once at initial render,","title":"useRef"},{"location":"web/react/#useeffect","text":"Run after browser repaint. useEffect : \u521d\u59cb\u5316\u7684\u65f6\u5019\u6267\u884c\u4e00\u6b21\uff0c\u6bcf\u5f53dependency\u53d8\u5316\u7684\u65f6\u5019\u6267\u884c\u4e00\u6b21\uff0cdependency=[]\u53ea\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u6267\u884c\u4e00\u6b21\uff0cno dependency \u6bcf\u6b21render\u7684\u65f6\u5019\u90fd\u4f1a\u6267\u884c\u3002","title":"useEffect"},{"location":"web/react/#uselayouteffect","text":"Run after render and before browser repaint. You can measure layout here. React guarantees that the code inside useLayoutEffect and any state updates scheduled inside it will be processed before the browser repaints the screen. This lets you render the tooltip, measure it, and re-render the tooltip again without the user noticing the first extra render. In other words, useLayoutEffect blocks the browser from painting. The purpose of useLayoutEffect is to let your component use layout information for rendering: Render the initial content. Measure the layout before the browser repaints the screen. Render the final content using the layout information you\u2019ve read.","title":"useLayoutEffect"},{"location":"web/react/#useinsertioneffect","text":"fires before React makes changes to the DOM. Libraries can insert dynamic CSS here.","title":"useInsertionEffect"},{"location":"web/react/#react-error-boundary","text":"https://github.com/bvaughn/react-error-boundary","title":"react-error-boundary"},{"location":"web/react/#animation","text":"https://legacy.reactjs.org/docs/animation.html","title":"animation"},{"location":"web/react/#react-router","text":"https://reactrouter.com/en/main https://v5.reactrouter.com/web/guides/server-rendering","title":"react router"},{"location":"web/svg/","text":"Paths Move To The 'x y' following uppercase 'M' is absolute values, lowercase 'm' is offset values. M x y (or) m dx dy Line draws a line from the current position to a new position L x y (or) l dx dy H draws a horizontal line, V draws a vertical line H x (or) h dx V y (or) v dy Close Path This command draws a straight line from the current position back to the first point of the path. There is no difference between the uppercase and lowercase command. Z (or) z Cubic B\u00e9ziers curve To create a cubic B\u00e9zier, three sets of coordinates need to be specified. The last set of coordinates here (x, y) specify where the line should end. The other two are control points. (x1, y1) is the control point for the start of the curve, and (x2, y2) is the control point for the end. The control points essentially describe the slope of the line starting at each point, then start point and the first control point describe the first slop, the second control point and the end point describe the end slop. The B\u00e9zier function then creates a smooth curve that transfers from the slope established at the beginning of the line, to the slope at the other end. C x1 y1, x2 y2, x y (or) c dx1 dy1, dx2 dy2, dx dy Note: The co-ordinate deltas for q are both relative to the previous point (that is, dx2 and dy2 are not relative to dx1 and dy1). Several B\u00e9zier curves can be strung together to create extended, smooth shapes. Often, the control point on one side of a point will be a reflection of the control point used on the other side to keep the slope constant. In this case, a shortcut version of the cubic B\u00e9zier can be used, designated by the command S (or s). It only take two set of coordinates, the The last set of coordinates here (x, y) specify where the line should end, the first set of coordinates here(x2 y2) specify the control point for the end, the control point for the start was infered from the previouse end slop and this end slop. If the S command doesn't follow another S or C command, then the current position of the cursor is used as the first control point. S x2 y2, x y (or) s dx2 dy2, dx dy Quadratic B\u00e9ziers curve The other type of B\u00e9zier curve, the quadratic curve called with Q, is actually a simpler curve than the cubic one. It requires one control point which determines the slope of the curve at both the start point and the end point. It takes two parameters: the control point and the end point of the curve. Q x1 y1, x y (or) q dx1 dy1, dx dy As with the cubic B\u00e9zier curve, there is a shortcut for stringing together multiple quadratic B\u00e9ziers, called with T. This shortcut takes one parameter: the end point of the curve. The control point was infered from the previous slop and this end point. This only works if the previous command was a Q or a T command. If not, then the control point is assumed to be the same as the previous point, and only lines will be drawn. T x y (or) t dx dy Arcs At its start, the arc element takes in two parameters for the x-radius and y-radius. The final two parameters designate the x and y coordinates to end the stroke. Together, these four values define the basic structure of the arc. A rx ry x-axis-rotation large-arc-flag sweep-flag x y a rx ry x-axis-rotation large-arc-flag sweep-flag dx dy tutorial mdn: https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes w3c: https://www.w3.org/TR/SVG/Overview.html advent calendar-themed SVG Tutorial: https://svg-tutorial.com/ https://www.w3.org/TR/SVG/coords.html#TransformMatrixDefined introduction to SVG svgprimer: https://www.w3.org/Graphics/SVG/IG/resources/svgprimer.html useful resources Inkscape's documentation: https://inkscape.org/learn/ drawing applications Inkscape: https://inkscape.org reference svgrepo: https://www.svgrepo.com/vectors","title":"Svg"},{"location":"web/svg/#paths","text":"Move To The 'x y' following uppercase 'M' is absolute values, lowercase 'm' is offset values. M x y (or) m dx dy Line draws a line from the current position to a new position L x y (or) l dx dy H draws a horizontal line, V draws a vertical line H x (or) h dx V y (or) v dy Close Path This command draws a straight line from the current position back to the first point of the path. There is no difference between the uppercase and lowercase command. Z (or) z Cubic B\u00e9ziers curve To create a cubic B\u00e9zier, three sets of coordinates need to be specified. The last set of coordinates here (x, y) specify where the line should end. The other two are control points. (x1, y1) is the control point for the start of the curve, and (x2, y2) is the control point for the end. The control points essentially describe the slope of the line starting at each point, then start point and the first control point describe the first slop, the second control point and the end point describe the end slop. The B\u00e9zier function then creates a smooth curve that transfers from the slope established at the beginning of the line, to the slope at the other end. C x1 y1, x2 y2, x y (or) c dx1 dy1, dx2 dy2, dx dy Note: The co-ordinate deltas for q are both relative to the previous point (that is, dx2 and dy2 are not relative to dx1 and dy1). Several B\u00e9zier curves can be strung together to create extended, smooth shapes. Often, the control point on one side of a point will be a reflection of the control point used on the other side to keep the slope constant. In this case, a shortcut version of the cubic B\u00e9zier can be used, designated by the command S (or s). It only take two set of coordinates, the The last set of coordinates here (x, y) specify where the line should end, the first set of coordinates here(x2 y2) specify the control point for the end, the control point for the start was infered from the previouse end slop and this end slop. If the S command doesn't follow another S or C command, then the current position of the cursor is used as the first control point. S x2 y2, x y (or) s dx2 dy2, dx dy Quadratic B\u00e9ziers curve The other type of B\u00e9zier curve, the quadratic curve called with Q, is actually a simpler curve than the cubic one. It requires one control point which determines the slope of the curve at both the start point and the end point. It takes two parameters: the control point and the end point of the curve. Q x1 y1, x y (or) q dx1 dy1, dx dy As with the cubic B\u00e9zier curve, there is a shortcut for stringing together multiple quadratic B\u00e9ziers, called with T. This shortcut takes one parameter: the end point of the curve. The control point was infered from the previous slop and this end point. This only works if the previous command was a Q or a T command. If not, then the control point is assumed to be the same as the previous point, and only lines will be drawn. T x y (or) t dx dy Arcs At its start, the arc element takes in two parameters for the x-radius and y-radius. The final two parameters designate the x and y coordinates to end the stroke. Together, these four values define the basic structure of the arc. A rx ry x-axis-rotation large-arc-flag sweep-flag x y a rx ry x-axis-rotation large-arc-flag sweep-flag dx dy","title":"Paths"},{"location":"web/svg/#tutorial","text":"mdn: https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes w3c: https://www.w3.org/TR/SVG/Overview.html advent calendar-themed SVG Tutorial: https://svg-tutorial.com/ https://www.w3.org/TR/SVG/coords.html#TransformMatrixDefined","title":"tutorial"},{"location":"web/svg/#introduction-to-svg","text":"svgprimer: https://www.w3.org/Graphics/SVG/IG/resources/svgprimer.html","title":"introduction to SVG"},{"location":"web/svg/#useful-resources","text":"Inkscape's documentation: https://inkscape.org/learn/","title":"useful resources"},{"location":"web/svg/#drawing-applications","text":"Inkscape: https://inkscape.org","title":"drawing applications"},{"location":"web/svg/#reference","text":"svgrepo: https://www.svgrepo.com/vectors","title":"reference"},{"location":"web/tailwind/","text":"","title":"Tailwind"},{"location":"web/typescript/","text":"https://www.typescriptlang.org/cheatsheets/","title":"Typescript"},{"location":"web/web/","text":"webdev https://web.dev/learn/css https://web.dev/articles/cls \u82f1\u8bed\u5b66\u4e60 DashPlayer \u7684\u76ee\u6807\u5c31\u662f\u65b9\u4fbf\u4f60\u89c2\u770b\u82f1\u6587\u89c6\u9891\uff1a https://github.com/solidSpoon/DashPlayer https://github.com/Hiram-Wong/ZyPlayer https://github.com/openai/openai-assistants-quickstart \u5b57\u5e55 https://x.com/jesselaunz/status/1771729386653278528 javascript MDN : https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export HTML_Drag_and_Drop_API: https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API Template literals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals ES Modules and Import / Export Syntax:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules Javascript.info: https://javascript.info/import-export DOM Introduction to the DOM: https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Examples IndexedDB https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API Web_Audio_API https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API https://github.com/mdn/webaudio-examples.git ElevenLabs \u63a8\u51fa Audio Native \u81ea\u52a8\u5c06\u4f60\u7684\u5185\u5bb9\u8f6c\u6362\u4e3a\u64ad\u5ba2 https://xiaohu.ai/p/8122 https://elevenlabs.io/docs/audio-native/audio-native-react https://elevenlabs.io/docs/audio-native/ghost https://elevenlabs.io/docs/audio-native/squarespace https://elevenlabs.io/blog/audio-native/ MathML https://developer.mozilla.org/en-US/docs/Web/MathML web terms https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview#the_modern_tooling_ecosystem How to view the DOM in Google Chrome: https://developer.chrome.com/docs/devtools/dom/ How to view the DOM in Firefox: https://firefox-source-docs.mozilla.org/devtools-user/debugger/how_to/highlight_and_inspect_dom_nodes/index.html DOM interface : https://developer.mozilla.org/en-US/docs/Web/API https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model react code: https://github.com/facebook/react reference: https://react.dev/reference/react https://react.dev/reference/react/forwardRef learn: https://react.dev/learn https://react.dev/learn/escape-hatches https://react.dev/learn/manipulating-the-dom-with-refs https://react.dev/learn/reusing-logic-with-custom-hooks Fixing Race Conditions in React with useEffect: https://maxrozen.com/race-conditions-fetching-data-react-with-useeffect https://www.robinwieruch.de/react-hooks-fetch-data/ React router https://beta.reactrouter.com/en/main/start/overview React query https://tanstack.com/query/latest/ sever component: https://react.dev/reference/react/use-client https://react.dev/reference/react/use-server https://react.dev/reference/react-dom/client/hydrateRoot#hydrating-server-rendered-html https://react.dev/blog/2023/03/22/react-labs-what-we-have-been-working-on-march-2023#react-server-components Concurrent APIs : https://react.dev/blog/2021/12/17/react-conf-2021-recap#react-18-and-concurrent-features nextjs https://nextjs.org/learn/dashboard-app github: https://github.com/vercel/next-learn learn : https://nextjs.org/learn doc: https://nextjs.org/docs https://nextjs.org/docs/app/building-your-application/rendering auth: https://authjs.dev/getting-started/providers/credentials-tutorial https://nextjs.org/docs/app/building-your-application/routing/middleware react-foundations: https://nextjs.org/learn/react-foundations vercel https://vercel.com/docs/projects/environment-variables https://vercel.com/docs/projects/domains/add-a-domain NextAuth.js https://next-auth.js.org/ Vercel Postgres SDK https://vercel.com/docs/storage/vercel-postgres/sdk Tailwind Css https://tailwindcss.com/ \u7ec4\u4ef6\uff1a https://www.hyperui.dev/components/marketing mockapi https://mockapi.io/projects JavaScript compiler, Babel https://babeljs.io/ clsx A tiny (239B) utility for constructing className strings conditionally. https://www.npmjs.com/package/clsx https://github.com/lukeed/clsx For data visualization UI, check out: https://www.tremor.so/ https://www.chartjs.org/ https://airbnb.io/visx/ web tool transform.tools: https://transform.tools/html-to-jsx devtools: https://developer.chrome.com/docs/devtools/open react debug tool: https://legacy.reactjs.org/blog/2018/09/10/introducing-the-react-profiler.html color transform: https://www.rapidtables.com/convert/color/rgb-to-hsl.html fonts https://fonts.google.com/ https://www.fontsquirrel.com/ converting from ttf to woff2: https://github.com/google/woff2 Introduction to variable fonts: https://web.dev/articles/variable-fonts colors https://uicolors.app/create https://css-tricks.com/the-expanding-gamut-of-color-on-the-web https://www.smashingmagazine.com/2021/07/hsl-colors-css/ translate: https://www.rapidtables.com/convert/color/rgb-to-hsl.html blog https://dbaron.org/log/20110225-blur-radius demo shop: http://shop.huanghanlian.com/ sql editor demo: https://demo.drizzle.studio/ webpack https://webpack.js.org/guides/tree-shaking/ blog https://shengxinjing.cn/source/ bezier https://cubic-bezier.com/#.42,0,.58,1 \u5927\u6587\u4ef6\u4e0a\u4f20 https://juejin.cn/post/6844904055819468808 https://github.com/shengxinjing/upload CSS-in-TS Stitches: https://stitches.dev/docs/variants Vanilla Extract : https://vanilla-extract.style/documentation/api/style-variants/ for tailwind: https://cva.style/docs/getting-started/variants styled-components: https://styled-components.com/ for nextjs: https://github.com/vercel/styled-jsx https://nextjs.org/docs/pages/building-your-application/styling/css-in-js icons heroicons https://github.com/tailwindlabs/heroicons https://github.com/jaywcjlove/icongo fontawesome\uff1ahttps://fontawesome.com/icons react-icons\uff1ahttps://react-icons.github.io/react-icons/ iconify\uff1ahttps://icon-sets.iconify.design lucide\uff1ahttps://lucide.dev https://pic.x.com/cfhqanubkk origin_policy https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy rgb-to-hsl https://www.rapidtables.com/convert/color/rgb-to-hsl.html roadmap https://roadmap.sh/frontend sell template https://themeforest.net/ storybook https://storybook.js.org/docs/configure/telemetry chrome extensions development https://developer.chrome.com/docs/extensions/get-started/tutorial/hello-world This new transition API (Chrome 111+) is so powerful and easy to use! I added some smooth page level animation to reactjs docs in 5 just minutes! https://developer.chrome.com/docs/web-platform/view-transitions/ Add secure login and session management to your apps: https://github.com/supertokens/supertokens-core https://github.com/shadcn-ui/taxonomy https://2019.wattenberger.com/blog/css-percents#width,height https://css-tricks.com/snippets/css/complete-guide-grid/#aa-special-units-functions https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-collapse https://clearlydecoded.com/html-or-html5-who-controls-html https://web.dev/?hl=zh-cn https://web.dev/blog/web-platform-01-2024?hl=zh-cn https://web.dev/learn/html","title":"Web"},{"location":"web/web/#webdev","text":"https://web.dev/learn/css https://web.dev/articles/cls","title":"webdev"},{"location":"web/web/#_1","text":"DashPlayer \u7684\u76ee\u6807\u5c31\u662f\u65b9\u4fbf\u4f60\u89c2\u770b\u82f1\u6587\u89c6\u9891\uff1a https://github.com/solidSpoon/DashPlayer https://github.com/Hiram-Wong/ZyPlayer https://github.com/openai/openai-assistants-quickstart \u5b57\u5e55 https://x.com/jesselaunz/status/1771729386653278528","title":"\u82f1\u8bed\u5b66\u4e60"},{"location":"web/web/#javascript","text":"MDN : https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export HTML_Drag_and_Drop_API: https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API Template literals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals ES Modules and Import / Export Syntax:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules Javascript.info: https://javascript.info/import-export","title":"javascript"},{"location":"web/web/#dom","text":"Introduction to the DOM: https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Examples","title":"DOM"},{"location":"web/web/#indexeddb","text":"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API","title":"IndexedDB"},{"location":"web/web/#web_audio_api","text":"https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API https://github.com/mdn/webaudio-examples.git","title":"Web_Audio_API"},{"location":"web/web/#elevenlabs-audio-native","text":"https://xiaohu.ai/p/8122 https://elevenlabs.io/docs/audio-native/audio-native-react https://elevenlabs.io/docs/audio-native/ghost https://elevenlabs.io/docs/audio-native/squarespace https://elevenlabs.io/blog/audio-native/","title":"ElevenLabs \u63a8\u51fa Audio Native \u81ea\u52a8\u5c06\u4f60\u7684\u5185\u5bb9\u8f6c\u6362\u4e3a\u64ad\u5ba2"},{"location":"web/web/#mathml","text":"https://developer.mozilla.org/en-US/docs/Web/MathML","title":"MathML"},{"location":"web/web/#web-terms","text":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview#the_modern_tooling_ecosystem How to view the DOM in Google Chrome: https://developer.chrome.com/docs/devtools/dom/ How to view the DOM in Firefox: https://firefox-source-docs.mozilla.org/devtools-user/debugger/how_to/highlight_and_inspect_dom_nodes/index.html DOM interface : https://developer.mozilla.org/en-US/docs/Web/API https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model","title":"web terms"},{"location":"web/web/#react","text":"code: https://github.com/facebook/react reference: https://react.dev/reference/react https://react.dev/reference/react/forwardRef learn: https://react.dev/learn https://react.dev/learn/escape-hatches https://react.dev/learn/manipulating-the-dom-with-refs https://react.dev/learn/reusing-logic-with-custom-hooks Fixing Race Conditions in React with useEffect: https://maxrozen.com/race-conditions-fetching-data-react-with-useeffect https://www.robinwieruch.de/react-hooks-fetch-data/ React router https://beta.reactrouter.com/en/main/start/overview React query https://tanstack.com/query/latest/ sever component: https://react.dev/reference/react/use-client https://react.dev/reference/react/use-server https://react.dev/reference/react-dom/client/hydrateRoot#hydrating-server-rendered-html https://react.dev/blog/2023/03/22/react-labs-what-we-have-been-working-on-march-2023#react-server-components Concurrent APIs : https://react.dev/blog/2021/12/17/react-conf-2021-recap#react-18-and-concurrent-features","title":"react"},{"location":"web/web/#nextjs","text":"https://nextjs.org/learn/dashboard-app github: https://github.com/vercel/next-learn learn : https://nextjs.org/learn doc: https://nextjs.org/docs https://nextjs.org/docs/app/building-your-application/rendering auth: https://authjs.dev/getting-started/providers/credentials-tutorial https://nextjs.org/docs/app/building-your-application/routing/middleware react-foundations: https://nextjs.org/learn/react-foundations","title":"nextjs"},{"location":"web/web/#vercel","text":"https://vercel.com/docs/projects/environment-variables https://vercel.com/docs/projects/domains/add-a-domain","title":"vercel"},{"location":"web/web/#nextauthjs","text":"https://next-auth.js.org/","title":"NextAuth.js"},{"location":"web/web/#vercel-postgres-sdk","text":"https://vercel.com/docs/storage/vercel-postgres/sdk","title":"Vercel Postgres SDK"},{"location":"web/web/#tailwind-css","text":"https://tailwindcss.com/ \u7ec4\u4ef6\uff1a https://www.hyperui.dev/components/marketing","title":"Tailwind Css"},{"location":"web/web/#mockapi","text":"https://mockapi.io/projects","title":"mockapi"},{"location":"web/web/#javascript-compiler-babel","text":"https://babeljs.io/","title":"JavaScript compiler, Babel"},{"location":"web/web/#clsx","text":"A tiny (239B) utility for constructing className strings conditionally. https://www.npmjs.com/package/clsx https://github.com/lukeed/clsx","title":"clsx"},{"location":"web/web/#for-data-visualization-ui-check-out","text":"https://www.tremor.so/ https://www.chartjs.org/ https://airbnb.io/visx/","title":"For data visualization UI, check out:"},{"location":"web/web/#web-tool","text":"transform.tools: https://transform.tools/html-to-jsx devtools: https://developer.chrome.com/docs/devtools/open react debug tool: https://legacy.reactjs.org/blog/2018/09/10/introducing-the-react-profiler.html color transform: https://www.rapidtables.com/convert/color/rgb-to-hsl.html","title":"web tool"},{"location":"web/web/#fonts","text":"https://fonts.google.com/ https://www.fontsquirrel.com/ converting from ttf to woff2: https://github.com/google/woff2 Introduction to variable fonts: https://web.dev/articles/variable-fonts","title":"fonts"},{"location":"web/web/#colors","text":"https://uicolors.app/create https://css-tricks.com/the-expanding-gamut-of-color-on-the-web https://www.smashingmagazine.com/2021/07/hsl-colors-css/ translate: https://www.rapidtables.com/convert/color/rgb-to-hsl.html","title":"colors"},{"location":"web/web/#blog","text":"https://dbaron.org/log/20110225-blur-radius","title":"blog"},{"location":"web/web/#demo","text":"shop: http://shop.huanghanlian.com/ sql editor demo: https://demo.drizzle.studio/","title":"demo"},{"location":"web/web/#webpack","text":"https://webpack.js.org/guides/tree-shaking/","title":"webpack"},{"location":"web/web/#blog_1","text":"https://shengxinjing.cn/source/","title":"blog"},{"location":"web/web/#bezier","text":"https://cubic-bezier.com/#.42,0,.58,1","title":"bezier"},{"location":"web/web/#_2","text":"https://juejin.cn/post/6844904055819468808 https://github.com/shengxinjing/upload","title":"\u5927\u6587\u4ef6\u4e0a\u4f20"},{"location":"web/web/#css-in-ts","text":"Stitches: https://stitches.dev/docs/variants Vanilla Extract : https://vanilla-extract.style/documentation/api/style-variants/ for tailwind: https://cva.style/docs/getting-started/variants styled-components: https://styled-components.com/ for nextjs: https://github.com/vercel/styled-jsx https://nextjs.org/docs/pages/building-your-application/styling/css-in-js","title":"CSS-in-TS"},{"location":"web/web/#icons","text":"heroicons https://github.com/tailwindlabs/heroicons https://github.com/jaywcjlove/icongo fontawesome\uff1ahttps://fontawesome.com/icons react-icons\uff1ahttps://react-icons.github.io/react-icons/ iconify\uff1ahttps://icon-sets.iconify.design lucide\uff1ahttps://lucide.dev https://pic.x.com/cfhqanubkk","title":"icons"},{"location":"web/web/#origin_policy","text":"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy","title":"origin_policy"},{"location":"web/web/#rgb-to-hsl","text":"https://www.rapidtables.com/convert/color/rgb-to-hsl.html","title":"rgb-to-hsl"},{"location":"web/web/#roadmap","text":"https://roadmap.sh/frontend","title":"roadmap"},{"location":"web/web/#sell-template","text":"https://themeforest.net/","title":"sell template"},{"location":"web/web/#storybook","text":"https://storybook.js.org/docs/configure/telemetry","title":"storybook"},{"location":"web/web/#chrome-extensions-development","text":"https://developer.chrome.com/docs/extensions/get-started/tutorial/hello-world This new transition API (Chrome 111+) is so powerful and easy to use! I added some smooth page level animation to reactjs docs in 5 just minutes! https://developer.chrome.com/docs/web-platform/view-transitions/ Add secure login and session management to your apps: https://github.com/supertokens/supertokens-core https://github.com/shadcn-ui/taxonomy https://2019.wattenberger.com/blog/css-percents#width,height https://css-tricks.com/snippets/css/complete-guide-grid/#aa-special-units-functions https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-collapse https://clearlydecoded.com/html-or-html5-who-controls-html https://web.dev/?hl=zh-cn https://web.dev/blog/web-platform-01-2024?hl=zh-cn https://web.dev/learn/html","title":"chrome extensions development"},{"location":"wireshark/wireshark/","text":"query udp.port == 53 and ip.addr == 10.33.1.94","title":"Wireshark"},{"location":"wireshark/wireshark/#query","text":"udp.port == 53 and ip.addr == 10.33.1.94","title":"query"}]}